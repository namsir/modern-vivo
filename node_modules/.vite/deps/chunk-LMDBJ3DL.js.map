{
  "version": 3,
  "sources": ["../../vidstack/dev/chunks/vidstack-7RO-J1Y1.js"],
  "sourcesContent": ["import { DOMEvent, EventsTarget, fscreen, ViewController, EventsController, onDispose, signal, listenEvent, peek, isNumber, isString, State, tick, Component, functionThrottle, effect, untrack, functionDebounce, isArray, isKeyboardClick, isKeyboardEvent, waitIdlePeriod, deferredPromise, isUndefined, prop, method, provideContext, setAttribute, animationFrameThrottle, uppercaseFirstChar, camelToKebabCase, setStyle, computed, scoped, noop } from './vidstack-Bu2kfzUd.js';\nimport { mediaContext, useMediaContext } from './vidstack-DFImIcIL.js';\nimport { canOrientScreen, IS_IPHONE, isAudioSrc, canPlayAudioType, isVideoSrc, canPlayVideoType, isHLSSupported, isHLSSrc, isDASHSupported, isDASHSrc, IS_CHROME, IS_IOS, canGoogleCastSrc, canChangeVolume } from './vidstack-CjhKISI0.js';\nimport { TimeRange, getTimeRangesEnd, getTimeRangesStart, updateTimeIntervals } from './vidstack-BFg1ZqiG.js';\nimport { isTrackCaptionKind, TextTrackSymbol, TextTrack } from './vidstack-BYNmVJLa.js';\nimport { ListSymbol } from './vidstack-Dv_LIPFu.js';\nimport { QualitySymbol } from './vidstack-Bpr4fI4n.js';\nimport { coerceToError } from './vidstack-DbBJlz7I.js';\nimport { preconnect, getRequestCredentials } from './vidstack-zG6PIeGg.js';\nimport { isHTMLElement, isTouchPinchEvent, prefersReducedMotion, setAttributeIfEmpty } from './vidstack-C_l97D5j.js';\nimport { round, clampNumber } from './vidstack-Dihypf8P.js';\nimport { FocusVisibleController } from './vidstack-CofXIJAy.js';\n\nconst GROUPED_LOG = Symbol(\"GROUPED_LOG\" );\nclass GroupedLog {\n  constructor(logger, level, title, root, parent) {\n    this.logger = logger;\n    this.level = level;\n    this.title = title;\n    this.root = root;\n    this.parent = parent;\n  }\n  [GROUPED_LOG] = true;\n  logs = [];\n  log(...data) {\n    this.logs.push({ data });\n    return this;\n  }\n  labelledLog(label, ...data) {\n    this.logs.push({ label, data });\n    return this;\n  }\n  groupStart(title) {\n    return new GroupedLog(this.logger, this.level, title, this.root ?? this, this);\n  }\n  groupEnd() {\n    this.parent?.logs.push(this);\n    return this.parent ?? this;\n  }\n  dispatch() {\n    return this.logger.dispatch(this.level, this.root ?? this);\n  }\n}\nfunction isGroupedLog(data) {\n  return !!data?.[GROUPED_LOG];\n}\n\nclass Logger {\n  #target = null;\n  error(...data) {\n    return this.dispatch(\"error\", ...data);\n  }\n  warn(...data) {\n    return this.dispatch(\"warn\", ...data);\n  }\n  info(...data) {\n    return this.dispatch(\"info\", ...data);\n  }\n  debug(...data) {\n    return this.dispatch(\"debug\", ...data);\n  }\n  errorGroup(title) {\n    return new GroupedLog(this, \"error\", title);\n  }\n  warnGroup(title) {\n    return new GroupedLog(this, \"warn\", title);\n  }\n  infoGroup(title) {\n    return new GroupedLog(this, \"info\", title);\n  }\n  debugGroup(title) {\n    return new GroupedLog(this, \"debug\", title);\n  }\n  setTarget(newTarget) {\n    this.#target = newTarget;\n  }\n  dispatch(level, ...data) {\n    return this.#target?.dispatchEvent(\n      new DOMEvent(\"vds-log\", {\n        bubbles: true,\n        composed: true,\n        detail: { level, data }\n      })\n    ) || false;\n  }\n}\n\nclass List extends EventsTarget {\n  items = [];\n  /** @internal */\n  [ListSymbol.readonly] = false;\n  get length() {\n    return this.items.length;\n  }\n  get readonly() {\n    return this[ListSymbol.readonly];\n  }\n  /**\n   * Returns the index of the first occurrence of the given item, or -1 if it is not present.\n   */\n  indexOf(item) {\n    return this.items.indexOf(item);\n  }\n  /**\n   * Returns an item matching the given `id`, or `null` if not present.\n   */\n  getById(id) {\n    if (id === \"\") return null;\n    return this.items.find((item) => item.id === id) ?? null;\n  }\n  /**\n   * Transform list to an array.\n   */\n  toArray() {\n    return [...this.items];\n  }\n  [Symbol.iterator]() {\n    return this.items.values();\n  }\n  /** @internal */\n  [ListSymbol.add](item, trigger) {\n    const index = this.items.length;\n    if (!(\"\" + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.items[index];\n        }\n      });\n    }\n    if (this.items.includes(item)) return;\n    this.items.push(item);\n    this.dispatchEvent(new DOMEvent(\"add\", { detail: item, trigger }));\n  }\n  /** @internal */\n  [ListSymbol.remove](item, trigger) {\n    const index = this.items.indexOf(item);\n    if (index >= 0) {\n      this[ListSymbol.onRemove]?.(item, trigger);\n      this.items.splice(index, 1);\n      this.dispatchEvent(new DOMEvent(\"remove\", { detail: item, trigger }));\n    }\n  }\n  /** @internal */\n  [ListSymbol.reset](trigger) {\n    for (const item of [...this.items]) this[ListSymbol.remove](item, trigger);\n    this.items = [];\n    this[ListSymbol.setReadonly](false, trigger);\n    this[ListSymbol.onReset]?.();\n  }\n  /** @internal */\n  [ListSymbol.setReadonly](readonly, trigger) {\n    if (this[ListSymbol.readonly] === readonly) return;\n    this[ListSymbol.readonly] = readonly;\n    this.dispatchEvent(new DOMEvent(\"readonly-change\", { detail: readonly, trigger }));\n  }\n}\n\nconst CAN_FULLSCREEN = fscreen.fullscreenEnabled;\nclass FullscreenController extends ViewController {\n  /**\n   * Tracks whether we're the active fullscreen event listener. Fullscreen events can only be\n   * listened to globally on the document so we need to know if they relate to the current host\n   * element or not.\n   */\n  #listening = false;\n  #active = false;\n  get active() {\n    return this.#active;\n  }\n  get supported() {\n    return CAN_FULLSCREEN;\n  }\n  onConnect() {\n    new EventsController(fscreen).add(\"fullscreenchange\", this.#onChange.bind(this)).add(\"fullscreenerror\", this.#onError.bind(this));\n    onDispose(this.#onDisconnect.bind(this));\n  }\n  async #onDisconnect() {\n    if (CAN_FULLSCREEN) await this.exit();\n  }\n  #onChange(event) {\n    const active = isFullscreen(this.el);\n    if (active === this.#active) return;\n    if (!active) this.#listening = false;\n    this.#active = active;\n    this.dispatch(\"fullscreen-change\", { detail: active, trigger: event });\n  }\n  #onError(event) {\n    if (!this.#listening) return;\n    this.dispatch(\"fullscreen-error\", { detail: null, trigger: event });\n    this.#listening = false;\n  }\n  async enter() {\n    try {\n      this.#listening = true;\n      if (!this.el || isFullscreen(this.el)) return;\n      assertFullscreenAPI();\n      return fscreen.requestFullscreen(this.el);\n    } catch (error) {\n      this.#listening = false;\n      throw error;\n    }\n  }\n  async exit() {\n    if (!this.el || !isFullscreen(this.el)) return;\n    assertFullscreenAPI();\n    return fscreen.exitFullscreen();\n  }\n}\nfunction canFullscreen() {\n  return CAN_FULLSCREEN;\n}\nfunction isFullscreen(host) {\n  if (fscreen.fullscreenElement === host) return true;\n  try {\n    return host.matches(\n      // @ts-expect-error - `fullscreenPseudoClass` is missing from `@types/fscreen`.\n      fscreen.fullscreenPseudoClass\n    );\n  } catch (error) {\n    return false;\n  }\n}\nfunction assertFullscreenAPI() {\n  if (CAN_FULLSCREEN) return;\n  throw Error(\n    \"[vidstack] fullscreen API is not enabled or supported in this environment\" \n  );\n}\n\nclass ScreenOrientationController extends ViewController {\n  #type = signal(this.#getScreenOrientation());\n  #locked = signal(false);\n  #currentLock;\n  /**\n   * The current screen orientation type.\n   *\n   * @signal\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/ScreenOrientation}\n   * @see https://w3c.github.io/screen-orientation/#screen-orientation-types-and-locks\n   */\n  get type() {\n    return this.#type();\n  }\n  /**\n   * Whether the screen orientation is currently locked.\n   *\n   * @signal\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/ScreenOrientation}\n   * @see https://w3c.github.io/screen-orientation/#screen-orientation-types-and-locks\n   */\n  get locked() {\n    return this.#locked();\n  }\n  /**\n   * Whether the viewport is in a portrait orientation.\n   *\n   * @signal\n   */\n  get portrait() {\n    return this.#type().startsWith(\"portrait\");\n  }\n  /**\n   * Whether the viewport is in a landscape orientation.\n   *\n   * @signal\n   */\n  get landscape() {\n    return this.#type().startsWith(\"landscape\");\n  }\n  /**\n   * Whether the native Screen Orientation API is available.\n   */\n  static supported = canOrientScreen();\n  /**\n   * Whether the native Screen Orientation API is available.\n   */\n  get supported() {\n    return ScreenOrientationController.supported;\n  }\n  onConnect() {\n    if (this.supported) {\n      listenEvent(screen.orientation, \"change\", this.#onOrientationChange.bind(this));\n    } else {\n      const query = window.matchMedia(\"(orientation: landscape)\");\n      query.onchange = this.#onOrientationChange.bind(this);\n      onDispose(() => query.onchange = null);\n    }\n    onDispose(this.#onDisconnect.bind(this));\n  }\n  async #onDisconnect() {\n    if (this.supported && this.#locked()) await this.unlock();\n  }\n  #onOrientationChange(event) {\n    this.#type.set(this.#getScreenOrientation());\n    this.dispatch(\"orientation-change\", {\n      detail: {\n        orientation: peek(this.#type),\n        lock: this.#currentLock\n      },\n      trigger: event\n    });\n  }\n  /**\n   * Locks the orientation of the screen to the desired orientation type using the\n   * Screen Orientation API.\n   *\n   * @param lockType - The screen lock orientation type.\n   * @throws Error - If screen orientation API is unavailable.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Screen/orientation}\n   * @see {@link https://w3c.github.io/screen-orientation}\n   */\n  async lock(lockType) {\n    if (peek(this.#locked) || this.#currentLock === lockType) return;\n    this.#assertScreenOrientationAPI();\n    await screen.orientation.lock(lockType);\n    this.#locked.set(true);\n    this.#currentLock = lockType;\n  }\n  /**\n   * Unlocks the orientation of the screen to it's default state using the Screen Orientation\n   * API. This method will throw an error if the API is unavailable.\n   *\n   * @throws Error - If screen orientation API is unavailable.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Screen/orientation}\n   * @see {@link https://w3c.github.io/screen-orientation}\n   */\n  async unlock() {\n    if (!peek(this.#locked)) return;\n    this.#assertScreenOrientationAPI();\n    this.#currentLock = void 0;\n    await screen.orientation.unlock();\n    this.#locked.set(false);\n  }\n  #assertScreenOrientationAPI() {\n    if (this.supported) return;\n    throw Error(\n      \"[vidstack] screen orientation API is not available\" \n    );\n  }\n  #getScreenOrientation() {\n    if (this.supported) return window.screen.orientation.type;\n    return window.innerWidth >= window.innerHeight ? \"landscape-primary\" : \"portrait-primary\";\n  }\n}\n\nfunction isVideoQualitySrc(src) {\n  return !isString(src) && \"width\" in src && \"height\" in src && isNumber(src.width) && isNumber(src.height);\n}\n\nconst mediaState = new State({\n  artist: \"\",\n  artwork: null,\n  audioTrack: null,\n  audioTracks: [],\n  autoPlay: false,\n  autoPlayError: null,\n  audioGain: null,\n  buffered: new TimeRange(),\n  canLoad: false,\n  canLoadPoster: false,\n  canFullscreen: false,\n  canOrientScreen: canOrientScreen(),\n  canPictureInPicture: false,\n  canPlay: false,\n  clipStartTime: 0,\n  clipEndTime: 0,\n  controls: false,\n  get iOSControls() {\n    return IS_IPHONE && this.mediaType === \"video\" && (!this.playsInline || !fscreen.fullscreenEnabled && this.fullscreen);\n  },\n  get nativeControls() {\n    return this.controls || this.iOSControls;\n  },\n  controlsVisible: false,\n  get controlsHidden() {\n    return !this.controlsVisible;\n  },\n  crossOrigin: null,\n  ended: false,\n  error: null,\n  fullscreen: false,\n  get loop() {\n    return this.providedLoop || this.userPrefersLoop;\n  },\n  logLevel: \"warn\" ,\n  mediaType: \"unknown\",\n  muted: false,\n  paused: true,\n  played: new TimeRange(),\n  playing: false,\n  playsInline: false,\n  pictureInPicture: false,\n  preload: \"metadata\",\n  playbackRate: 1,\n  qualities: [],\n  quality: null,\n  autoQuality: false,\n  canSetQuality: true,\n  canSetPlaybackRate: true,\n  canSetVolume: false,\n  canSetAudioGain: false,\n  seekable: new TimeRange(),\n  seeking: false,\n  source: { src: \"\", type: \"\" },\n  sources: [],\n  started: false,\n  textTracks: [],\n  textTrack: null,\n  get hasCaptions() {\n    return this.textTracks.filter(isTrackCaptionKind).length > 0;\n  },\n  volume: 1,\n  waiting: false,\n  realCurrentTime: 0,\n  get currentTime() {\n    return this.ended ? this.duration : this.clipStartTime > 0 ? Math.max(0, Math.min(this.realCurrentTime - this.clipStartTime, this.duration)) : this.realCurrentTime;\n  },\n  providedDuration: -1,\n  intrinsicDuration: 0,\n  get duration() {\n    return this.seekableWindow;\n  },\n  get title() {\n    return this.providedTitle || this.inferredTitle;\n  },\n  get poster() {\n    return this.providedPoster || this.inferredPoster;\n  },\n  get viewType() {\n    return this.providedViewType !== \"unknown\" ? this.providedViewType : this.inferredViewType;\n  },\n  get streamType() {\n    return this.providedStreamType !== \"unknown\" ? this.providedStreamType : this.inferredStreamType;\n  },\n  get currentSrc() {\n    return this.source;\n  },\n  get bufferedStart() {\n    const start = getTimeRangesStart(this.buffered) ?? 0;\n    return Math.max(start, this.clipStartTime);\n  },\n  get bufferedEnd() {\n    const end = getTimeRangesEnd(this.buffered) ?? 0;\n    return Math.min(this.seekableEnd, Math.max(0, end - this.clipStartTime));\n  },\n  get bufferedWindow() {\n    return Math.max(0, this.bufferedEnd - this.bufferedStart);\n  },\n  get seekableStart() {\n    if (this.isLiveDVR && this.liveDVRWindow > 0) {\n      return Math.max(0, this.seekableEnd - this.liveDVRWindow);\n    }\n    const start = getTimeRangesStart(this.seekable) ?? 0;\n    return Math.max(start, this.clipStartTime);\n  },\n  get seekableEnd() {\n    if (this.providedDuration > 0) return this.providedDuration;\n    const end = this.liveSyncPosition > 0 ? this.liveSyncPosition : this.canPlay ? getTimeRangesEnd(this.seekable) ?? Infinity : 0;\n    return this.clipEndTime > 0 ? Math.min(this.clipEndTime, end) : end;\n  },\n  get seekableWindow() {\n    const window = this.seekableEnd - this.seekableStart;\n    return !isNaN(window) ? Math.max(0, window) : Infinity;\n  },\n  // ~~ remote playback ~~\n  canAirPlay: false,\n  canGoogleCast: false,\n  remotePlaybackState: \"disconnected\",\n  remotePlaybackType: \"none\",\n  remotePlaybackLoader: null,\n  remotePlaybackInfo: null,\n  get isAirPlayConnected() {\n    return this.remotePlaybackType === \"airplay\" && this.remotePlaybackState === \"connected\";\n  },\n  get isGoogleCastConnected() {\n    return this.remotePlaybackType === \"google-cast\" && this.remotePlaybackState === \"connected\";\n  },\n  // ~~ responsive design ~~\n  pointer: \"fine\",\n  orientation: \"landscape\",\n  width: 0,\n  height: 0,\n  mediaWidth: 0,\n  mediaHeight: 0,\n  lastKeyboardAction: null,\n  // ~~ user props ~~\n  userBehindLiveEdge: false,\n  // ~~ live props ~~\n  liveEdgeTolerance: 10,\n  minLiveDVRWindow: 60,\n  get canSeek() {\n    return /unknown|on-demand|:dvr/.test(this.streamType) && Number.isFinite(this.duration) && (!this.isLiveDVR || this.duration >= this.liveDVRWindow);\n  },\n  get live() {\n    return this.streamType.includes(\"live\") || !Number.isFinite(this.duration);\n  },\n  get liveEdgeStart() {\n    return this.live && Number.isFinite(this.seekableEnd) ? Math.max(0, this.seekableEnd - this.liveEdgeTolerance) : 0;\n  },\n  get liveEdge() {\n    return this.live && (!this.canSeek || !this.userBehindLiveEdge && this.currentTime >= this.liveEdgeStart);\n  },\n  get liveEdgeWindow() {\n    return this.live && Number.isFinite(this.seekableEnd) ? this.seekableEnd - this.liveEdgeStart : 0;\n  },\n  get isLiveDVR() {\n    return /:dvr/.test(this.streamType);\n  },\n  get liveDVRWindow() {\n    return Math.max(this.inferredLiveDVRWindow, this.minLiveDVRWindow);\n  },\n  // ~~ internal props ~~\n  autoPlaying: false,\n  providedTitle: \"\",\n  inferredTitle: \"\",\n  providedLoop: false,\n  userPrefersLoop: false,\n  providedPoster: \"\",\n  inferredPoster: \"\",\n  inferredViewType: \"unknown\",\n  providedViewType: \"unknown\",\n  providedStreamType: \"unknown\",\n  inferredStreamType: \"unknown\",\n  liveSyncPosition: null,\n  inferredLiveDVRWindow: 0,\n  savedState: null\n});\nconst RESET_ON_SRC_QUALITY_CHANGE = /* @__PURE__ */ new Set([\n  \"autoPlayError\",\n  \"autoPlaying\",\n  \"buffered\",\n  \"canPlay\",\n  \"error\",\n  \"paused\",\n  \"played\",\n  \"playing\",\n  \"seekable\",\n  \"seeking\",\n  \"waiting\"\n]);\nconst RESET_ON_SRC_CHANGE = /* @__PURE__ */ new Set([\n  ...RESET_ON_SRC_QUALITY_CHANGE,\n  \"ended\",\n  \"inferredPoster\",\n  \"inferredStreamType\",\n  \"inferredTitle\",\n  \"intrinsicDuration\",\n  \"inferredLiveDVRWindow\",\n  \"liveSyncPosition\",\n  \"realCurrentTime\",\n  \"savedState\",\n  \"started\",\n  \"userBehindLiveEdge\"\n]);\nfunction softResetMediaState($media, isSourceQualityChange = false) {\n  const filter = isSourceQualityChange ? RESET_ON_SRC_QUALITY_CHANGE : RESET_ON_SRC_CHANGE;\n  mediaState.reset($media, (prop) => filter.has(prop));\n  tick();\n}\nfunction boundTime(time, store) {\n  const clippedTime = time + store.clipStartTime(), isStart = Math.floor(time) === Math.floor(store.seekableStart()), isEnd = Math.floor(clippedTime) === Math.floor(store.seekableEnd());\n  if (isStart) {\n    return store.seekableStart();\n  }\n  if (isEnd) {\n    return store.seekableEnd();\n  }\n  if (store.isLiveDVR() && store.liveDVRWindow() > 0 && clippedTime < store.seekableEnd() - store.liveDVRWindow()) {\n    return store.bufferedStart();\n  }\n  return Math.min(Math.max(store.seekableStart() + 0.1, clippedTime), store.seekableEnd() - 0.1);\n}\n\nclass MediaRemoteControl {\n  #target = null;\n  #player = null;\n  #prevTrackIndex = -1;\n  #logger;\n  constructor(logger = new Logger() ) {\n    this.#logger = logger;\n  }\n  /**\n   * Set the target from which to dispatch media requests events from. The events should bubble\n   * up from this target to the player element.\n   *\n   * @example\n   * ```ts\n   * const button = document.querySelector('button');\n   * remote.setTarget(button);\n   * ```\n   */\n  setTarget(target) {\n    this.#target = target;\n    this.#logger?.setTarget(target);\n  }\n  /**\n   * Returns the current player element. This method will attempt to find the player by\n   * searching up from either the given `target` or default target set via `remote.setTarget`.\n   *\n   * @example\n   * ```ts\n   * const player = remote.getPlayer();\n   * ```\n   */\n  getPlayer(target) {\n    if (this.#player) return this.#player;\n    (target ?? this.#target)?.dispatchEvent(\n      new DOMEvent(\"find-media-player\", {\n        detail: (player) => void (this.#player = player),\n        bubbles: true,\n        composed: true\n      })\n    );\n    return this.#player;\n  }\n  /**\n   * Set the current player element so the remote can support toggle methods such as\n   * `togglePaused` as they rely on the current media state.\n   */\n  setPlayer(player) {\n    this.#player = player;\n  }\n  /**\n   * Dispatch a request to start the media loading process. This will only work if the media\n   * player has been initialized with a custom loading strategy `load=\"custom\">`.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/core-concepts/loading#load-strategies}\n   */\n  startLoading(trigger) {\n    this.#dispatchRequest(\"media-start-loading\", trigger);\n  }\n  /**\n   * Dispatch a request to start the poster loading process. This will only work if the media\n   * player has been initialized with a custom poster loading strategy `posterLoad=\"custom\">`.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/core-concepts/loading#load-strategies}\n   */\n  startLoadingPoster(trigger) {\n    this.#dispatchRequest(\"media-poster-start-loading\", trigger);\n  }\n  /**\n   * Dispatch a request to connect to AirPlay.\n   *\n   * @see {@link https://www.apple.com/au/airplay}\n   */\n  requestAirPlay(trigger) {\n    this.#dispatchRequest(\"media-airplay-request\", trigger);\n  }\n  /**\n   * Dispatch a request to connect to Google Cast.\n   *\n   * @see {@link https://developers.google.com/cast/docs/overview}\n   */\n  requestGoogleCast(trigger) {\n    this.#dispatchRequest(\"media-google-cast-request\", trigger);\n  }\n  /**\n   * Dispatch a request to begin/resume media playback.\n   */\n  play(trigger) {\n    this.#dispatchRequest(\"media-play-request\", trigger);\n  }\n  /**\n   * Dispatch a request to pause media playback.\n   */\n  pause(trigger) {\n    this.#dispatchRequest(\"media-pause-request\", trigger);\n  }\n  /**\n   * Dispatch a request to set the media volume to mute (0).\n   */\n  mute(trigger) {\n    this.#dispatchRequest(\"media-mute-request\", trigger);\n  }\n  /**\n   * Dispatch a request to unmute the media volume and set it back to it's previous state.\n   */\n  unmute(trigger) {\n    this.#dispatchRequest(\"media-unmute-request\", trigger);\n  }\n  /**\n   * Dispatch a request to enter fullscreen.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/api/fullscreen#remote-control}\n   */\n  enterFullscreen(target, trigger) {\n    this.#dispatchRequest(\"media-enter-fullscreen-request\", trigger, target);\n  }\n  /**\n   * Dispatch a request to exit fullscreen.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/api/fullscreen#remote-control}\n   */\n  exitFullscreen(target, trigger) {\n    this.#dispatchRequest(\"media-exit-fullscreen-request\", trigger, target);\n  }\n  /**\n   * Dispatch a request to lock the screen orientation.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/screen-orientation#remote-control}\n   */\n  lockScreenOrientation(lockType, trigger) {\n    this.#dispatchRequest(\"media-orientation-lock-request\", trigger, lockType);\n  }\n  /**\n   * Dispatch a request to unlock the screen orientation.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/api/screen-orientation#remote-control}\n   */\n  unlockScreenOrientation(trigger) {\n    this.#dispatchRequest(\"media-orientation-unlock-request\", trigger);\n  }\n  /**\n   * Dispatch a request to enter picture-in-picture mode.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/api/picture-in-picture#remote-control}\n   */\n  enterPictureInPicture(trigger) {\n    this.#dispatchRequest(\"media-enter-pip-request\", trigger);\n  }\n  /**\n   * Dispatch a request to exit picture-in-picture mode.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/api/picture-in-picture#remote-control}\n   */\n  exitPictureInPicture(trigger) {\n    this.#dispatchRequest(\"media-exit-pip-request\", trigger);\n  }\n  /**\n   * Notify the media player that a seeking process is happening and to seek to the given `time`.\n   */\n  seeking(time, trigger) {\n    this.#dispatchRequest(\"media-seeking-request\", trigger, time);\n  }\n  /**\n   * Notify the media player that a seeking operation has completed and to seek to the given `time`.\n   * This is generally called after a series of `remote.seeking()` calls.\n   */\n  seek(time, trigger) {\n    this.#dispatchRequest(\"media-seek-request\", trigger, time);\n  }\n  seekToLiveEdge(trigger) {\n    this.#dispatchRequest(\"media-live-edge-request\", trigger);\n  }\n  /**\n   * Dispatch a request to update the length of the media in seconds.\n   *\n   * @example\n   * ```ts\n   * remote.changeDuration(100); // 100 seconds\n   * ```\n   */\n  changeDuration(duration, trigger) {\n    this.#dispatchRequest(\"media-duration-change-request\", trigger, duration);\n  }\n  /**\n   * Dispatch a request to update the clip start time. This is the time at which media playback\n   * should start at.\n   *\n   * @example\n   * ```ts\n   * remote.changeClipStart(100); // start at 100 seconds\n   * ```\n   */\n  changeClipStart(startTime, trigger) {\n    this.#dispatchRequest(\"media-clip-start-change-request\", trigger, startTime);\n  }\n  /**\n   * Dispatch a request to update the clip end time. This is the time at which media playback\n   * should end at.\n   *\n   * @example\n   * ```ts\n   * remote.changeClipEnd(100); // end at 100 seconds\n   * ```\n   */\n  changeClipEnd(endTime, trigger) {\n    this.#dispatchRequest(\"media-clip-end-change-request\", trigger, endTime);\n  }\n  /**\n   * Dispatch a request to update the media volume to the given `volume` level which is a value\n   * between 0 and 1.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/api/audio-gain#remote-control}\n   * @example\n   * ```ts\n   * remote.changeVolume(0); // 0%\n   * remote.changeVolume(0.05); // 5%\n   * remote.changeVolume(0.5); // 50%\n   * remote.changeVolume(0.75); // 70%\n   * remote.changeVolume(1); // 100%\n   * ```\n   */\n  changeVolume(volume, trigger) {\n    this.#dispatchRequest(\"media-volume-change-request\", trigger, Math.max(0, Math.min(1, volume)));\n  }\n  /**\n   * Dispatch a request to change the current audio track.\n   *\n   * @example\n   * ```ts\n   * remote.changeAudioTrack(1); // track at index 1\n   * ```\n   */\n  changeAudioTrack(index, trigger) {\n    this.#dispatchRequest(\"media-audio-track-change-request\", trigger, index);\n  }\n  /**\n   * Dispatch a request to change the video quality. The special value `-1` represents auto quality\n   * selection.\n   *\n   * @example\n   * ```ts\n   * remote.changeQuality(-1); // auto\n   * remote.changeQuality(1); // quality at index 1\n   * ```\n   */\n  changeQuality(index, trigger) {\n    this.#dispatchRequest(\"media-quality-change-request\", trigger, index);\n  }\n  /**\n   * Request auto quality selection.\n   */\n  requestAutoQuality(trigger) {\n    this.changeQuality(-1, trigger);\n  }\n  /**\n   * Dispatch a request to change the mode of the text track at the given index.\n   *\n   * @example\n   * ```ts\n   * remote.changeTextTrackMode(1, 'showing'); // track at index 1\n   * ```\n   */\n  changeTextTrackMode(index, mode, trigger) {\n    this.#dispatchRequest(\"media-text-track-change-request\", trigger, {\n      index,\n      mode\n    });\n  }\n  /**\n   * Dispatch a request to change the media playback rate.\n   *\n   * @example\n   * ```ts\n   * remote.changePlaybackRate(0.5); // Half the normal speed\n   * remote.changePlaybackRate(1); // Normal speed\n   * remote.changePlaybackRate(1.5); // 50% faster than normal\n   * remote.changePlaybackRate(2); // Double the normal speed\n   * ```\n   */\n  changePlaybackRate(rate, trigger) {\n    this.#dispatchRequest(\"media-rate-change-request\", trigger, rate);\n  }\n  /**\n   * Dispatch a request to change the media audio gain.\n   *\n   * @example\n   * ```ts\n   * remote.changeAudioGain(1); // Disable audio gain\n   * remote.changeAudioGain(1.5); // 50% louder\n   * remote.changeAudioGain(2); // 100% louder\n   * ```\n   */\n  changeAudioGain(gain, trigger) {\n    this.#dispatchRequest(\"media-audio-gain-change-request\", trigger, gain);\n  }\n  /**\n   * Dispatch a request to resume idle tracking on controls.\n   */\n  resumeControls(trigger) {\n    this.#dispatchRequest(\"media-resume-controls-request\", trigger);\n  }\n  /**\n   * Dispatch a request to pause controls idle tracking. Pausing tracking will result in the\n   * controls being visible until `remote.resumeControls()` is called. This method\n   * is generally used when building custom controls and you'd like to prevent the UI from\n   * disappearing.\n   *\n   * @example\n   * ```ts\n   * // Prevent controls hiding while menu is being interacted with.\n   * function onSettingsOpen() {\n   *   remote.pauseControls();\n   * }\n   *\n   * function onSettingsClose() {\n   *   remote.resumeControls();\n   * }\n   * ```\n   */\n  pauseControls(trigger) {\n    this.#dispatchRequest(\"media-pause-controls-request\", trigger);\n  }\n  /**\n   * Dispatch a request to toggle the media playback state.\n   */\n  togglePaused(trigger) {\n    const player = this.getPlayer(trigger?.target);\n    if (!player) {\n      this.#noPlayerWarning(this.togglePaused.name);\n      return;\n    }\n    if (player.state.paused) this.play(trigger);\n    else this.pause(trigger);\n  }\n  /**\n   * Dispatch a request to toggle the controls visibility.\n   */\n  toggleControls(trigger) {\n    const player = this.getPlayer(trigger?.target);\n    if (!player) {\n      this.#noPlayerWarning(this.toggleControls.name);\n      return;\n    }\n    if (!player.controls.showing) {\n      player.controls.show(0, trigger);\n    } else {\n      player.controls.hide(0, trigger);\n    }\n  }\n  /**\n   * Dispatch a request to toggle the media muted state.\n   */\n  toggleMuted(trigger) {\n    const player = this.getPlayer(trigger?.target);\n    if (!player) {\n      this.#noPlayerWarning(this.toggleMuted.name);\n      return;\n    }\n    if (player.state.muted) this.unmute(trigger);\n    else this.mute(trigger);\n  }\n  /**\n   * Dispatch a request to toggle the media fullscreen state.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/api/fullscreen#remote-control}\n   */\n  toggleFullscreen(target, trigger) {\n    const player = this.getPlayer(trigger?.target);\n    if (!player) {\n      this.#noPlayerWarning(this.toggleFullscreen.name);\n      return;\n    }\n    if (player.state.fullscreen) this.exitFullscreen(target, trigger);\n    else this.enterFullscreen(target, trigger);\n  }\n  /**\n   * Dispatch a request to toggle the media picture-in-picture mode.\n   *\n   * @docs {@link https://www.vidstack.io/docs/player/api/picture-in-picture#remote-control}\n   */\n  togglePictureInPicture(trigger) {\n    const player = this.getPlayer(trigger?.target);\n    if (!player) {\n      this.#noPlayerWarning(this.togglePictureInPicture.name);\n      return;\n    }\n    if (player.state.pictureInPicture) this.exitPictureInPicture(trigger);\n    else this.enterPictureInPicture(trigger);\n  }\n  /**\n   * Show captions.\n   */\n  showCaptions(trigger) {\n    const player = this.getPlayer(trigger?.target);\n    if (!player) {\n      this.#noPlayerWarning(this.showCaptions.name);\n      return;\n    }\n    let tracks = player.state.textTracks, index = this.#prevTrackIndex;\n    if (!tracks[index] || !isTrackCaptionKind(tracks[index])) {\n      index = -1;\n    }\n    if (index === -1) {\n      index = tracks.findIndex((track) => isTrackCaptionKind(track) && track.default);\n    }\n    if (index === -1) {\n      index = tracks.findIndex((track) => isTrackCaptionKind(track));\n    }\n    if (index >= 0) this.changeTextTrackMode(index, \"showing\", trigger);\n    this.#prevTrackIndex = -1;\n  }\n  /**\n   * Turn captions off.\n   */\n  disableCaptions(trigger) {\n    const player = this.getPlayer(trigger?.target);\n    if (!player) {\n      this.#noPlayerWarning(this.disableCaptions.name);\n      return;\n    }\n    const tracks = player.state.textTracks, track = player.state.textTrack;\n    if (track) {\n      const index = tracks.indexOf(track);\n      this.changeTextTrackMode(index, \"disabled\", trigger);\n      this.#prevTrackIndex = index;\n    }\n  }\n  /**\n   * Dispatch a request to toggle the current captions mode.\n   */\n  toggleCaptions(trigger) {\n    const player = this.getPlayer(trigger?.target);\n    if (!player) {\n      this.#noPlayerWarning(this.toggleCaptions.name);\n      return;\n    }\n    if (player.state.textTrack) {\n      this.disableCaptions();\n    } else {\n      this.showCaptions();\n    }\n  }\n  userPrefersLoopChange(prefersLoop, trigger) {\n    this.#dispatchRequest(\"media-user-loop-change-request\", trigger, prefersLoop);\n  }\n  #dispatchRequest(type, trigger, detail) {\n    const request = new DOMEvent(type, {\n      bubbles: true,\n      composed: true,\n      cancelable: true,\n      detail,\n      trigger\n    });\n    let target = trigger?.target || null;\n    if (target && target instanceof Component) target = target.el;\n    const shouldUsePlayer = !target || target === document || target === window || target === document.body || this.#player?.el && target instanceof Node && !this.#player.el.contains(target);\n    target = shouldUsePlayer ? this.#target ?? this.getPlayer()?.el : target ?? this.#target;\n    {\n      this.#logger?.debugGroup(`\\u{1F4E8} dispatching \\`${type}\\``).labelledLog(\"Target\", target).labelledLog(\"Player\", this.#player).labelledLog(\"Request Event\", request).labelledLog(\"Trigger Event\", trigger).dispatch();\n    }\n    if (this.#player) {\n      if (type === \"media-play-request\" && !this.#player.state.canLoad) {\n        target?.dispatchEvent(request);\n      } else {\n        this.#player.canPlayQueue.enqueue(type, () => target?.dispatchEvent(request));\n      }\n    } else {\n      target?.dispatchEvent(request);\n    }\n  }\n  #noPlayerWarning(method) {\n    {\n      console.warn(\n        `[vidstack] attempted to call \\`MediaRemoteControl.${method}\\`() that requires player but failed because remote could not find a parent player element from target`\n      );\n    }\n  }\n}\n\nclass LocalMediaStorage {\n  playerId = \"vds-player\";\n  mediaId = null;\n  #data = {\n    volume: null,\n    muted: null,\n    audioGain: null,\n    time: null,\n    lang: null,\n    captions: null,\n    rate: null,\n    quality: null\n  };\n  async getVolume() {\n    return this.#data.volume;\n  }\n  async setVolume(volume) {\n    this.#data.volume = volume;\n    this.save();\n  }\n  async getMuted() {\n    return this.#data.muted;\n  }\n  async setMuted(muted) {\n    this.#data.muted = muted;\n    this.save();\n  }\n  async getTime() {\n    return this.#data.time;\n  }\n  async setTime(time, ended) {\n    const shouldClear = time < 0;\n    this.#data.time = !shouldClear ? time : null;\n    if (shouldClear || ended) this.saveTime();\n    else this.saveTimeThrottled();\n  }\n  async getLang() {\n    return this.#data.lang;\n  }\n  async setLang(lang) {\n    this.#data.lang = lang;\n    this.save();\n  }\n  async getCaptions() {\n    return this.#data.captions;\n  }\n  async setCaptions(enabled) {\n    this.#data.captions = enabled;\n    this.save();\n  }\n  async getPlaybackRate() {\n    return this.#data.rate;\n  }\n  async setPlaybackRate(rate) {\n    this.#data.rate = rate;\n    this.save();\n  }\n  async getAudioGain() {\n    return this.#data.audioGain;\n  }\n  async setAudioGain(gain) {\n    this.#data.audioGain = gain;\n    this.save();\n  }\n  async getVideoQuality() {\n    return this.#data.quality;\n  }\n  async setVideoQuality(quality) {\n    this.#data.quality = quality;\n    this.save();\n  }\n  onChange(src, mediaId, playerId = \"vds-player\") {\n    const savedData = playerId ? localStorage.getItem(playerId) : null, savedTime = mediaId ? localStorage.getItem(mediaId) : null;\n    this.playerId = playerId;\n    this.mediaId = mediaId;\n    this.#data = {\n      volume: null,\n      muted: null,\n      audioGain: null,\n      lang: null,\n      captions: null,\n      rate: null,\n      quality: null,\n      ...savedData ? JSON.parse(savedData) : {},\n      time: savedTime ? +savedTime : null\n    };\n  }\n  save() {\n    if (!this.playerId) return;\n    const data = JSON.stringify({ ...this.#data, time: void 0 });\n    localStorage.setItem(this.playerId, data);\n  }\n  saveTimeThrottled = functionThrottle(this.saveTime.bind(this), 1e3);\n  saveTime() {\n    if (!this.mediaId) return;\n    const data = (this.#data.time ?? 0).toString();\n    localStorage.setItem(this.mediaId, data);\n  }\n}\n\nconst SELECTED = Symbol(\"SELECTED\" );\nclass SelectList extends List {\n  get selected() {\n    return this.items.find((item) => item.selected) ?? null;\n  }\n  get selectedIndex() {\n    return this.items.findIndex((item) => item.selected);\n  }\n  /** @internal */\n  [ListSymbol.onRemove](item, trigger) {\n    this[ListSymbol.select](item, false, trigger);\n  }\n  /** @internal */\n  [ListSymbol.add](item, trigger) {\n    item[SELECTED] = false;\n    Object.defineProperty(item, \"selected\", {\n      get() {\n        return this[SELECTED];\n      },\n      set: (selected) => {\n        if (this.readonly) return;\n        this[ListSymbol.onUserSelect]?.();\n        this[ListSymbol.select](item, selected);\n      }\n    });\n    super[ListSymbol.add](item, trigger);\n  }\n  /** @internal */\n  [ListSymbol.select](item, selected, trigger) {\n    if (selected === item?.[SELECTED]) return;\n    const prev = this.selected;\n    if (item) item[SELECTED] = selected;\n    const changed = !selected ? prev === item : prev !== item;\n    if (changed) {\n      if (prev) prev[SELECTED] = false;\n      this.dispatchEvent(\n        new DOMEvent(\"change\", {\n          detail: {\n            prev,\n            current: this.selected\n          },\n          trigger\n        })\n      );\n    }\n  }\n}\n\nclass AudioTrackList extends SelectList {\n}\n\nclass NativeTextRenderer {\n  priority = 0;\n  #display = true;\n  #video = null;\n  #track = null;\n  #tracks = /* @__PURE__ */ new Set();\n  canRender(_, video) {\n    return !!video;\n  }\n  attach(video) {\n    this.#video = video;\n    if (video) video.textTracks.onchange = this.#onChange.bind(this);\n  }\n  addTrack(track) {\n    this.#tracks.add(track);\n    this.#attachTrack(track);\n  }\n  removeTrack(track) {\n    track[TextTrackSymbol.native]?.remove?.();\n    track[TextTrackSymbol.native] = null;\n    this.#tracks.delete(track);\n  }\n  changeTrack(track) {\n    const current = track?.[TextTrackSymbol.native];\n    if (current && current.track.mode !== \"showing\") {\n      current.track.mode = \"showing\";\n    }\n    this.#track = track;\n  }\n  setDisplay(display) {\n    this.#display = display;\n    this.#onChange();\n  }\n  detach() {\n    if (this.#video) this.#video.textTracks.onchange = null;\n    for (const track of this.#tracks) this.removeTrack(track);\n    this.#tracks.clear();\n    this.#video = null;\n    this.#track = null;\n  }\n  #attachTrack(track) {\n    if (!this.#video) return;\n    const el = track[TextTrackSymbol.native] ??= this.#createTrackElement(track);\n    if (isHTMLElement(el)) {\n      this.#video.append(el);\n      el.track.mode = el.default ? \"showing\" : \"disabled\";\n    }\n  }\n  #createTrackElement(track) {\n    const el = document.createElement(\"track\"), isDefault = track.default || track.mode === \"showing\", isSupported = track.src && track.type === \"vtt\";\n    el.id = track.id;\n    el.src = isSupported ? track.src : \"\";\n    el.label = track.label;\n    el.kind = track.kind;\n    el.default = isDefault;\n    track.language && (el.srclang = track.language);\n    if (isDefault && !isSupported) {\n      this.#copyCues(track, el.track);\n    }\n    return el;\n  }\n  #copyCues(track, native) {\n    if (track.src && track.type === \"vtt\" || native.cues?.length) return;\n    for (const cue of track.cues) native.addCue(cue);\n  }\n  #onChange(event) {\n    for (const track of this.#tracks) {\n      const native = track[TextTrackSymbol.native];\n      if (!native) continue;\n      if (!this.#display) {\n        native.track.mode = native.managed ? \"hidden\" : \"disabled\";\n        continue;\n      }\n      const isShowing = native.track.mode === \"showing\";\n      if (isShowing) this.#copyCues(track, native.track);\n      track.setMode(isShowing ? \"showing\" : \"disabled\", event);\n    }\n  }\n}\n\nclass TextRenderers {\n  #video = null;\n  #textTracks;\n  #renderers = [];\n  #media;\n  #nativeDisplay = false;\n  #nativeRenderer = null;\n  #customRenderer = null;\n  constructor(media) {\n    this.#media = media;\n    const textTracks = media.textTracks;\n    this.#textTracks = textTracks;\n    effect(this.#watchControls.bind(this));\n    onDispose(this.#detach.bind(this));\n    new EventsController(textTracks).add(\"add\", this.#onAddTrack.bind(this)).add(\"remove\", this.#onRemoveTrack.bind(this)).add(\"mode-change\", this.#update.bind(this));\n  }\n  #watchControls() {\n    const { nativeControls } = this.#media.$state;\n    this.#nativeDisplay = nativeControls();\n    this.#update();\n  }\n  add(renderer) {\n    this.#renderers.push(renderer);\n    untrack(this.#update.bind(this));\n  }\n  remove(renderer) {\n    renderer.detach();\n    this.#renderers.splice(this.#renderers.indexOf(renderer), 1);\n    untrack(this.#update.bind(this));\n  }\n  /** @internal */\n  attachVideo(video) {\n    requestAnimationFrame(() => {\n      this.#video = video;\n      if (video) {\n        this.#nativeRenderer = new NativeTextRenderer();\n        this.#nativeRenderer.attach(video);\n        for (const track of this.#textTracks) this.#addNativeTrack(track);\n      }\n      this.#update();\n    });\n  }\n  #addNativeTrack(track) {\n    if (!isTrackCaptionKind(track)) return;\n    this.#nativeRenderer?.addTrack(track);\n  }\n  #removeNativeTrack(track) {\n    if (!isTrackCaptionKind(track)) return;\n    this.#nativeRenderer?.removeTrack(track);\n  }\n  #onAddTrack(event) {\n    this.#addNativeTrack(event.detail);\n  }\n  #onRemoveTrack(event) {\n    this.#removeNativeTrack(event.detail);\n  }\n  #update() {\n    const currentTrack = this.#textTracks.selected;\n    if (this.#video && (this.#nativeDisplay || currentTrack?.[TextTrackSymbol.nativeHLS])) {\n      this.#customRenderer?.changeTrack(null);\n      this.#nativeRenderer?.setDisplay(true);\n      this.#nativeRenderer?.changeTrack(currentTrack);\n      return;\n    }\n    this.#nativeRenderer?.setDisplay(false);\n    this.#nativeRenderer?.changeTrack(null);\n    if (!currentTrack) {\n      this.#customRenderer?.changeTrack(null);\n      return;\n    }\n    const customRenderer = this.#renderers.sort((a, b) => a.priority - b.priority).find((renderer) => renderer.canRender(currentTrack, this.#video));\n    if (this.#customRenderer !== customRenderer) {\n      this.#customRenderer?.detach();\n      customRenderer?.attach(this.#video);\n      this.#customRenderer = customRenderer ?? null;\n    }\n    customRenderer?.changeTrack(currentTrack);\n  }\n  #detach() {\n    this.#nativeRenderer?.detach();\n    this.#nativeRenderer = null;\n    this.#customRenderer?.detach();\n    this.#customRenderer = null;\n  }\n}\n\nclass TextTrackList extends List {\n  #canLoad = false;\n  #defaults = {};\n  #storage = null;\n  #preferredLang = null;\n  /** @internal */\n  [TextTrackSymbol.crossOrigin];\n  constructor() {\n    super();\n  }\n  get selected() {\n    const track = this.items.find((t) => t.mode === \"showing\" && isTrackCaptionKind(t));\n    return track ?? null;\n  }\n  get selectedIndex() {\n    const selected = this.selected;\n    return selected ? this.indexOf(selected) : -1;\n  }\n  get preferredLang() {\n    return this.#preferredLang;\n  }\n  set preferredLang(lang) {\n    this.#preferredLang = lang;\n    this.#saveLang(lang);\n  }\n  add(init, trigger) {\n    const isTrack = init instanceof TextTrack, track = isTrack ? init : new TextTrack(init), kind = init.kind === \"captions\" || init.kind === \"subtitles\" ? \"captions\" : init.kind;\n    if (this.#defaults[kind] && init.default) delete init.default;\n    track.addEventListener(\"mode-change\", this.#onTrackModeChangeBind);\n    this[ListSymbol.add](track, trigger);\n    track[TextTrackSymbol.crossOrigin] = this[TextTrackSymbol.crossOrigin];\n    if (this.#canLoad) track[TextTrackSymbol.canLoad]();\n    if (init.default) this.#defaults[kind] = track;\n    this.#selectTracks();\n    return this;\n  }\n  remove(track, trigger) {\n    this.#pendingRemoval = track;\n    if (!this.items.includes(track)) return;\n    if (track === this.#defaults[track.kind]) delete this.#defaults[track.kind];\n    track.mode = \"disabled\";\n    track[TextTrackSymbol.onModeChange] = null;\n    track.removeEventListener(\"mode-change\", this.#onTrackModeChangeBind);\n    this[ListSymbol.remove](track, trigger);\n    this.#pendingRemoval = null;\n    return this;\n  }\n  clear(trigger) {\n    for (const track of [...this.items]) {\n      this.remove(track, trigger);\n    }\n    return this;\n  }\n  getByKind(kind) {\n    const kinds = Array.isArray(kind) ? kind : [kind];\n    return this.items.filter((track) => kinds.includes(track.kind));\n  }\n  /** @internal */\n  [TextTrackSymbol.canLoad]() {\n    if (this.#canLoad) return;\n    for (const track of this.items) track[TextTrackSymbol.canLoad]();\n    this.#canLoad = true;\n    this.#selectTracks();\n  }\n  #selectTracks = functionDebounce(async () => {\n    if (!this.#canLoad) return;\n    if (!this.#preferredLang && this.#storage) {\n      this.#preferredLang = await this.#storage.getLang();\n    }\n    const showCaptions = await this.#storage?.getCaptions(), kinds = [\n      [\"captions\", \"subtitles\"],\n      \"chapters\",\n      \"descriptions\",\n      \"metadata\"\n    ];\n    for (const kind of kinds) {\n      const tracks = this.getByKind(kind);\n      if (tracks.find((t) => t.mode === \"showing\")) continue;\n      const preferredTrack = this.#preferredLang ? tracks.find((track2) => track2.language === this.#preferredLang) : null;\n      const defaultTrack = isArray(kind) ? this.#defaults[kind.find((kind2) => this.#defaults[kind2]) || \"\"] : this.#defaults[kind];\n      const track = preferredTrack ?? defaultTrack, isCaptionsKind = track && isTrackCaptionKind(track);\n      if (track && (!isCaptionsKind || showCaptions !== false)) {\n        track.mode = \"showing\";\n        if (isCaptionsKind) this.#saveCaptionsTrack(track);\n      }\n    }\n  }, 300);\n  #pendingRemoval = null;\n  #onTrackModeChangeBind = this.#onTrackModeChange.bind(this);\n  #onTrackModeChange(event) {\n    const track = event.detail;\n    if (this.#storage && isTrackCaptionKind(track) && track !== this.#pendingRemoval) {\n      this.#saveCaptionsTrack(track);\n    }\n    if (track.mode === \"showing\") {\n      const kinds = isTrackCaptionKind(track) ? [\"captions\", \"subtitles\"] : [track.kind];\n      for (const t of this.items) {\n        if (t.mode === \"showing\" && t != track && kinds.includes(t.kind)) {\n          t.mode = \"disabled\";\n        }\n      }\n    }\n    this.dispatchEvent(\n      new DOMEvent(\"mode-change\", {\n        detail: event.detail,\n        trigger: event\n      })\n    );\n  }\n  #saveCaptionsTrack(track) {\n    if (track.mode !== \"disabled\") {\n      this.#saveLang(track.language);\n    }\n    this.#storage?.setCaptions?.(track.mode === \"showing\");\n  }\n  #saveLang(lang) {\n    this.#storage?.setLang?.(this.#preferredLang = lang);\n  }\n  setStorage(storage) {\n    this.#storage = storage;\n  }\n}\n\nclass VideoQualityList extends SelectList {\n  #auto = false;\n  /**\n   * Configures quality switching:\n   *\n   * - `current`: Trigger an immediate quality level switch. This will abort the current fragment\n   * request if any, flush the whole buffer, and fetch fragment matching with current position\n   * and requested quality level.\n   *\n   * - `next`: Trigger a quality level switch for next fragment. This could eventually flush\n   * already buffered next fragment.\n   *\n   * - `load`: Set quality level for next loaded fragment.\n   *\n   * @see {@link https://www.vidstack.io/docs/player/api/video-quality#switch}\n   * @see {@link https://github.com/video-dev/hls.js/blob/master/docs/API.md#quality-switch-control-api}\n   */\n  switch = \"current\";\n  /**\n   * Whether automatic quality selection is enabled.\n   */\n  get auto() {\n    return this.#auto || this.readonly;\n  }\n  /** @internal */\n  [QualitySymbol.enableAuto];\n  /** @internal */\n  [ListSymbol.onUserSelect]() {\n    this[QualitySymbol.setAuto](false);\n  }\n  /** @internal */\n  [ListSymbol.onReset](trigger) {\n    this[QualitySymbol.enableAuto] = void 0;\n    this[QualitySymbol.setAuto](false, trigger);\n  }\n  /**\n   * Request automatic quality selection (if supported). This will be a no-op if the list is\n   * `readonly` as that already implies auto-selection.\n   */\n  autoSelect(trigger) {\n    if (this.readonly || this.#auto || !this[QualitySymbol.enableAuto]) return;\n    this[QualitySymbol.enableAuto]?.(trigger);\n    this[QualitySymbol.setAuto](true, trigger);\n  }\n  getBySrc(src) {\n    return this.items.find((quality) => quality.src === src);\n  }\n  /** @internal */\n  [QualitySymbol.setAuto](auto, trigger) {\n    if (this.#auto === auto) return;\n    this.#auto = auto;\n    this.dispatchEvent(\n      new DOMEvent(\"auto-change\", {\n        detail: auto,\n        trigger\n      })\n    );\n  }\n}\n\nfunction isAudioProvider(provider) {\n  return provider?.$$PROVIDER_TYPE === \"AUDIO\";\n}\nfunction isVideoProvider(provider) {\n  return provider?.$$PROVIDER_TYPE === \"VIDEO\";\n}\nfunction isHLSProvider(provider) {\n  return provider?.$$PROVIDER_TYPE === \"HLS\";\n}\nfunction isDASHProvider(provider) {\n  return provider?.$$PROVIDER_TYPE === \"DASH\";\n}\nfunction isYouTubeProvider(provider) {\n  return provider?.$$PROVIDER_TYPE === \"YOUTUBE\";\n}\nfunction isVimeoProvider(provider) {\n  return provider?.$$PROVIDER_TYPE === \"VIMEO\";\n}\nfunction isGoogleCastProvider(provider) {\n  return provider?.$$PROVIDER_TYPE === \"GOOGLE_CAST\";\n}\nfunction isHTMLAudioElement(element) {\n  return element instanceof HTMLAudioElement;\n}\nfunction isHTMLVideoElement(element) {\n  return element instanceof HTMLVideoElement;\n}\nfunction isHTMLMediaElement(element) {\n  return isHTMLAudioElement(element) || isHTMLVideoElement(element);\n}\nfunction isHTMLIFrameElement(element) {\n  return element instanceof HTMLIFrameElement;\n}\n\nclass MediaPlayerController extends ViewController {\n}\n\nconst MEDIA_KEY_SHORTCUTS = {\n  togglePaused: \"k Space\",\n  toggleMuted: \"m\",\n  toggleFullscreen: \"f\",\n  togglePictureInPicture: \"i\",\n  toggleCaptions: \"c\",\n  seekBackward: \"j J ArrowLeft\",\n  seekForward: \"l L ArrowRight\",\n  volumeUp: \"ArrowUp\",\n  volumeDown: \"ArrowDown\",\n  speedUp: \">\",\n  slowDown: \"<\"\n};\nconst MODIFIER_KEYS = /* @__PURE__ */ new Set([\"Shift\", \"Alt\", \"Meta\", \"Ctrl\"]), BUTTON_SELECTORS = 'button, [role=\"button\"]', IGNORE_SELECTORS = 'input, textarea, select, [contenteditable], [role^=\"menuitem\"], [role=\"timer\"]';\nclass MediaKeyboardController extends MediaPlayerController {\n  #media;\n  constructor(media) {\n    super();\n    this.#media = media;\n  }\n  onConnect() {\n    effect(this.#onTargetChange.bind(this));\n  }\n  #onTargetChange() {\n    const { keyDisabled, keyTarget } = this.$props;\n    if (keyDisabled()) return;\n    const target = keyTarget() === \"player\" ? this.el : document, $active = signal(false);\n    if (target === this.el) {\n      new EventsController(this.el).add(\"focusin\", () => $active.set(true)).add(\"focusout\", (event) => {\n        if (!this.el.contains(event.target)) $active.set(false);\n      });\n    } else {\n      if (!peek($active)) $active.set(document.querySelector(\"[data-media-player]\") === this.el);\n      listenEvent(document, \"focusin\", (event) => {\n        const activePlayer = event.composedPath().find((el) => el instanceof Element && el.localName === \"media-player\");\n        if (activePlayer !== void 0) $active.set(this.el === activePlayer);\n      });\n    }\n    effect(() => {\n      if (!$active()) return;\n      new EventsController(target).add(\"keyup\", this.#onKeyUp.bind(this)).add(\"keydown\", this.#onKeyDown.bind(this)).add(\"keydown\", this.#onPreventVideoKeys.bind(this), { capture: true });\n    });\n  }\n  #onKeyUp(event) {\n    const focusedEl = document.activeElement;\n    if (!event.key || !this.$state.canSeek() || focusedEl?.matches(IGNORE_SELECTORS)) {\n      return;\n    }\n    let { method, value } = this.#getMatchingMethod(event);\n    if (!isString(value) && !isArray(value)) {\n      value?.onKeyUp?.({\n        event,\n        player: this.#media.player,\n        remote: this.#media.remote\n      });\n      value?.callback?.(event, this.#media.remote);\n      return;\n    }\n    if (method?.startsWith(\"seek\")) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (this.#timeSlider) {\n        this.#forwardTimeKeyboardEvent(event, method === \"seekForward\");\n        this.#timeSlider = null;\n      } else {\n        this.#media.remote.seek(this.#seekTotal, event);\n        this.#seekTotal = void 0;\n      }\n    }\n    if (method?.startsWith(\"volume\")) {\n      const volumeSlider = this.el.querySelector(\"[data-media-volume-slider]\");\n      volumeSlider?.dispatchEvent(\n        new KeyboardEvent(\"keyup\", {\n          key: method === \"volumeUp\" ? \"Up\" : \"Down\",\n          shiftKey: event.shiftKey,\n          trigger: event\n        })\n      );\n    }\n  }\n  #onKeyDown(event) {\n    if (!event.key || MODIFIER_KEYS.has(event.key)) return;\n    const focusedEl = document.activeElement;\n    if (focusedEl?.matches(IGNORE_SELECTORS) || isKeyboardClick(event) && focusedEl?.matches(BUTTON_SELECTORS)) {\n      return;\n    }\n    let { method, value } = this.#getMatchingMethod(event), isNumberPress = !event.metaKey && /^[0-9]$/.test(event.key);\n    if (!isString(value) && !isArray(value) && !isNumberPress) {\n      value?.onKeyDown?.({\n        event,\n        player: this.#media.player,\n        remote: this.#media.remote\n      });\n      value?.callback?.(event, this.#media.remote);\n      return;\n    }\n    if (!method && isNumberPress && !modifierKeyPressed(event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.#media.remote.seek(this.$state.duration() / 10 * Number(event.key), event);\n      return;\n    }\n    if (!method) return;\n    event.preventDefault();\n    event.stopPropagation();\n    switch (method) {\n      case \"seekForward\":\n      case \"seekBackward\":\n        this.#seeking(event, method, method === \"seekForward\");\n        break;\n      case \"volumeUp\":\n      case \"volumeDown\":\n        const volumeSlider = this.el.querySelector(\"[data-media-volume-slider]\");\n        if (volumeSlider) {\n          volumeSlider.dispatchEvent(\n            new KeyboardEvent(\"keydown\", {\n              key: method === \"volumeUp\" ? \"Up\" : \"Down\",\n              shiftKey: event.shiftKey,\n              trigger: event\n            })\n          );\n        } else {\n          const value2 = event.shiftKey ? 0.1 : 0.05;\n          this.#media.remote.changeVolume(\n            this.$state.volume() + (method === \"volumeUp\" ? +value2 : -value2),\n            event\n          );\n        }\n        break;\n      case \"toggleFullscreen\":\n        this.#media.remote.toggleFullscreen(\"prefer-media\", event);\n        break;\n      case \"speedUp\":\n      case \"slowDown\":\n        const playbackRate = this.$state.playbackRate();\n        this.#media.remote.changePlaybackRate(\n          Math.max(0.25, Math.min(2, playbackRate + (method === \"speedUp\" ? 0.25 : -0.25))),\n          event\n        );\n        break;\n      default:\n        this.#media.remote[method]?.(event);\n    }\n    this.$state.lastKeyboardAction.set({\n      action: method,\n      event\n    });\n  }\n  #onPreventVideoKeys(event) {\n    if (isHTMLMediaElement(event.target) && this.#getMatchingMethod(event).method) {\n      event.preventDefault();\n    }\n  }\n  #getMatchingMethod(event) {\n    const keyShortcuts = {\n      ...this.$props.keyShortcuts(),\n      ...this.#media.ariaKeys\n    };\n    const method = Object.keys(keyShortcuts).find((method2) => {\n      const value = keyShortcuts[method2], keys = isArray(value) ? value.join(\" \") : isString(value) ? value : value?.keys;\n      const combinations = (isArray(keys) ? keys : keys?.split(\" \"))?.map(\n        (key) => replaceSymbolKeys(key).replace(/Control/g, \"Ctrl\").split(\"+\")\n      );\n      return combinations?.some((combo) => {\n        const modifierKeys = new Set(combo.filter((key) => MODIFIER_KEYS.has(key)));\n        for (const modKey of MODIFIER_KEYS) {\n          const modKeyProp = modKey.toLowerCase() + \"Key\";\n          if (!modifierKeys.has(modKey) && event[modKeyProp]) {\n            return false;\n          }\n        }\n        return combo.every((key) => {\n          return MODIFIER_KEYS.has(key) ? event[key.toLowerCase() + \"Key\"] : event.key === key.replace(\"Space\", \" \");\n        });\n      });\n    });\n    return {\n      method,\n      value: method ? keyShortcuts[method] : null\n    };\n  }\n  #seekTotal;\n  #calcSeekAmount(event, type) {\n    const seekBy = event.shiftKey ? 10 : 5;\n    return this.#seekTotal = Math.max(\n      0,\n      Math.min(\n        (this.#seekTotal ?? this.$state.currentTime()) + (type === \"seekForward\" ? +seekBy : -seekBy),\n        this.$state.duration()\n      )\n    );\n  }\n  #timeSlider = null;\n  #forwardTimeKeyboardEvent(event, forward) {\n    this.#timeSlider?.dispatchEvent(\n      new KeyboardEvent(event.type, {\n        key: !forward ? \"Left\" : \"Right\",\n        shiftKey: event.shiftKey,\n        trigger: event\n      })\n    );\n  }\n  #seeking(event, type, forward) {\n    if (!this.$state.canSeek()) return;\n    if (!this.#timeSlider) {\n      this.#timeSlider = this.el.querySelector(\"[data-media-time-slider]\");\n    }\n    if (this.#timeSlider) {\n      this.#forwardTimeKeyboardEvent(event, forward);\n    } else {\n      this.#media.remote.seeking(this.#calcSeekAmount(event, type), event);\n    }\n  }\n}\nconst SYMBOL_KEY_MAP = [\"!\", \"@\", \"#\", \"$\", \"%\", \"^\", \"&\", \"*\", \"(\", \")\"];\nfunction replaceSymbolKeys(key) {\n  return key.replace(/Shift\\+(\\d)/g, (_, num) => SYMBOL_KEY_MAP[num - 1]);\n}\nfunction modifierKeyPressed(event) {\n  for (const key of MODIFIER_KEYS) {\n    if (event[key.toLowerCase() + \"Key\"]) {\n      return true;\n    }\n  }\n  return false;\n}\n\nclass MediaControls extends MediaPlayerController {\n  #idleTimer = -2;\n  #pausedTracking = false;\n  #hideOnMouseLeave = signal(false);\n  #isMouseOutside = signal(false);\n  #focusedItem = null;\n  #canIdle = signal(true);\n  /**\n   * The default amount of delay in milliseconds while media playback is progressing without user\n   * activity to indicate an idle state (i.e., hide controls).\n   *\n   * @defaultValue 2000\n   */\n  defaultDelay = 2e3;\n  /**\n   * Whether controls can hide after a delay in user interaction. If this is false, controls will\n   * not hide and be user controlled.\n   */\n  get canIdle() {\n    return this.#canIdle();\n  }\n  set canIdle(canIdle) {\n    this.#canIdle.set(canIdle);\n  }\n  /**\n   * Whether controls visibility should be toggled when the mouse enters and leaves the player\n   * container.\n   *\n   * @defaultValue false\n   */\n  get hideOnMouseLeave() {\n    const { hideControlsOnMouseLeave } = this.$props;\n    return this.#hideOnMouseLeave() || hideControlsOnMouseLeave();\n  }\n  set hideOnMouseLeave(hide) {\n    this.#hideOnMouseLeave.set(hide);\n  }\n  /**\n   * Whether media controls are currently visible.\n   */\n  get showing() {\n    return this.$state.controlsVisible();\n  }\n  /**\n   * Show controls.\n   */\n  show(delay = 0, trigger) {\n    this.#clearIdleTimer();\n    if (!this.#pausedTracking) {\n      this.#changeVisibility(true, delay, trigger);\n    }\n  }\n  /**\n   * Hide controls.\n   */\n  hide(delay = this.defaultDelay, trigger) {\n    this.#clearIdleTimer();\n    if (!this.#pausedTracking) {\n      this.#changeVisibility(false, delay, trigger);\n    }\n  }\n  /**\n   * Whether all idle tracking on controls should be paused until resumed again.\n   */\n  pause(trigger) {\n    this.#pausedTracking = true;\n    this.#clearIdleTimer();\n    this.#changeVisibility(true, 0, trigger);\n  }\n  resume(trigger) {\n    this.#pausedTracking = false;\n    if (this.$state.paused()) return;\n    this.#changeVisibility(false, this.defaultDelay, trigger);\n  }\n  onConnect() {\n    effect(this.#init.bind(this));\n  }\n  #init() {\n    const { viewType } = this.$state;\n    if (!this.el || !this.#canIdle()) return;\n    if (viewType() === \"audio\") {\n      this.show();\n      return;\n    }\n    effect(this.#watchMouse.bind(this));\n    effect(this.#watchPaused.bind(this));\n    const onPlay = this.#onPlay.bind(this), onPause = this.#onPause.bind(this), onEnd = this.#onEnd.bind(this);\n    new EventsController(this.el).add(\"can-play\", (event) => this.show(0, event)).add(\"play\", onPlay).add(\"pause\", onPause).add(\"end\", onEnd).add(\"auto-play-fail\", onPause);\n  }\n  #watchMouse() {\n    if (!this.el) return;\n    const { started, pointer, paused } = this.$state;\n    if (!started() || pointer() !== \"fine\") return;\n    const events = new EventsController(this.el), shouldHideOnMouseLeave = this.hideOnMouseLeave;\n    if (!shouldHideOnMouseLeave || !this.#isMouseOutside()) {\n      effect(() => {\n        if (!paused()) events.add(\"pointermove\", this.#onStopIdle.bind(this));\n      });\n    }\n    if (shouldHideOnMouseLeave) {\n      events.add(\"mouseenter\", this.#onMouseEnter.bind(this)).add(\"mouseleave\", this.#onMouseLeave.bind(this));\n    }\n  }\n  #watchPaused() {\n    const { paused, started, autoPlayError } = this.$state;\n    if (paused() || autoPlayError() && !started()) return;\n    const onStopIdle = this.#onStopIdle.bind(this);\n    effect(() => {\n      if (!this.el) return;\n      const pointer = this.$state.pointer(), isTouch = pointer === \"coarse\", events = new EventsController(this.el), eventTypes = [isTouch ? \"touchend\" : \"pointerup\", \"keydown\"];\n      for (const eventType of eventTypes) {\n        events.add(eventType, onStopIdle, { passive: false });\n      }\n    });\n  }\n  #onPlay(event) {\n    if (event.triggers.hasType(\"ended\")) return;\n    this.show(0, event);\n    this.hide(void 0, event);\n  }\n  #onPause(event) {\n    this.show(0, event);\n  }\n  #onEnd(event) {\n    const { loop } = this.$state;\n    if (loop()) this.hide(0, event);\n  }\n  #onMouseEnter(event) {\n    this.#isMouseOutside.set(false);\n    this.show(0, event);\n    this.hide(void 0, event);\n  }\n  #onMouseLeave(event) {\n    this.#isMouseOutside.set(true);\n    this.hide(0, event);\n  }\n  #clearIdleTimer() {\n    window.clearTimeout(this.#idleTimer);\n    this.#idleTimer = -1;\n  }\n  #onStopIdle(event) {\n    if (\n      // @ts-expect-error\n      event.MEDIA_GESTURE || this.#pausedTracking || isTouchPinchEvent(event)\n    ) {\n      return;\n    }\n    if (isKeyboardEvent(event)) {\n      if (event.key === \"Escape\") {\n        this.el?.focus();\n        this.#focusedItem = null;\n      } else if (this.#focusedItem) {\n        event.preventDefault();\n        requestAnimationFrame(() => {\n          this.#focusedItem?.focus();\n          this.#focusedItem = null;\n        });\n      }\n    }\n    this.show(0, event);\n    this.hide(this.defaultDelay, event);\n  }\n  #changeVisibility(visible, delay, trigger) {\n    if (delay === 0) {\n      this.#onChange(visible, trigger);\n      return;\n    }\n    this.#idleTimer = window.setTimeout(() => {\n      if (!this.scope) return;\n      this.#onChange(visible && !this.#pausedTracking, trigger);\n    }, delay);\n  }\n  #onChange(visible, trigger) {\n    if (this.$state.controlsVisible() === visible) return;\n    this.$state.controlsVisible.set(visible);\n    if (!visible && document.activeElement && this.el?.contains(document.activeElement)) {\n      this.#focusedItem = document.activeElement;\n      requestAnimationFrame(() => {\n        this.el?.focus({ preventScroll: true });\n      });\n    }\n    this.dispatch(\"controls-change\", {\n      detail: visible,\n      trigger\n    });\n  }\n}\n\nclass AudioProviderLoader {\n  name = \"audio\";\n  target;\n  canPlay(src) {\n    if (!isAudioSrc(src)) return false;\n    return !isString(src.src) || src.type === \"?\" || canPlayAudioType(this.target, src.type);\n  }\n  mediaType() {\n    return \"audio\";\n  }\n  async load(ctx) {\n    if (!this.target) {\n      throw Error(\n        \"[vidstack] `<audio>` element was not found - did you forget to include `<media-provider>`?\"\n      );\n    }\n    return new (await import('../providers/vidstack-audio.js')).AudioProvider(this.target, ctx);\n  }\n}\n\nclass VideoProviderLoader {\n  name = \"video\";\n  target;\n  canPlay(src) {\n    if (!isVideoSrc(src)) return false;\n    return !isString(src.src) || src.type === \"?\" || canPlayVideoType(this.target, src.type);\n  }\n  mediaType() {\n    return \"video\";\n  }\n  async load(ctx) {\n    if (!this.target) {\n      throw Error(\n        \"[vidstack] `<video>` element was not found - did you forget to include media provider?\"\n      );\n    }\n    return new (await import('../providers/vidstack-video.js')).VideoProvider(this.target, ctx);\n  }\n}\n\nclass HLSProviderLoader extends VideoProviderLoader {\n  static supported = isHLSSupported();\n  name = \"hls\";\n  canPlay(src) {\n    return HLSProviderLoader.supported && isHLSSrc(src);\n  }\n  async load(context) {\n    if (!this.target) {\n      throw Error(\n        \"[vidstack] `<video>` element was not found - did you forget to include `<media-provider>`?\"\n      );\n    }\n    return new (await import('../providers/vidstack-hls.js')).HLSProvider(this.target, context);\n  }\n}\n\nclass DASHProviderLoader extends VideoProviderLoader {\n  static supported = isDASHSupported();\n  name = \"dash\";\n  canPlay(src) {\n    return DASHProviderLoader.supported && isDASHSrc(src);\n  }\n  async load(context) {\n    if (!this.target) {\n      throw Error(\n        \"[vidstack] `<video>` element was not found - did you forget to include `<media-provider>`?\"\n      );\n    }\n    return new (await import('../providers/vidstack-dash.js')).DASHProvider(this.target, context);\n  }\n}\n\nclass VimeoProviderLoader {\n  name = \"vimeo\";\n  target;\n  preconnect() {\n    const connections = [\n      \"https://i.vimeocdn.com\",\n      \"https://f.vimeocdn.com\",\n      \"https://fresnel.vimeocdn.com\"\n    ];\n    for (const url of connections) {\n      preconnect(url);\n    }\n  }\n  canPlay(src) {\n    return isString(src.src) && src.type === \"video/vimeo\";\n  }\n  mediaType() {\n    return \"video\";\n  }\n  async load(ctx) {\n    if (!this.target) {\n      throw Error(\n        \"[vidstack] `<iframe>` element was not found - did you forget to include media provider?\"\n      );\n    }\n    return new (await import('../providers/vidstack-vimeo.js')).VimeoProvider(this.target, ctx);\n  }\n  async loadPoster(src, ctx, abort) {\n    const { resolveVimeoVideoId, getVimeoVideoInfo } = await import('./vidstack-krOAtKMi.js');\n    if (!isString(src.src)) return null;\n    const { videoId, hash } = resolveVimeoVideoId(src.src);\n    if (videoId) {\n      return getVimeoVideoInfo(videoId, abort, hash).then((info) => info ? info.poster : null);\n    }\n    return null;\n  }\n}\n\nclass YouTubeProviderLoader {\n  name = \"youtube\";\n  target;\n  preconnect() {\n    const connections = [\n      // Botguard script.\n      \"https://www.google.com\",\n      // Posters.\n      \"https://i.ytimg.com\",\n      // Ads.\n      \"https://googleads.g.doubleclick.net\",\n      \"https://static.doubleclick.net\"\n    ];\n    for (const url of connections) {\n      preconnect(url);\n    }\n  }\n  canPlay(src) {\n    return isString(src.src) && src.type === \"video/youtube\";\n  }\n  mediaType() {\n    return \"video\";\n  }\n  async load(ctx) {\n    if (!this.target) {\n      throw Error(\n        \"[vidstack] `<iframe>` element was not found - did you forget to include media provider?\"\n      );\n    }\n    return new (await import('../providers/vidstack-youtube.js')).YouTubeProvider(this.target, ctx);\n  }\n  async loadPoster(src, ctx, abort) {\n    const { findYouTubePoster, resolveYouTubeVideoId } = await import('./vidstack-Dm1xEU9Q.js');\n    const videoId = isString(src.src) && resolveYouTubeVideoId(src.src);\n    if (videoId) return findYouTubePoster(videoId, abort);\n    return null;\n  }\n}\n\nconst MEDIA_ATTRIBUTES = Symbol(\"MEDIA_ATTRIBUTES\" );\nconst mediaAttributes = [\n  \"autoPlay\",\n  \"canAirPlay\",\n  \"canFullscreen\",\n  \"canGoogleCast\",\n  \"canLoad\",\n  \"canLoadPoster\",\n  \"canPictureInPicture\",\n  \"canPlay\",\n  \"canSeek\",\n  \"ended\",\n  \"fullscreen\",\n  \"isAirPlayConnected\",\n  \"isGoogleCastConnected\",\n  \"live\",\n  \"liveEdge\",\n  \"loop\",\n  \"mediaType\",\n  \"muted\",\n  \"paused\",\n  \"pictureInPicture\",\n  \"playing\",\n  \"playsInline\",\n  \"remotePlaybackState\",\n  \"remotePlaybackType\",\n  \"seeking\",\n  \"started\",\n  \"streamType\",\n  \"viewType\",\n  \"waiting\"\n];\n\nconst mediaPlayerProps = {\n  artist: \"\",\n  artwork: null,\n  autoplay: false,\n  autoPlay: false,\n  clipStartTime: 0,\n  clipEndTime: 0,\n  controls: false,\n  currentTime: 0,\n  crossorigin: null,\n  crossOrigin: null,\n  duration: -1,\n  fullscreenOrientation: \"landscape\",\n  googleCast: {},\n  load: \"visible\",\n  posterLoad: \"visible\",\n  logLevel: \"warn\" ,\n  loop: false,\n  muted: false,\n  paused: true,\n  playsinline: false,\n  playsInline: false,\n  playbackRate: 1,\n  poster: \"\",\n  preload: \"metadata\",\n  preferNativeHLS: false,\n  src: \"\",\n  title: \"\",\n  controlsDelay: 2e3,\n  hideControlsOnMouseLeave: false,\n  viewType: \"unknown\",\n  streamType: \"unknown\",\n  volume: 1,\n  liveEdgeTolerance: 10,\n  minLiveDVRWindow: 60,\n  keyDisabled: false,\n  keyTarget: \"player\",\n  keyShortcuts: MEDIA_KEY_SHORTCUTS,\n  storage: null\n};\n\nconst MEDIA_EVENTS = [\n  \"abort\",\n  \"can-play\",\n  \"can-play-through\",\n  \"duration-change\",\n  \"emptied\",\n  \"ended\",\n  \"error\",\n  \"fullscreen-change\",\n  \"loaded-data\",\n  \"loaded-metadata\",\n  \"load-start\",\n  \"media-type-change\",\n  \"pause\",\n  \"play\",\n  \"playing\",\n  \"progress\",\n  \"seeked\",\n  \"seeking\",\n  \"source-change\",\n  \"sources-change\",\n  \"stalled\",\n  \"started\",\n  \"suspend\",\n  \"stream-type-change\",\n  \"replay\",\n  // time-change,\n  // 'time-update',\n  \"view-type-change\",\n  \"volume-change\",\n  \"waiting\"\n] ;\nclass MediaEventsLogger extends MediaPlayerController {\n  #media;\n  constructor(media) {\n    super();\n    this.#media = media;\n  }\n  onConnect(el) {\n    const events = new EventsController(el), handler = this.#onMediaEvent.bind(this);\n    for (const eventType of MEDIA_EVENTS) {\n      events.add(eventType, handler);\n    }\n  }\n  #onMediaEvent(event) {\n    this.#media.logger?.debugGroup(`\\u{1F4E1} dispatching \\`${event.type}\\``).labelledLog(\"Media Store\", { ...this.$state }).labelledLog(\"Event\", event).dispatch();\n  }\n}\n\nclass MediaLoadController extends MediaPlayerController {\n  #type;\n  #callback;\n  constructor(type, callback) {\n    super();\n    this.#type = type;\n    this.#callback = callback;\n  }\n  async onAttach(el) {\n    const load = this.$props[this.#type]();\n    if (load === \"eager\") {\n      requestAnimationFrame(this.#callback);\n    } else if (load === \"idle\") {\n      waitIdlePeriod(this.#callback);\n    } else if (load === \"visible\") {\n      let dispose, observer = new IntersectionObserver((entries) => {\n        if (!this.scope) return;\n        if (entries[0].isIntersecting) {\n          dispose?.();\n          dispose = void 0;\n          this.#callback();\n        }\n      });\n      observer.observe(el);\n      dispose = onDispose(() => observer.disconnect());\n    }\n  }\n}\n\nlet seenAutoplayWarning = false;\nclass MediaPlayerDelegate {\n  #handle;\n  #media;\n  constructor(handle, media) {\n    this.#handle = handle;\n    this.#media = media;\n  }\n  notify(type, ...init) {\n    this.#handle(\n      new DOMEvent(type, {\n        detail: init?.[0],\n        trigger: init?.[1]\n      })\n    );\n  }\n  async ready(info, trigger) {\n    return untrack(async () => {\n      const { logger } = this.#media, {\n        autoPlay,\n        canPlay,\n        started,\n        duration,\n        seekable,\n        buffered,\n        remotePlaybackInfo,\n        playsInline,\n        savedState,\n        source\n      } = this.#media.$state;\n      if (canPlay()) return;\n      const detail = {\n        duration: info?.duration ?? duration(),\n        seekable: info?.seekable ?? seekable(),\n        buffered: info?.buffered ?? buffered(),\n        provider: this.#media.$provider()\n      };\n      this.notify(\"can-play\", detail, trigger);\n      tick();\n      {\n        logger?.infoGroup(\"-~-~-~-~-~-~- \\u2705 MEDIA READY -~-~-~-~-~-~-\").labelledLog(\"Media\", this.#media).labelledLog(\"Trigger Event\", trigger).dispatch();\n      }\n      let provider = this.#media.$provider(), { storage, qualities } = this.#media, { muted, volume, clipStartTime, playbackRate } = this.#media.$props;\n      await storage?.onLoad?.(source());\n      const savedPlaybackTime = savedState()?.currentTime, savedPausedState = savedState()?.paused, storageTime = await storage?.getTime(), startTime = savedPlaybackTime ?? storageTime ?? clipStartTime(), shouldAutoPlay = savedPausedState === false || savedPausedState !== true && !started() && autoPlay();\n      if (provider) {\n        provider.setVolume(await storage?.getVolume() ?? volume());\n        provider.setMuted(muted() || !!await storage?.getMuted());\n        const audioGain = await storage?.getAudioGain() ?? 1;\n        if (audioGain > 1) provider.audioGain?.setGain?.(audioGain);\n        provider.setPlaybackRate?.(await storage?.getPlaybackRate() ?? playbackRate());\n        provider.setPlaysInline?.(playsInline());\n        if (startTime > 0) provider.setCurrentTime(startTime);\n      }\n      const prefQuality = await storage?.getVideoQuality();\n      if (prefQuality && qualities.length) {\n        let currentQuality = null, currentScore = Infinity;\n        for (const quality of qualities) {\n          const score = Math.abs(prefQuality.width - quality.width) + Math.abs(prefQuality.height - quality.height) + (prefQuality.bitrate ? Math.abs(prefQuality.bitrate - (quality.bitrate ?? 0)) : 0);\n          if (score < currentScore) {\n            currentQuality = quality;\n            currentScore = score;\n          }\n        }\n        if (currentQuality) currentQuality.selected = true;\n      }\n      if (canPlay() && shouldAutoPlay) {\n        await this.#attemptAutoplay(trigger);\n      } else if (storageTime && storageTime > 0) {\n        this.notify(\"started\", void 0, trigger);\n      }\n      remotePlaybackInfo.set(null);\n    });\n  }\n  async #attemptAutoplay(trigger) {\n    const {\n      player,\n      $state: { autoPlaying, muted }\n    } = this.#media;\n    autoPlaying.set(true);\n    const attemptEvent = new DOMEvent(\"auto-play-attempt\", { trigger });\n    try {\n      await player.play(attemptEvent);\n    } catch (error) {\n      if (!seenAutoplayWarning) {\n        const muteMsg = !muted() ? \" Attempting with volume muted will most likely resolve the issue.\" : \"\";\n        this.#media.logger?.errorGroup(\"[vidstack] auto-play request failed\").labelledLog(\n          \"Message\",\n          `Autoplay was requested but failed most likely due to browser autoplay policies or accessibility reasons.${muteMsg}`\n        ).labelledLog(\"Trigger Event\", trigger).labelledLog(\"Error\", error).labelledLog(\"See\", \"https://developer.chrome.com/blog/autoplay\").dispatch();\n        seenAutoplayWarning = true;\n      }\n    }\n  }\n}\n\nclass Queue {\n  #queue = /* @__PURE__ */ new Map();\n  /**\n   * Queue the given `item` under the given `key` to be processed at a later time by calling\n   * `serve(key)`.\n   */\n  enqueue(key, item) {\n    this.#queue.set(key, item);\n  }\n  /**\n   * Process item in queue for the given `key`.\n   */\n  serve(key) {\n    const value = this.peek(key);\n    this.#queue.delete(key);\n    return value;\n  }\n  /**\n   * Peek at item in queue for the given `key`.\n   */\n  peek(key) {\n    return this.#queue.get(key);\n  }\n  /**\n   * Removes queued item under the given `key`.\n   */\n  delete(key) {\n    this.#queue.delete(key);\n  }\n  /**\n   * Clear all items in the queue.\n   */\n  clear() {\n    this.#queue.clear();\n  }\n}\n\nclass RequestQueue {\n  #serving = false;\n  #pending = deferredPromise();\n  #queue = /* @__PURE__ */ new Map();\n  /**\n   * The number of callbacks that are currently in queue.\n   */\n  get size() {\n    return this.#queue.size;\n  }\n  /**\n   * Whether items in the queue are being served immediately, otherwise they're queued to\n   * be processed later.\n   */\n  get isServing() {\n    return this.#serving;\n  }\n  /**\n   * Waits for the queue to be flushed (ie: start serving).\n   */\n  async waitForFlush() {\n    if (this.#serving) return;\n    await this.#pending.promise;\n  }\n  /**\n   * Queue the given `callback` to be invoked at a later time by either calling the `serve()` or\n   * `start()` methods. If the queue has started serving (i.e., `start()` was already called),\n   * then the callback will be invoked immediately.\n   *\n   * @param key - Uniquely identifies this callback so duplicates are ignored.\n   * @param callback - The function to call when this item in the queue is being served.\n   */\n  enqueue(key, callback) {\n    if (this.#serving) {\n      callback();\n      return;\n    }\n    this.#queue.delete(key);\n    this.#queue.set(key, callback);\n  }\n  /**\n   * Invokes the callback with the given `key` in the queue (if it exists).\n   */\n  serve(key) {\n    this.#queue.get(key)?.();\n    this.#queue.delete(key);\n  }\n  /**\n   * Flush all queued items and start serving future requests immediately until `stop()` is called.\n   */\n  start() {\n    this.#flush();\n    this.#serving = true;\n    if (this.#queue.size > 0) this.#flush();\n  }\n  /**\n   * Stop serving requests, they'll be queued until you begin processing again by calling `start()`.\n   */\n  stop() {\n    this.#serving = false;\n  }\n  /**\n   * Stop serving requests, empty the request queue, and release any promises waiting for the\n   * queue to flush.\n   */\n  reset() {\n    this.stop();\n    this.#queue.clear();\n    this.#release();\n  }\n  #flush() {\n    for (const key of this.#queue.keys()) this.serve(key);\n    this.#release();\n  }\n  #release() {\n    this.#pending.resolve();\n    this.#pending = deferredPromise();\n  }\n}\n\nclass MediaRequestManager extends MediaPlayerController {\n  #stateMgr;\n  #request;\n  #media;\n  controls;\n  #fullscreen;\n  #orientation;\n  #$provider;\n  #providerQueue = new RequestQueue();\n  constructor(stateMgr, request, media) {\n    super();\n    this.#stateMgr = stateMgr;\n    this.#request = request;\n    this.#media = media;\n    this.#$provider = media.$provider;\n    this.controls = new MediaControls();\n    this.#fullscreen = new FullscreenController();\n    this.#orientation = new ScreenOrientationController();\n  }\n  onAttach() {\n    this.listen(\"fullscreen-change\", this.#onFullscreenChange.bind(this));\n  }\n  onConnect(el) {\n    const names = Object.getOwnPropertyNames(Object.getPrototypeOf(this)), events = new EventsController(el), handleRequest = this.#handleRequest.bind(this);\n    for (const name of names) {\n      if (name.startsWith(\"media-\")) {\n        events.add(name, handleRequest);\n      }\n    }\n    this.#attachLoadPlayListener();\n    effect(this.#watchProvider.bind(this));\n    effect(this.#watchControlsDelayChange.bind(this));\n    effect(this.#watchAudioGainSupport.bind(this));\n    effect(this.#watchAirPlaySupport.bind(this));\n    effect(this.#watchGoogleCastSupport.bind(this));\n    effect(this.#watchFullscreenSupport.bind(this));\n    effect(this.#watchPiPSupport.bind(this));\n  }\n  onDestroy() {\n    try {\n      const destroyEvent = this.createEvent(\"destroy\"), { pictureInPicture, fullscreen } = this.$state;\n      if (fullscreen()) this.exitFullscreen(\"prefer-media\", destroyEvent);\n      if (pictureInPicture()) this.exitPictureInPicture(destroyEvent);\n    } catch (e) {\n    }\n    this.#providerQueue.reset();\n  }\n  #attachLoadPlayListener() {\n    const { load } = this.$props, { canLoad } = this.$state;\n    if (load() !== \"play\" || canLoad()) return;\n    const off = this.listen(\"media-play-request\", (event) => {\n      this.#handleLoadPlayStrategy(event);\n      off();\n    });\n  }\n  #watchProvider() {\n    const provider = this.#$provider(), canPlay = this.$state.canPlay();\n    if (provider && canPlay) {\n      this.#providerQueue.start();\n    }\n    return () => {\n      this.#providerQueue.stop();\n    };\n  }\n  #handleRequest(event) {\n    event.stopPropagation();\n    if (event.defaultPrevented) return;\n    {\n      this.#media.logger?.infoGroup(`\\u{1F4EC} received \\`${event.type}\\``).labelledLog(\"Request\", event).dispatch();\n    }\n    if (!this[event.type]) return;\n    if (peek(this.#$provider)) {\n      this[event.type](event);\n    } else {\n      this.#providerQueue.enqueue(event.type, () => {\n        if (peek(this.#$provider)) this[event.type](event);\n      });\n    }\n  }\n  async play(trigger) {\n    const { canPlay, paused, autoPlaying } = this.$state;\n    if (this.#handleLoadPlayStrategy(trigger)) return;\n    if (!peek(paused)) return;\n    if (trigger) this.#request.queue.enqueue(\"media-play-request\", trigger);\n    const isAutoPlaying = peek(autoPlaying);\n    try {\n      const provider = peek(this.#$provider);\n      throwIfNotReadyForPlayback(provider, peek(canPlay));\n      throwIfAutoplayingWithReducedMotion(isAutoPlaying);\n      return await provider.play();\n    } catch (error) {\n      this.#logError(\"play request failed\", error, trigger);\n      const errorEvent = this.createEvent(\"play-fail\", {\n        detail: coerceToError(error),\n        trigger\n      });\n      errorEvent.autoPlay = isAutoPlaying;\n      this.#stateMgr.handle(errorEvent);\n      throw error;\n    }\n  }\n  #handleLoadPlayStrategy(trigger) {\n    const { load } = this.$props, { canLoad } = this.$state;\n    if (load() === \"play\" && !canLoad()) {\n      const event = this.createEvent(\"media-start-loading\", { trigger });\n      this.dispatchEvent(event);\n      this.#providerQueue.enqueue(\"media-play-request\", async () => {\n        try {\n          await this.play(event);\n        } catch (error) {\n        }\n      });\n      return true;\n    }\n    return false;\n  }\n  async pause(trigger) {\n    const { canPlay, paused } = this.$state;\n    if (peek(paused)) return;\n    if (trigger) {\n      this.#request.queue.enqueue(\"media-pause-request\", trigger);\n    }\n    try {\n      const provider = peek(this.#$provider);\n      throwIfNotReadyForPlayback(provider, peek(canPlay));\n      return await provider.pause();\n    } catch (error) {\n      this.#request.queue.delete(\"media-pause-request\");\n      {\n        this.#logError(\"pause request failed\", error, trigger);\n      }\n      throw error;\n    }\n  }\n  setAudioGain(gain, trigger) {\n    const { audioGain, canSetAudioGain } = this.$state;\n    if (audioGain() === gain) return;\n    const provider = this.#$provider();\n    if (!provider?.audioGain || !canSetAudioGain()) {\n      throw Error(\"[vidstack] audio gain api not available\");\n    }\n    if (trigger) {\n      this.#request.queue.enqueue(\"media-audio-gain-change-request\", trigger);\n    }\n    provider.audioGain.setGain(gain);\n  }\n  seekToLiveEdge(trigger) {\n    const { canPlay, live, liveEdge, canSeek, liveSyncPosition, seekableEnd, userBehindLiveEdge } = this.$state;\n    userBehindLiveEdge.set(false);\n    if (peek(() => !live() || liveEdge() || !canSeek())) return;\n    const provider = peek(this.#$provider);\n    throwIfNotReadyForPlayback(provider, peek(canPlay));\n    if (trigger) this.#request.queue.enqueue(\"media-seek-request\", trigger);\n    const end = seekableEnd() - 2;\n    provider.setCurrentTime(Math.min(end, liveSyncPosition() ?? end));\n  }\n  #wasPIPActive = false;\n  async enterFullscreen(target = \"prefer-media\", trigger) {\n    const adapter = this.#getFullscreenAdapter(target);\n    throwIfFullscreenNotSupported(target, adapter);\n    if (adapter.active) return;\n    if (peek(this.$state.pictureInPicture)) {\n      this.#wasPIPActive = true;\n      await this.exitPictureInPicture(trigger);\n    }\n    if (trigger) {\n      this.#request.queue.enqueue(\"media-enter-fullscreen-request\", trigger);\n    }\n    return adapter.enter();\n  }\n  async exitFullscreen(target = \"prefer-media\", trigger) {\n    const adapter = this.#getFullscreenAdapter(target);\n    throwIfFullscreenNotSupported(target, adapter);\n    if (!adapter.active) return;\n    if (trigger) {\n      this.#request.queue.enqueue(\"media-exit-fullscreen-request\", trigger);\n    }\n    try {\n      const result = await adapter.exit();\n      if (this.#wasPIPActive && peek(this.$state.canPictureInPicture)) {\n        await this.enterPictureInPicture();\n      }\n      return result;\n    } finally {\n      this.#wasPIPActive = false;\n    }\n  }\n  #getFullscreenAdapter(target) {\n    const provider = peek(this.#$provider);\n    return target === \"prefer-media\" && this.#fullscreen.supported || target === \"media\" ? this.#fullscreen : provider?.fullscreen;\n  }\n  async enterPictureInPicture(trigger) {\n    this.#throwIfPIPNotSupported();\n    if (this.$state.pictureInPicture()) return;\n    if (trigger) {\n      this.#request.queue.enqueue(\"media-enter-pip-request\", trigger);\n    }\n    return await this.#$provider().pictureInPicture.enter();\n  }\n  async exitPictureInPicture(trigger) {\n    this.#throwIfPIPNotSupported();\n    if (!this.$state.pictureInPicture()) return;\n    if (trigger) {\n      this.#request.queue.enqueue(\"media-exit-pip-request\", trigger);\n    }\n    return await this.#$provider().pictureInPicture.exit();\n  }\n  #throwIfPIPNotSupported() {\n    if (this.$state.canPictureInPicture()) return;\n    throw Error(\n      `[vidstack] picture-in-picture is not currently available` \n    );\n  }\n  #watchControlsDelayChange() {\n    this.controls.defaultDelay = this.$props.controlsDelay();\n  }\n  #watchAudioGainSupport() {\n    const { canSetAudioGain } = this.$state, supported = !!this.#$provider()?.audioGain?.supported;\n    canSetAudioGain.set(supported);\n  }\n  #watchAirPlaySupport() {\n    const { canAirPlay } = this.$state, supported = !!this.#$provider()?.airPlay?.supported;\n    canAirPlay.set(supported);\n  }\n  #watchGoogleCastSupport() {\n    const { canGoogleCast, source } = this.$state, supported = IS_CHROME && !IS_IOS && canGoogleCastSrc(source());\n    canGoogleCast.set(supported);\n  }\n  #watchFullscreenSupport() {\n    const { canFullscreen } = this.$state, supported = this.#fullscreen.supported || !!this.#$provider()?.fullscreen?.supported;\n    canFullscreen.set(supported);\n  }\n  #watchPiPSupport() {\n    const { canPictureInPicture } = this.$state, supported = !!this.#$provider()?.pictureInPicture?.supported;\n    canPictureInPicture.set(supported);\n  }\n  async [\"media-airplay-request\"](event) {\n    try {\n      await this.requestAirPlay(event);\n    } catch (error) {\n    }\n  }\n  async requestAirPlay(trigger) {\n    try {\n      const adapter = this.#$provider()?.airPlay;\n      if (!adapter?.supported) {\n        throw Error(true ? \"AirPlay adapter not available on provider.\" : \"No AirPlay adapter.\");\n      }\n      if (trigger) {\n        this.#request.queue.enqueue(\"media-airplay-request\", trigger);\n      }\n      return await adapter.prompt();\n    } catch (error) {\n      this.#request.queue.delete(\"media-airplay-request\");\n      {\n        this.#logError(\"airplay request failed\", error, trigger);\n      }\n      throw error;\n    }\n  }\n  async [\"media-google-cast-request\"](event) {\n    try {\n      await this.requestGoogleCast(event);\n    } catch (error) {\n    }\n  }\n  #googleCastLoader;\n  async requestGoogleCast(trigger) {\n    try {\n      const { canGoogleCast } = this.$state;\n      if (!peek(canGoogleCast)) {\n        const error = Error(\n          true ? \"Google Cast not available on this platform.\" : \"Cast not available.\"\n        );\n        error.code = \"CAST_NOT_AVAILABLE\";\n        throw error;\n      }\n      preconnect(\"https://www.gstatic.com\");\n      if (!this.#googleCastLoader) {\n        const $module = await import('./vidstack-C0zlo444.js');\n        this.#googleCastLoader = new $module.GoogleCastLoader();\n      }\n      await this.#googleCastLoader.prompt(this.#media);\n      if (trigger) {\n        this.#request.queue.enqueue(\"media-google-cast-request\", trigger);\n      }\n      const isConnecting = peek(this.$state.remotePlaybackState) !== \"disconnected\";\n      if (isConnecting) {\n        this.$state.savedState.set({\n          paused: peek(this.$state.paused),\n          currentTime: peek(this.$state.currentTime)\n        });\n      }\n      this.$state.remotePlaybackLoader.set(isConnecting ? this.#googleCastLoader : null);\n    } catch (error) {\n      this.#request.queue.delete(\"media-google-cast-request\");\n      {\n        this.#logError(\"google cast request failed\", error, trigger);\n      }\n      throw error;\n    }\n  }\n  [\"media-clip-start-change-request\"](event) {\n    const { clipStartTime } = this.$state;\n    clipStartTime.set(event.detail);\n  }\n  [\"media-clip-end-change-request\"](event) {\n    const { clipEndTime } = this.$state;\n    clipEndTime.set(event.detail);\n    this.dispatch(\"duration-change\", {\n      detail: event.detail,\n      trigger: event\n    });\n  }\n  [\"media-duration-change-request\"](event) {\n    const { providedDuration, clipEndTime } = this.$state;\n    providedDuration.set(event.detail);\n    if (clipEndTime() <= 0) {\n      this.dispatch(\"duration-change\", {\n        detail: event.detail,\n        trigger: event\n      });\n    }\n  }\n  [\"media-audio-track-change-request\"](event) {\n    const { logger, audioTracks } = this.#media;\n    if (audioTracks.readonly) {\n      {\n        logger?.warnGroup(`[vidstack] attempted to change audio track but it is currently read-only`).labelledLog(\"Request Event\", event).dispatch();\n      }\n      return;\n    }\n    const index = event.detail, track = audioTracks[index];\n    if (track) {\n      const key = event.type;\n      this.#request.queue.enqueue(key, event);\n      track.selected = true;\n    } else {\n      logger?.warnGroup(\"[vidstack] failed audio track change request (invalid index)\").labelledLog(\"Audio Tracks\", audioTracks.toArray()).labelledLog(\"Index\", index).labelledLog(\"Request Event\", event).dispatch();\n    }\n  }\n  async [\"media-enter-fullscreen-request\"](event) {\n    try {\n      await this.enterFullscreen(event.detail, event);\n    } catch (error) {\n      this.#onFullscreenError(error, event);\n    }\n  }\n  async [\"media-exit-fullscreen-request\"](event) {\n    try {\n      await this.exitFullscreen(event.detail, event);\n    } catch (error) {\n      this.#onFullscreenError(error, event);\n    }\n  }\n  async #onFullscreenChange(event) {\n    const lockType = peek(this.$props.fullscreenOrientation), isFullscreen = event.detail;\n    if (isUndefined(lockType) || lockType === \"none\" || !this.#orientation.supported) return;\n    if (isFullscreen) {\n      if (this.#orientation.locked) return;\n      this.dispatch(\"media-orientation-lock-request\", {\n        detail: lockType,\n        trigger: event\n      });\n    } else if (this.#orientation.locked) {\n      this.dispatch(\"media-orientation-unlock-request\", {\n        trigger: event\n      });\n    }\n  }\n  #onFullscreenError(error, request) {\n    {\n      this.#logError(\"fullscreen request failed\", error, request);\n    }\n    this.#stateMgr.handle(\n      this.createEvent(\"fullscreen-error\", {\n        detail: coerceToError(error)\n      })\n    );\n  }\n  async [\"media-orientation-lock-request\"](event) {\n    const key = event.type;\n    try {\n      this.#request.queue.enqueue(key, event);\n      await this.#orientation.lock(event.detail);\n    } catch (error) {\n      this.#request.queue.delete(key);\n      {\n        this.#logError(\"failed to lock screen orientation\", error, event);\n      }\n    }\n  }\n  async [\"media-orientation-unlock-request\"](event) {\n    const key = event.type;\n    try {\n      this.#request.queue.enqueue(key, event);\n      await this.#orientation.unlock();\n    } catch (error) {\n      this.#request.queue.delete(key);\n      {\n        this.#logError(\"failed to unlock screen orientation\", error, event);\n      }\n    }\n  }\n  async [\"media-enter-pip-request\"](event) {\n    try {\n      await this.enterPictureInPicture(event);\n    } catch (error) {\n      this.#onPictureInPictureError(error, event);\n    }\n  }\n  async [\"media-exit-pip-request\"](event) {\n    try {\n      await this.exitPictureInPicture(event);\n    } catch (error) {\n      this.#onPictureInPictureError(error, event);\n    }\n  }\n  #onPictureInPictureError(error, request) {\n    {\n      this.#logError(\"pip request failed\", error, request);\n    }\n    this.#stateMgr.handle(\n      this.createEvent(\"picture-in-picture-error\", {\n        detail: coerceToError(error)\n      })\n    );\n  }\n  [\"media-live-edge-request\"](event) {\n    const { live, liveEdge, canSeek } = this.$state;\n    if (!live() || liveEdge() || !canSeek()) return;\n    this.#request.queue.enqueue(\"media-seek-request\", event);\n    try {\n      this.seekToLiveEdge();\n    } catch (error) {\n      this.#request.queue.delete(\"media-seek-request\");\n      {\n        this.#logError(\"seek to live edge fail\", error, event);\n      }\n    }\n  }\n  async [\"media-loop-request\"](event) {\n    try {\n      this.#request.looping = true;\n      this.#request.replaying = true;\n      await this.play(event);\n    } catch (error) {\n      this.#request.looping = false;\n    }\n  }\n  [\"media-user-loop-change-request\"](event) {\n    this.$state.userPrefersLoop.set(event.detail);\n  }\n  async [\"media-pause-request\"](event) {\n    if (this.$state.paused()) return;\n    try {\n      await this.pause(event);\n    } catch (error) {\n    }\n  }\n  async [\"media-play-request\"](event) {\n    if (!this.$state.paused()) return;\n    try {\n      await this.play(event);\n    } catch (e) {\n    }\n  }\n  [\"media-rate-change-request\"](event) {\n    const { playbackRate, canSetPlaybackRate } = this.$state;\n    if (playbackRate() === event.detail || !canSetPlaybackRate()) return;\n    const provider = this.#$provider();\n    if (!provider?.setPlaybackRate) return;\n    this.#request.queue.enqueue(\"media-rate-change-request\", event);\n    provider.setPlaybackRate(event.detail);\n  }\n  [\"media-audio-gain-change-request\"](event) {\n    try {\n      this.setAudioGain(event.detail, event);\n    } catch (e) {\n    }\n  }\n  [\"media-quality-change-request\"](event) {\n    const { qualities, storage, logger } = this.#media;\n    if (qualities.readonly) {\n      {\n        logger?.warnGroup(`[vidstack] attempted to change video quality but it is currently read-only`).labelledLog(\"Request Event\", event).dispatch();\n      }\n      return;\n    }\n    this.#request.queue.enqueue(\"media-quality-change-request\", event);\n    const index = event.detail;\n    if (index < 0) {\n      qualities.autoSelect(event);\n      if (event.isOriginTrusted) storage?.setVideoQuality?.(null);\n    } else {\n      const quality = qualities[index];\n      if (quality) {\n        quality.selected = true;\n        if (event.isOriginTrusted) {\n          storage?.setVideoQuality?.({\n            id: quality.id,\n            width: quality.width,\n            height: quality.height,\n            bitrate: quality.bitrate\n          });\n        }\n      } else {\n        logger?.warnGroup(\"[vidstack] failed quality change request (invalid index)\").labelledLog(\"Qualities\", qualities.toArray()).labelledLog(\"Index\", index).labelledLog(\"Request Event\", event).dispatch();\n      }\n    }\n  }\n  [\"media-pause-controls-request\"](event) {\n    const key = event.type;\n    this.#request.queue.enqueue(key, event);\n    this.controls.pause(event);\n  }\n  [\"media-resume-controls-request\"](event) {\n    const key = event.type;\n    this.#request.queue.enqueue(key, event);\n    this.controls.resume(event);\n  }\n  [\"media-seek-request\"](event) {\n    const { canSeek, ended, live, seekableEnd, userBehindLiveEdge } = this.$state, seekTime = event.detail;\n    if (ended()) this.#request.replaying = true;\n    const key = event.type;\n    this.#request.seeking = false;\n    this.#request.queue.delete(key);\n    const boundedTime = boundTime(seekTime, this.$state);\n    if (!Number.isFinite(boundedTime) || !canSeek()) return;\n    this.#request.queue.enqueue(key, event);\n    this.#$provider().setCurrentTime(boundedTime);\n    if (live() && event.isOriginTrusted && Math.abs(seekableEnd() - boundedTime) >= 2) {\n      userBehindLiveEdge.set(true);\n    }\n  }\n  [\"media-seeking-request\"](event) {\n    const key = event.type;\n    this.#request.queue.enqueue(key, event);\n    this.$state.seeking.set(true);\n    this.#request.seeking = true;\n  }\n  [\"media-start-loading\"](event) {\n    if (this.$state.canLoad()) return;\n    const key = event.type;\n    this.#request.queue.enqueue(key, event);\n    this.#stateMgr.handle(this.createEvent(\"can-load\"));\n  }\n  [\"media-poster-start-loading\"](event) {\n    if (this.$state.canLoadPoster()) return;\n    const key = event.type;\n    this.#request.queue.enqueue(key, event);\n    this.#stateMgr.handle(this.createEvent(\"can-load-poster\"));\n  }\n  [\"media-text-track-change-request\"](event) {\n    const { index, mode } = event.detail, track = this.#media.textTracks[index];\n    if (track) {\n      const key = event.type;\n      this.#request.queue.enqueue(key, event);\n      track.setMode(mode, event);\n    } else {\n      this.#media.logger?.warnGroup(\"[vidstack] failed text track change request (invalid index)\").labelledLog(\"Text Tracks\", this.#media.textTracks.toArray()).labelledLog(\"Index\", index).labelledLog(\"Request Event\", event).dispatch();\n    }\n  }\n  [\"media-mute-request\"](event) {\n    if (this.$state.muted()) return;\n    const key = event.type;\n    this.#request.queue.enqueue(key, event);\n    this.#$provider().setMuted(true);\n  }\n  [\"media-unmute-request\"](event) {\n    const { muted, volume } = this.$state;\n    if (!muted()) return;\n    const key = event.type;\n    this.#request.queue.enqueue(key, event);\n    this.#media.$provider().setMuted(false);\n    if (volume() === 0) {\n      this.#request.queue.enqueue(key, event);\n      this.#$provider().setVolume(0.25);\n    }\n  }\n  [\"media-volume-change-request\"](event) {\n    const { muted, volume } = this.$state;\n    const newVolume = event.detail;\n    if (volume() === newVolume) return;\n    const key = event.type;\n    this.#request.queue.enqueue(key, event);\n    this.#$provider().setVolume(newVolume);\n    if (newVolume > 0 && muted()) {\n      this.#request.queue.enqueue(key, event);\n      this.#$provider().setMuted(false);\n    }\n  }\n  #logError(title, error, request) {\n    this.#media.logger?.errorGroup(`[vidstack] ${title}`).labelledLog(\"Error\", error).labelledLog(\"Media Context\", { ...this.#media }).labelledLog(\"Trigger Event\", request).dispatch();\n  }\n}\nfunction throwIfNotReadyForPlayback(provider, canPlay) {\n  if (provider && canPlay) return;\n  throw Error(\n    `[vidstack] media is not ready - wait for \\`can-play\\` event.` \n  );\n}\nfunction throwIfFullscreenNotSupported(target, fullscreen) {\n  if (fullscreen?.supported) return;\n  throw Error(\n    `[vidstack] fullscreen is not currently available on target \\`${target}\\`` \n  );\n}\nfunction throwIfAutoplayingWithReducedMotion(autoplaying) {\n  if (!prefersReducedMotion() || !autoplaying) return;\n  throw Error(\n    \"[vidstack] autoplay is blocked due to user preference for reduced motion\" \n  );\n}\nclass MediaRequestContext {\n  seeking = false;\n  looping = false;\n  replaying = false;\n  queue = new Queue();\n}\n\nconst TRACKED_EVENT = /* @__PURE__ */ new Set([\n  \"auto-play\",\n  \"auto-play-fail\",\n  \"can-load\",\n  \"sources-change\",\n  \"source-change\",\n  \"load-start\",\n  \"abort\",\n  \"error\",\n  \"loaded-metadata\",\n  \"loaded-data\",\n  \"can-play\",\n  \"play\",\n  \"play-fail\",\n  \"pause\",\n  \"playing\",\n  \"seeking\",\n  \"seeked\",\n  \"waiting\"\n]);\n\nclass MediaStateManager extends MediaPlayerController {\n  #request;\n  #media;\n  #trackedEvents = /* @__PURE__ */ new Map();\n  #clipEnded = false;\n  #playedIntervals = [];\n  #playedInterval = [-1, -1];\n  #firingWaiting = false;\n  #waitingTrigger;\n  constructor(request, media) {\n    super();\n    this.#request = request;\n    this.#media = media;\n  }\n  onAttach(el) {\n    el.setAttribute(\"aria-busy\", \"true\");\n    new EventsController(this).add(\"fullscreen-change\", this[\"fullscreen-change\"].bind(this)).add(\"fullscreen-error\", this[\"fullscreen-error\"].bind(this)).add(\"orientation-change\", this[\"orientation-change\"].bind(this));\n  }\n  onConnect(el) {\n    effect(this.#watchCanSetVolume.bind(this));\n    this.#addTextTrackListeners();\n    this.#addQualityListeners();\n    this.#addAudioTrackListeners();\n    this.#resumePlaybackOnConnect();\n    onDispose(this.#pausePlaybackOnDisconnect.bind(this));\n  }\n  onDestroy() {\n    const { audioTracks, qualities, textTracks } = this.#media;\n    audioTracks[ListSymbol.reset]();\n    qualities[ListSymbol.reset]();\n    textTracks[ListSymbol.reset]();\n    this.#stopWatchingQualityResize();\n  }\n  handle(event) {\n    if (!this.scope) return;\n    const type = event.type;\n    untrack(() => this[event.type]?.(event));\n    {\n      if (TRACKED_EVENT.has(type)) this.#trackedEvents.set(type, event);\n      this.dispatch(event);\n    }\n  }\n  #isPlayingOnDisconnect = false;\n  #resumePlaybackOnConnect() {\n    if (!this.#isPlayingOnDisconnect) return;\n    requestAnimationFrame(() => {\n      if (!this.scope) return;\n      this.#media.remote.play(new DOMEvent(\"dom-connect\"));\n    });\n    this.#isPlayingOnDisconnect = false;\n  }\n  #pausePlaybackOnDisconnect() {\n    if (this.#isPlayingOnDisconnect) return;\n    this.#isPlayingOnDisconnect = !this.$state.paused();\n    this.#media.$provider()?.pause();\n  }\n  #resetTracking() {\n    this.#stopWaiting();\n    this.#clipEnded = false;\n    this.#request.replaying = false;\n    this.#request.looping = false;\n    this.#firingWaiting = false;\n    this.#waitingTrigger = void 0;\n    this.#trackedEvents.clear();\n  }\n  #satisfyRequest(request, event) {\n    const requestEvent = this.#request.queue.serve(request);\n    if (!requestEvent) return;\n    event.request = requestEvent;\n    event.triggers.add(requestEvent);\n  }\n  #addTextTrackListeners() {\n    this.#onTextTracksChange();\n    this.#onTextTrackModeChange();\n    const textTracks = this.#media.textTracks;\n    new EventsController(textTracks).add(\"add\", this.#onTextTracksChange.bind(this)).add(\"remove\", this.#onTextTracksChange.bind(this)).add(\"mode-change\", this.#onTextTrackModeChange.bind(this));\n  }\n  #addQualityListeners() {\n    const qualities = this.#media.qualities;\n    new EventsController(qualities).add(\"add\", this.#onQualitiesChange.bind(this)).add(\"remove\", this.#onQualitiesChange.bind(this)).add(\"change\", this.#onQualityChange.bind(this)).add(\"auto-change\", this.#onAutoQualityChange.bind(this)).add(\"readonly-change\", this.#onCanSetQualityChange.bind(this));\n  }\n  #addAudioTrackListeners() {\n    const audioTracks = this.#media.audioTracks;\n    new EventsController(audioTracks).add(\"add\", this.#onAudioTracksChange.bind(this)).add(\"remove\", this.#onAudioTracksChange.bind(this)).add(\"change\", this.#onAudioTrackChange.bind(this));\n  }\n  #onTextTracksChange(event) {\n    const { textTracks } = this.$state;\n    textTracks.set(this.#media.textTracks.toArray());\n    this.dispatch(\"text-tracks-change\", {\n      detail: textTracks(),\n      trigger: event\n    });\n  }\n  #onTextTrackModeChange(event) {\n    if (event) this.#satisfyRequest(\"media-text-track-change-request\", event);\n    const current = this.#media.textTracks.selected, { textTrack } = this.$state;\n    if (textTrack() !== current) {\n      textTrack.set(current);\n      this.dispatch(\"text-track-change\", {\n        detail: current,\n        trigger: event\n      });\n    }\n  }\n  #onAudioTracksChange(event) {\n    const { audioTracks } = this.$state;\n    audioTracks.set(this.#media.audioTracks.toArray());\n    this.dispatch(\"audio-tracks-change\", {\n      detail: audioTracks(),\n      trigger: event\n    });\n  }\n  #onAudioTrackChange(event) {\n    const { audioTrack } = this.$state;\n    audioTrack.set(this.#media.audioTracks.selected);\n    if (event) this.#satisfyRequest(\"media-audio-track-change-request\", event);\n    this.dispatch(\"audio-track-change\", {\n      detail: audioTrack(),\n      trigger: event\n    });\n  }\n  #onQualitiesChange(event) {\n    const { qualities } = this.$state;\n    qualities.set(this.#media.qualities.toArray());\n    this.dispatch(\"qualities-change\", {\n      detail: qualities(),\n      trigger: event\n    });\n  }\n  #onQualityChange(event) {\n    const { quality } = this.$state;\n    quality.set(this.#media.qualities.selected);\n    if (event) this.#satisfyRequest(\"media-quality-change-request\", event);\n    this.dispatch(\"quality-change\", {\n      detail: quality(),\n      trigger: event\n    });\n  }\n  #onAutoQualityChange() {\n    const { qualities } = this.#media, isAuto = qualities.auto;\n    this.$state.autoQuality.set(isAuto);\n    if (!isAuto) this.#stopWatchingQualityResize();\n  }\n  #stopQualityResizeEffect = null;\n  #watchQualityResize() {\n    this.#stopWatchingQualityResize();\n    this.#stopQualityResizeEffect = effect(() => {\n      const { qualities } = this.#media, { mediaWidth, mediaHeight } = this.$state, w = mediaWidth(), h = mediaHeight();\n      if (w === 0 || h === 0) return;\n      let selectedQuality = null, minScore = Infinity;\n      for (const quality of qualities) {\n        const score = Math.abs(quality.width - w) + Math.abs(quality.height - h);\n        if (score < minScore) {\n          minScore = score;\n          selectedQuality = quality;\n        }\n      }\n      if (selectedQuality) {\n        qualities[ListSymbol.select](\n          selectedQuality,\n          true,\n          new DOMEvent(\"resize\", { detail: { width: w, height: h } })\n        );\n      }\n    });\n  }\n  #stopWatchingQualityResize() {\n    this.#stopQualityResizeEffect?.();\n    this.#stopQualityResizeEffect = null;\n  }\n  #onCanSetQualityChange() {\n    this.$state.canSetQuality.set(!this.#media.qualities.readonly);\n  }\n  #watchCanSetVolume() {\n    const { canSetVolume, isGoogleCastConnected } = this.$state;\n    if (isGoogleCastConnected()) {\n      canSetVolume.set(false);\n      return;\n    }\n    canChangeVolume().then(canSetVolume.set);\n  }\n  [\"provider-change\"](event) {\n    const prevProvider = this.#media.$provider(), newProvider = event.detail;\n    if (prevProvider?.type === newProvider?.type) return;\n    prevProvider?.destroy?.();\n    prevProvider?.scope?.dispose();\n    this.#media.$provider.set(event.detail);\n    if (prevProvider && event.detail === null) {\n      this.#resetMediaState(event);\n    }\n  }\n  [\"provider-loader-change\"](event) {\n    {\n      this.#media.logger?.infoGroup(`Loader change \\`${event.detail?.constructor.name}\\``).labelledLog(\"Event\", event).dispatch();\n    }\n  }\n  [\"auto-play\"](event) {\n    this.$state.autoPlayError.set(null);\n  }\n  [\"auto-play-fail\"](event) {\n    this.$state.autoPlayError.set(event.detail);\n    this.#resetTracking();\n  }\n  [\"can-load\"](event) {\n    this.$state.canLoad.set(true);\n    this.#trackedEvents.set(\"can-load\", event);\n    this.#media.textTracks[TextTrackSymbol.canLoad]();\n    this.#satisfyRequest(\"media-start-loading\", event);\n  }\n  [\"can-load-poster\"](event) {\n    this.$state.canLoadPoster.set(true);\n    this.#trackedEvents.set(\"can-load-poster\", event);\n    this.#satisfyRequest(\"media-poster-start-loading\", event);\n  }\n  [\"media-type-change\"](event) {\n    const sourceChangeEvent = this.#trackedEvents.get(\"source-change\");\n    if (sourceChangeEvent) event.triggers.add(sourceChangeEvent);\n    const viewType = this.$state.viewType();\n    this.$state.mediaType.set(event.detail);\n    const providedViewType = this.$state.providedViewType(), currentViewType = providedViewType === \"unknown\" ? event.detail : providedViewType;\n    if (viewType !== currentViewType) {\n      {\n        setTimeout(() => {\n          requestAnimationFrame(() => {\n            if (!this.scope) return;\n            this.$state.inferredViewType.set(event.detail);\n            this.dispatch(\"view-type-change\", {\n              detail: currentViewType,\n              trigger: event\n            });\n          });\n        }, 0);\n      }\n    }\n  }\n  [\"stream-type-change\"](event) {\n    const sourceChangeEvent = this.#trackedEvents.get(\"source-change\");\n    if (sourceChangeEvent) event.triggers.add(sourceChangeEvent);\n    const { streamType, inferredStreamType } = this.$state;\n    inferredStreamType.set(event.detail);\n    event.detail = streamType();\n  }\n  [\"rate-change\"](event) {\n    const { storage } = this.#media, { canPlay } = this.$state;\n    this.$state.playbackRate.set(event.detail);\n    this.#satisfyRequest(\"media-rate-change-request\", event);\n    if (canPlay()) {\n      storage?.setPlaybackRate?.(event.detail);\n    }\n  }\n  [\"remote-playback-change\"](event) {\n    const { remotePlaybackState, remotePlaybackType } = this.$state, { type, state } = event.detail, isConnected = state === \"connected\";\n    remotePlaybackType.set(type);\n    remotePlaybackState.set(state);\n    const key = type === \"airplay\" ? \"media-airplay-request\" : \"media-google-cast-request\";\n    if (isConnected) {\n      this.#satisfyRequest(key, event);\n    } else {\n      const requestEvent = this.#request.queue.peek(key);\n      if (requestEvent) {\n        event.request = requestEvent;\n        event.triggers.add(requestEvent);\n      }\n    }\n  }\n  [\"sources-change\"](event) {\n    const prevSources = this.$state.sources(), newSources = event.detail;\n    this.$state.sources.set(newSources);\n    this.#onSourceQualitiesChange(prevSources, newSources, event);\n  }\n  #onSourceQualitiesChange(prevSources, newSources, trigger) {\n    let { qualities } = this.#media, added = false, removed = false;\n    for (const prevSrc of prevSources) {\n      if (!isVideoQualitySrc(prevSrc)) continue;\n      const exists = newSources.some((s) => s.src === prevSrc.src);\n      if (!exists) {\n        const quality = qualities.getBySrc(prevSrc.src);\n        if (quality) {\n          qualities[ListSymbol.remove](quality, trigger);\n          removed = true;\n        }\n      }\n    }\n    if (removed && !qualities.length) {\n      this.$state.savedState.set(null);\n      qualities[ListSymbol.reset](trigger);\n    }\n    for (const src of newSources) {\n      if (!isVideoQualitySrc(src) || qualities.getBySrc(src.src)) continue;\n      const quality = {\n        id: src.id ?? src.height + \"p\",\n        bitrate: null,\n        codec: null,\n        ...src,\n        selected: false\n      };\n      qualities[ListSymbol.add](quality, trigger);\n      added = true;\n    }\n    if (added && !qualities[QualitySymbol.enableAuto]) {\n      this.#watchQualityResize();\n      qualities[QualitySymbol.enableAuto] = this.#watchQualityResize.bind(this);\n      qualities[QualitySymbol.setAuto](true, trigger);\n    }\n  }\n  [\"source-change\"](event) {\n    event.isQualityChange = event.originEvent?.type === \"quality-change\";\n    const source = event.detail;\n    this.#resetMediaState(event, event.isQualityChange);\n    this.#trackedEvents.set(event.type, event);\n    this.$state.source.set(source);\n    this.el?.setAttribute(\"aria-busy\", \"true\");\n    {\n      this.#media.logger?.infoGroup(\"\\u{1F4FC} Media source change\").labelledLog(\"Source\", source).dispatch();\n    }\n  }\n  #resetMediaState(event, isSourceQualityChange = false) {\n    const { audioTracks, qualities } = this.#media;\n    if (!isSourceQualityChange) {\n      this.#playedIntervals = [];\n      this.#playedInterval = [-1, -1];\n      audioTracks[ListSymbol.reset](event);\n      qualities[ListSymbol.reset](event);\n      softResetMediaState(this.$state, isSourceQualityChange);\n      this.#resetTracking();\n      return;\n    }\n    softResetMediaState(this.$state, isSourceQualityChange);\n    this.#resetTracking();\n  }\n  [\"abort\"](event) {\n    const sourceChangeEvent = this.#trackedEvents.get(\"source-change\");\n    if (sourceChangeEvent) event.triggers.add(sourceChangeEvent);\n    const canLoadEvent = this.#trackedEvents.get(\"can-load\");\n    if (canLoadEvent && !event.triggers.hasType(\"can-load\")) {\n      event.triggers.add(canLoadEvent);\n    }\n  }\n  [\"load-start\"](event) {\n    const sourceChangeEvent = this.#trackedEvents.get(\"source-change\");\n    if (sourceChangeEvent) event.triggers.add(sourceChangeEvent);\n  }\n  [\"error\"](event) {\n    this.$state.error.set(event.detail);\n    const abortEvent = this.#trackedEvents.get(\"abort\");\n    if (abortEvent) event.triggers.add(abortEvent);\n    {\n      this.#media.logger?.errorGroup(\"Media Error\").labelledLog(\"Error\", event.detail).labelledLog(\"Event\", event).labelledLog(\"Context\", this.#media).dispatch();\n    }\n  }\n  [\"loaded-metadata\"](event) {\n    const loadStartEvent = this.#trackedEvents.get(\"load-start\");\n    if (loadStartEvent) event.triggers.add(loadStartEvent);\n  }\n  [\"loaded-data\"](event) {\n    const loadStartEvent = this.#trackedEvents.get(\"load-start\");\n    if (loadStartEvent) event.triggers.add(loadStartEvent);\n  }\n  [\"can-play\"](event) {\n    const loadedMetadata = this.#trackedEvents.get(\"loaded-metadata\");\n    if (loadedMetadata) event.triggers.add(loadedMetadata);\n    this.#onCanPlayDetail(event.detail);\n    this.el?.setAttribute(\"aria-busy\", \"false\");\n  }\n  [\"can-play-through\"](event) {\n    this.#onCanPlayDetail(event.detail);\n    const canPlay = this.#trackedEvents.get(\"can-play\");\n    if (canPlay) event.triggers.add(canPlay);\n  }\n  #onCanPlayDetail(detail) {\n    const { seekable, buffered, intrinsicDuration, canPlay } = this.$state;\n    canPlay.set(true);\n    buffered.set(detail.buffered);\n    seekable.set(detail.seekable);\n    const seekableEnd = getTimeRangesEnd(detail.seekable) ?? Infinity;\n    intrinsicDuration.set(seekableEnd);\n  }\n  [\"duration-change\"](event) {\n    const { live, intrinsicDuration, providedDuration, clipEndTime, ended } = this.$state, time = event.detail;\n    if (!live()) {\n      const duration = !Number.isNaN(time) ? time : 0;\n      intrinsicDuration.set(duration);\n      if (ended()) this.#onEndPrecisionChange(event);\n    }\n    if (providedDuration() > 0 || clipEndTime() > 0) {\n      event.stopImmediatePropagation();\n    }\n  }\n  [\"progress\"](event) {\n    const { buffered, seekable } = this.$state, { buffered: newBuffered, seekable: newSeekable } = event.detail, newBufferedEnd = getTimeRangesEnd(newBuffered), hasBufferedLengthChanged = newBuffered.length !== buffered().length, hasBufferedEndChanged = newBufferedEnd !== getTimeRangesEnd(buffered()), newSeekableEnd = getTimeRangesEnd(newSeekable), hasSeekableLengthChanged = newSeekable.length !== seekable().length, hasSeekableEndChanged = newSeekableEnd !== getTimeRangesEnd(seekable());\n    if (hasBufferedLengthChanged || hasBufferedEndChanged) {\n      buffered.set(newBuffered);\n    }\n    if (hasSeekableLengthChanged || hasSeekableEndChanged) {\n      seekable.set(newSeekable);\n    }\n  }\n  [\"play\"](event) {\n    const {\n      paused,\n      autoPlayError,\n      ended,\n      autoPlaying,\n      playsInline,\n      pointer,\n      muted,\n      viewType,\n      live,\n      userBehindLiveEdge\n    } = this.$state;\n    this.#resetPlaybackIfNeeded();\n    if (!paused()) {\n      event.stopImmediatePropagation();\n      return;\n    }\n    event.autoPlay = autoPlaying();\n    const waitingEvent = this.#trackedEvents.get(\"waiting\");\n    if (waitingEvent) event.triggers.add(waitingEvent);\n    this.#satisfyRequest(\"media-play-request\", event);\n    this.#trackedEvents.set(\"play\", event);\n    paused.set(false);\n    autoPlayError.set(null);\n    if (event.autoPlay) {\n      this.handle(\n        this.createEvent(\"auto-play\", {\n          detail: { muted: muted() },\n          trigger: event\n        })\n      );\n      autoPlaying.set(false);\n    }\n    if (ended() || this.#request.replaying) {\n      this.#request.replaying = false;\n      ended.set(false);\n      this.handle(this.createEvent(\"replay\", { trigger: event }));\n    }\n    if (!playsInline() && viewType() === \"video\" && pointer() === \"coarse\") {\n      this.#media.remote.enterFullscreen(\"prefer-media\", event);\n    }\n    if (live() && !userBehindLiveEdge()) {\n      this.#media.remote.seekToLiveEdge(event);\n    }\n  }\n  #resetPlaybackIfNeeded(trigger) {\n    const provider = peek(this.#media.$provider);\n    if (!provider) return;\n    const { ended, seekableStart, clipEndTime, currentTime, realCurrentTime, duration } = this.$state;\n    const shouldReset = ended() || realCurrentTime() < seekableStart() || clipEndTime() > 0 && realCurrentTime() >= clipEndTime() || Math.abs(currentTime() - duration()) < 0.1;\n    if (shouldReset) {\n      this.dispatch(\"media-seek-request\", {\n        detail: seekableStart(),\n        trigger\n      });\n    }\n    return shouldReset;\n  }\n  [\"play-fail\"](event) {\n    const { muted, autoPlaying } = this.$state;\n    const playEvent = this.#trackedEvents.get(\"play\");\n    if (playEvent) event.triggers.add(playEvent);\n    this.#satisfyRequest(\"media-play-request\", event);\n    const { paused, playing } = this.$state;\n    paused.set(true);\n    playing.set(false);\n    this.#resetTracking();\n    this.#trackedEvents.set(\"play-fail\", event);\n    if (event.autoPlay) {\n      this.handle(\n        this.createEvent(\"auto-play-fail\", {\n          detail: {\n            muted: muted(),\n            error: event.detail\n          },\n          trigger: event\n        })\n      );\n      autoPlaying.set(false);\n    }\n  }\n  [\"playing\"](event) {\n    const playEvent = this.#trackedEvents.get(\"play\"), seekedEvent = this.#trackedEvents.get(\"seeked\");\n    if (playEvent) event.triggers.add(playEvent);\n    else if (seekedEvent) event.triggers.add(seekedEvent);\n    setTimeout(() => this.#resetTracking(), 0);\n    const {\n      paused,\n      playing,\n      live,\n      liveSyncPosition,\n      seekableEnd,\n      started,\n      currentTime,\n      seeking,\n      ended\n    } = this.$state;\n    paused.set(false);\n    playing.set(true);\n    seeking.set(false);\n    ended.set(false);\n    if (this.#request.looping) {\n      this.#request.looping = false;\n      return;\n    }\n    if (live() && !started() && currentTime() === 0) {\n      const end = liveSyncPosition() ?? seekableEnd() - 2;\n      if (Number.isFinite(end)) this.#media.$provider().setCurrentTime(end);\n    }\n    this[\"started\"](event);\n  }\n  [\"started\"](event) {\n    const { started } = this.$state;\n    if (!started()) {\n      started.set(true);\n      this.handle(this.createEvent(\"started\", { trigger: event }));\n    }\n  }\n  [\"pause\"](event) {\n    if (!this.el?.isConnected) {\n      this.#isPlayingOnDisconnect = true;\n    }\n    this.#satisfyRequest(\"media-pause-request\", event);\n    const seekedEvent = this.#trackedEvents.get(\"seeked\");\n    if (seekedEvent) event.triggers.add(seekedEvent);\n    const { paused, playing } = this.$state;\n    paused.set(true);\n    playing.set(false);\n    if (this.#clipEnded) {\n      setTimeout(() => {\n        this.handle(this.createEvent(\"end\", { trigger: event }));\n        this.#clipEnded = false;\n      }, 0);\n    }\n    this.#resetTracking();\n  }\n  [\"time-change\"](event) {\n    if (this.#request.looping) {\n      event.stopImmediatePropagation();\n      return;\n    }\n    let { waiting, played, clipEndTime, realCurrentTime, currentTime } = this.$state, newTime = event.detail, endTime = clipEndTime();\n    realCurrentTime.set(newTime);\n    this.#updatePlayed();\n    waiting.set(false);\n    for (const track of this.#media.textTracks) {\n      track[TextTrackSymbol.updateActiveCues](newTime, event);\n    }\n    if (endTime > 0 && newTime >= endTime) {\n      this.#clipEnded = true;\n      this.dispatch(\"media-pause-request\", { trigger: event });\n    }\n    this.#saveTime();\n    this.dispatch(\"time-update\", {\n      detail: { currentTime: currentTime(), played: played() },\n      trigger: event\n    });\n  }\n  #updatePlayed() {\n    const { currentTime, played, paused } = this.$state;\n    if (paused()) return;\n    this.#playedInterval = updateTimeIntervals(\n      this.#playedIntervals,\n      this.#playedInterval,\n      currentTime()\n    );\n    played.set(new TimeRange(this.#playedIntervals));\n  }\n  // Called to update time again incase duration precision has changed.\n  #onEndPrecisionChange(trigger) {\n    const { clipStartTime, clipEndTime, duration } = this.$state, isClipped = clipStartTime() > 0 || clipEndTime() > 0;\n    if (isClipped) return;\n    this.handle(\n      this.createEvent(\"time-change\", {\n        detail: duration(),\n        trigger\n      })\n    );\n  }\n  #saveTime() {\n    const { storage } = this.#media, { canPlay, realCurrentTime } = this.$state;\n    if (canPlay()) {\n      storage?.setTime?.(realCurrentTime());\n    }\n  }\n  [\"audio-gain-change\"](event) {\n    const { storage } = this.#media, { canPlay, audioGain } = this.$state;\n    audioGain.set(event.detail);\n    this.#satisfyRequest(\"media-audio-gain-change-request\", event);\n    if (canPlay()) storage?.setAudioGain?.(audioGain());\n  }\n  [\"volume-change\"](event) {\n    const { storage } = this.#media, { volume, muted, canPlay } = this.$state, detail = event.detail;\n    volume.set(detail.volume);\n    muted.set(detail.muted || detail.volume === 0);\n    this.#satisfyRequest(\"media-volume-change-request\", event);\n    this.#satisfyRequest(detail.muted ? \"media-mute-request\" : \"media-unmute-request\", event);\n    if (canPlay()) {\n      storage?.setVolume?.(volume());\n      storage?.setMuted?.(muted());\n    }\n  }\n  [\"seeking\"] = functionThrottle(\n    (event) => {\n      const { seeking, realCurrentTime, paused } = this.$state;\n      seeking.set(true);\n      realCurrentTime.set(event.detail);\n      this.#satisfyRequest(\"media-seeking-request\", event);\n      if (paused()) {\n        this.#waitingTrigger = event;\n        this.#fireWaiting();\n      }\n      this.#playedInterval = [-1, -1];\n    },\n    150,\n    { leading: true }\n  );\n  [\"seeked\"](event) {\n    const { seeking, currentTime, realCurrentTime, paused, seekableEnd, ended, live } = this.$state;\n    if (this.#request.seeking) {\n      seeking.set(true);\n      event.stopImmediatePropagation();\n    } else if (seeking()) {\n      const waitingEvent = this.#trackedEvents.get(\"waiting\");\n      if (waitingEvent) event.triggers.add(waitingEvent);\n      const seekingEvent = this.#trackedEvents.get(\"seeking\");\n      if (seekingEvent && !event.triggers.has(seekingEvent)) {\n        event.triggers.add(seekingEvent);\n      }\n      if (paused()) this.#stopWaiting();\n      seeking.set(false);\n      realCurrentTime.set(event.detail);\n      this.#satisfyRequest(\"media-seek-request\", event);\n      const origin = event?.originEvent;\n      if (origin?.isTrusted && !(origin instanceof MessageEvent) && !/seek/.test(origin.type)) {\n        this[\"started\"](event);\n      }\n    }\n    if (!live()) {\n      if (Math.floor(currentTime()) !== Math.floor(seekableEnd())) {\n        ended.set(false);\n      } else {\n        this.end(event);\n      }\n    }\n  }\n  [\"waiting\"](event) {\n    if (this.#firingWaiting || this.#request.seeking) return;\n    event.stopImmediatePropagation();\n    this.#waitingTrigger = event;\n    this.#fireWaiting();\n  }\n  #fireWaiting = functionDebounce(() => {\n    if (!this.#waitingTrigger) return;\n    this.#firingWaiting = true;\n    const { waiting, playing } = this.$state;\n    waiting.set(true);\n    playing.set(false);\n    const event = this.createEvent(\"waiting\", { trigger: this.#waitingTrigger });\n    this.#trackedEvents.set(\"waiting\", event);\n    this.dispatch(event);\n    this.#waitingTrigger = void 0;\n    this.#firingWaiting = false;\n  }, 300);\n  [\"end\"](event) {\n    const { loop, ended } = this.$state;\n    if (!loop() && ended()) return;\n    if (loop()) {\n      setTimeout(() => {\n        requestAnimationFrame(() => {\n          this.#resetPlaybackIfNeeded(event);\n          this.dispatch(\"media-loop-request\", { trigger: event });\n        });\n      }, 10);\n      return;\n    }\n    setTimeout(() => this.#onEnded(event), 0);\n  }\n  #onEnded(event) {\n    const { storage } = this.#media, { paused, seeking, ended, duration } = this.$state;\n    this.#onEndPrecisionChange(event);\n    if (!paused()) {\n      this.dispatch(\"pause\", { trigger: event });\n    }\n    if (seeking()) {\n      this.dispatch(\"seeked\", {\n        detail: duration(),\n        trigger: event\n      });\n    }\n    ended.set(true);\n    this.#resetTracking();\n    storage?.setTime?.(duration(), true);\n    this.dispatch(\"ended\", {\n      trigger: event\n    });\n  }\n  #stopWaiting() {\n    this.#fireWaiting.cancel();\n    this.$state.waiting.set(false);\n  }\n  [\"fullscreen-change\"](event) {\n    const isFullscreen = event.detail;\n    this.$state.fullscreen.set(isFullscreen);\n    this.#satisfyRequest(\n      isFullscreen ? \"media-enter-fullscreen-request\" : \"media-exit-fullscreen-request\",\n      event\n    );\n  }\n  [\"fullscreen-error\"](event) {\n    this.#satisfyRequest(\"media-enter-fullscreen-request\", event);\n    this.#satisfyRequest(\"media-exit-fullscreen-request\", event);\n  }\n  [\"orientation-change\"](event) {\n    const isLocked = event.detail.lock;\n    this.#satisfyRequest(\n      isLocked ? \"media-orientation-lock-request\" : \"media-orientation-unlock-request\",\n      event\n    );\n  }\n  [\"picture-in-picture-change\"](event) {\n    const isPiP = event.detail;\n    this.$state.pictureInPicture.set(isPiP);\n    this.#satisfyRequest(isPiP ? \"media-enter-pip-request\" : \"media-exit-pip-request\", event);\n  }\n  [\"picture-in-picture-error\"](event) {\n    this.#satisfyRequest(\"media-enter-pip-request\", event);\n    this.#satisfyRequest(\"media-exit-pip-request\", event);\n  }\n  [\"title-change\"](event) {\n    if (!event.trigger) return;\n    event.stopImmediatePropagation();\n    this.$state.inferredTitle.set(event.detail);\n  }\n  [\"poster-change\"](event) {\n    if (!event.trigger) return;\n    event.stopImmediatePropagation();\n    this.$state.inferredPoster.set(event.detail);\n  }\n}\n\nclass MediaStateSync extends MediaPlayerController {\n  onSetup() {\n    this.#init();\n    effect(this.#watchLogLevel.bind(this));\n    const effects = [\n      this.#watchMetadata,\n      this.#watchAutoplay,\n      this.#watchClipStartTime,\n      this.#watchClipEndTime,\n      this.#watchControls,\n      this.#watchCrossOrigin,\n      this.#watchDuration,\n      this.#watchLive,\n      this.#watchLiveEdge,\n      this.#watchLiveTolerance,\n      this.#watchLoop,\n      this.#watchPlaysInline,\n      this.#watchPoster,\n      this.#watchProvidedTypes,\n      this.#watchTitle\n    ];\n    for (const callback of effects) {\n      effect(callback.bind(this));\n    }\n  }\n  #init() {\n    const providedProps = {\n      duration: \"providedDuration\",\n      loop: \"providedLoop\",\n      poster: \"providedPoster\",\n      streamType: \"providedStreamType\",\n      title: \"providedTitle\",\n      viewType: \"providedViewType\"\n    };\n    const skip = /* @__PURE__ */ new Set([\n      \"currentTime\",\n      \"paused\",\n      \"playbackRate\",\n      \"volume\"\n    ]);\n    for (const prop of Object.keys(this.$props)) {\n      if (skip.has(prop)) continue;\n      this.$state[providedProps[prop] ?? prop]?.set(this.$props[prop]());\n    }\n    this.$state.muted.set(this.$props.muted() || this.$props.volume() === 0);\n  }\n  // Sync \"provided\" props with internal state. Provided props are used to differentiate from\n  // provider inferred values.\n  #watchProvidedTypes() {\n    const { viewType, streamType, title, poster, loop } = this.$props, $state = this.$state;\n    $state.providedPoster.set(poster());\n    $state.providedStreamType.set(streamType());\n    $state.providedViewType.set(viewType());\n    $state.providedTitle.set(title());\n    $state.providedLoop.set(loop());\n  }\n  #watchLogLevel() {\n    this.$state.logLevel.set(this.$props.logLevel());\n  }\n  #watchMetadata() {\n    const { artist, artwork } = this.$props;\n    this.$state.artist.set(artist());\n    this.$state.artwork.set(artwork());\n  }\n  #watchTitle() {\n    const { title } = this.$state;\n    this.dispatch(\"title-change\", { detail: title() });\n  }\n  #watchAutoplay() {\n    const autoPlay = this.$props.autoPlay() || this.$props.autoplay();\n    this.$state.autoPlay.set(autoPlay);\n    this.dispatch(\"auto-play-change\", { detail: autoPlay });\n  }\n  #watchLoop() {\n    const loop = this.$state.loop();\n    this.dispatch(\"loop-change\", { detail: loop });\n  }\n  #watchControls() {\n    const controls = this.$props.controls();\n    this.$state.controls.set(controls);\n  }\n  #watchPoster() {\n    const { poster } = this.$state;\n    this.dispatch(\"poster-change\", { detail: poster() });\n  }\n  #watchCrossOrigin() {\n    const crossOrigin = this.$props.crossOrigin() ?? this.$props.crossorigin(), value = crossOrigin === true ? \"\" : crossOrigin;\n    this.$state.crossOrigin.set(value);\n  }\n  #watchDuration() {\n    const { duration } = this.$props;\n    this.dispatch(\"media-duration-change-request\", {\n      detail: duration()\n    });\n  }\n  #watchPlaysInline() {\n    const inline = this.$props.playsInline() || this.$props.playsinline();\n    this.$state.playsInline.set(inline);\n    this.dispatch(\"plays-inline-change\", { detail: inline });\n  }\n  #watchClipStartTime() {\n    const { clipStartTime } = this.$props;\n    this.dispatch(\"media-clip-start-change-request\", {\n      detail: clipStartTime()\n    });\n  }\n  #watchClipEndTime() {\n    const { clipEndTime } = this.$props;\n    this.dispatch(\"media-clip-end-change-request\", {\n      detail: clipEndTime()\n    });\n  }\n  #watchLive() {\n    this.dispatch(\"live-change\", { detail: this.$state.live() });\n  }\n  #watchLiveTolerance() {\n    this.$state.liveEdgeTolerance.set(this.$props.liveEdgeTolerance());\n    this.$state.minLiveDVRWindow.set(this.$props.minLiveDVRWindow());\n  }\n  #watchLiveEdge() {\n    this.dispatch(\"live-edge-change\", { detail: this.$state.liveEdge() });\n  }\n}\n\nconst actions = [\"play\", \"pause\", \"seekforward\", \"seekbackward\", \"seekto\"];\nclass NavigatorMediaSession extends MediaPlayerController {\n  onConnect() {\n    effect(this.#onMetadataChange.bind(this));\n    effect(this.#onPlaybackStateChange.bind(this));\n    const handleAction = this.#handleAction.bind(this);\n    for (const action of actions) {\n      navigator.mediaSession.setActionHandler(action, handleAction);\n    }\n    onDispose(this.#onDisconnect.bind(this));\n  }\n  #onDisconnect() {\n    for (const action of actions) {\n      navigator.mediaSession.setActionHandler(action, null);\n    }\n  }\n  #onMetadataChange() {\n    const { title, artist, artwork, poster } = this.$state;\n    navigator.mediaSession.metadata = new MediaMetadata({\n      title: title(),\n      artist: artist(),\n      artwork: artwork() ?? [{ src: poster() }]\n    });\n  }\n  #onPlaybackStateChange() {\n    const { canPlay, paused } = this.$state;\n    navigator.mediaSession.playbackState = !canPlay() ? \"none\" : paused() ? \"paused\" : \"playing\";\n  }\n  #handleAction(details) {\n    const trigger = new DOMEvent(`media-session-action`, { detail: details });\n    switch (details.action) {\n      case \"play\":\n        this.dispatch(\"media-play-request\", { trigger });\n        break;\n      case \"pause\":\n        this.dispatch(\"media-pause-request\", { trigger });\n        break;\n      case \"seekto\":\n      case \"seekforward\":\n      case \"seekbackward\":\n        this.dispatch(\"media-seek-request\", {\n          detail: isNumber(details.seekTime) ? details.seekTime : this.$state.currentTime() + (details.seekOffset ?? (details.action === \"seekforward\" ? 10 : -10)),\n          trigger\n        });\n        break;\n    }\n  }\n}\n\nconst LOCAL_STORAGE_KEY = \"@vidstack/log-colors\";\nconst savedColors = init();\nfunction getLogColor(key) {\n  return savedColors.get(key);\n}\nfunction saveLogColor(key, { color = generateColor(), overwrite = false } = {}) {\n  if (!savedColors.has(key) || overwrite) {\n    savedColors.set(key, color);\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(Object.entries(savedColors)));\n  }\n}\nfunction generateColor() {\n  return `hsl(${Math.random() * 360}, 55%, 70%)`;\n}\nfunction init() {\n  let colors;\n  try {\n    colors = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n  } catch {\n  }\n  return new Map(Object.entries(colors ?? {}));\n}\n\nconst LogLevelValue = Object.freeze({\n  silent: 0,\n  error: 1,\n  warn: 2,\n  info: 3,\n  debug: 4\n});\nconst LogLevelColor = Object.freeze({\n  silent: \"white\",\n  error: \"hsl(6, 58%, 50%)\",\n  warn: \"hsl(51, 58%, 50%)\",\n  info: \"hsl(219, 58%, 50%)\",\n  debug: \"hsl(280, 58%, 50%)\"\n});\n\nconst s = 1e3;\nconst m = s * 60;\nconst h = m * 60;\nconst d = h * 24;\nfunction ms(val) {\n  const msAbs = Math.abs(val);\n  if (msAbs >= d) {\n    return Math.round(val / d) + \"d\";\n  }\n  if (msAbs >= h) {\n    return Math.round(val / h) + \"h\";\n  }\n  if (msAbs >= m) {\n    return Math.round(val / m) + \"m\";\n  }\n  if (msAbs >= s) {\n    return Math.round(val / s) + \"s\";\n  }\n  return round(val, 2) + \"ms\";\n}\n\nclass LogPrinter extends ViewController {\n  #level = \"warn\" ;\n  #lastLogged;\n  /**\n   * The current log level.\n   */\n  get logLevel() {\n    return this.#level ;\n  }\n  set logLevel(level) {\n    this.#level = level;\n  }\n  onConnect() {\n    this.listen(\"vds-log\", (event) => {\n      event.stopPropagation();\n      const element = event.path?.[0] ?? (event.target instanceof ViewController ? event.target.el : event.target), eventTargetName = element?.$$COMPONENT_NAME?.replace(/^_/, \"\").replace(/Instance$/, \"\") ?? element?.tagName.toLowerCase() ?? \"unknown\";\n      const { level = \"warn\", data } = event.detail ?? {};\n      if (LogLevelValue[this.#level] < LogLevelValue[level]) {\n        return;\n      }\n      saveLogColor(eventTargetName);\n      const hint = data?.length === 1 && isGroupedLog(data[0]) ? data[0].title : isString(data?.[0]) ? data[0] : \"\";\n      console.groupCollapsed(\n        `%c${level.toUpperCase()}%c ${eventTargetName}%c ${hint.slice(0, 50)}${hint.length > 50 ? \"...\" : \"\"}`,\n        `background: ${LogLevelColor[level]}; color: white; padding: 1.5px 2.2px; border-radius: 2px; font-size: 11px;`,\n        `color: ${getLogColor(eventTargetName)}; padding: 4px 0px; font-size: 11px;`,\n        \"color: gray; font-size: 11px; padding-left: 4px;\"\n      );\n      if (data?.length === 1 && isGroupedLog(data[0])) {\n        if (element) data[0].logs.unshift({ label: \"Element\", data: [element] });\n        printGroup(level, data[0]);\n      } else if (data) {\n        print(level, ...data);\n      }\n      this.#printTimeDiff();\n      printStackTrace();\n      console.groupEnd();\n    });\n    onDispose(() => {\n      this.#lastLogged = void 0;\n    });\n  }\n  #printTimeDiff() {\n    labelledPrint(\"Time since last log\", this.#calcLastLogTimeDiff());\n  }\n  #calcLastLogTimeDiff() {\n    const time = performance.now();\n    const diff = time - (this.#lastLogged ?? (this.#lastLogged = performance.now()));\n    this.#lastLogged = time;\n    return ms(diff);\n  }\n}\nfunction print(level, ...data) {\n  console[level](...data);\n}\nfunction labelledPrint(label, ...data) {\n  console.log(`%c${label}:`, \"color: gray\", ...data);\n}\nfunction printStackTrace() {\n  console.groupCollapsed(\"%cStack Trace\", \"color: gray\");\n  console.trace();\n  console.groupEnd();\n}\nfunction printGroup(level, groupedLog) {\n  for (const log of groupedLog.logs) {\n    if (isGroupedLog(log)) {\n      console.groupCollapsed(groupedLog.title);\n      printGroup(level, log);\n      console.groupEnd();\n    } else if (\"label\" in log && !isUndefined(log.label)) {\n      labelledPrint(log.label, ...log.data);\n    } else {\n      print(level, ...log.data);\n    }\n  }\n}\n\nclass MediaPlayer extends Component {\n  static props = mediaPlayerProps;\n  static state = mediaState;\n  #media;\n  #stateMgr;\n  #requestMgr;\n  canPlayQueue = new RequestQueue();\n  remoteControl;\n  get #provider() {\n    return this.#media.$provider();\n  }\n  get #props() {\n    return this.$props;\n  }\n  constructor() {\n    super();\n    new MediaStateSync();\n    const context = {\n      player: this,\n      qualities: new VideoQualityList(),\n      audioTracks: new AudioTrackList(),\n      storage: null,\n      $provider: signal(null),\n      $providerSetup: signal(false),\n      $props: this.$props,\n      $state: this.$state\n    };\n    {\n      const logPrinter = new LogPrinter();\n      effect(() => {\n        logPrinter.logLevel = this.$props.logLevel();\n      });\n    }\n    context.logger = new Logger();\n    context.remote = this.remoteControl = new MediaRemoteControl(\n      context.logger \n    );\n    context.remote.setPlayer(this);\n    context.textTracks = new TextTrackList();\n    context.textTracks[TextTrackSymbol.crossOrigin] = this.$state.crossOrigin;\n    context.textRenderers = new TextRenderers(context);\n    context.ariaKeys = {};\n    this.#media = context;\n    provideContext(mediaContext, context);\n    this.orientation = new ScreenOrientationController();\n    new FocusVisibleController();\n    new MediaKeyboardController(context);\n    new MediaEventsLogger(context);\n    const request = new MediaRequestContext();\n    this.#stateMgr = new MediaStateManager(request, context);\n    this.#requestMgr = new MediaRequestManager(this.#stateMgr, request, context);\n    context.delegate = new MediaPlayerDelegate(this.#stateMgr.handle.bind(this.#stateMgr), context);\n    context.notify = context.delegate.notify.bind(context.delegate);\n    if (typeof navigator !== \"undefined\" && \"mediaSession\" in navigator) {\n      new NavigatorMediaSession();\n    }\n    new MediaLoadController(\"load\", this.startLoading.bind(this));\n    new MediaLoadController(\"posterLoad\", this.startLoadingPoster.bind(this));\n  }\n  onSetup() {\n    this.#setupMediaAttributes();\n    effect(this.#watchCanPlay.bind(this));\n    effect(this.#watchMuted.bind(this));\n    effect(this.#watchPaused.bind(this));\n    effect(this.#watchVolume.bind(this));\n    effect(this.#watchCurrentTime.bind(this));\n    effect(this.#watchPlaysInline.bind(this));\n    effect(this.#watchPlaybackRate.bind(this));\n  }\n  onAttach(el) {\n    el.setAttribute(\"data-media-player\", \"\");\n    setAttributeIfEmpty(el, \"tabindex\", \"0\");\n    setAttributeIfEmpty(el, \"role\", \"region\");\n    effect(this.#watchStorage.bind(this));\n    effect(this.#watchTitle.bind(this));\n    effect(this.#watchOrientation.bind(this));\n    listenEvent(el, \"find-media-player\", this.#onFindPlayer.bind(this));\n  }\n  onConnect(el) {\n    if (IS_IPHONE) setAttribute(el, \"data-iphone\", \"\");\n    const pointerQuery = window.matchMedia(\"(pointer: coarse)\");\n    this.#onPointerChange(pointerQuery);\n    pointerQuery.onchange = this.#onPointerChange.bind(this);\n    const resize = new ResizeObserver(animationFrameThrottle(this.#onResize.bind(this)));\n    resize.observe(el);\n    effect(this.#onResize.bind(this));\n    this.dispatch(\"media-player-connect\", {\n      detail: this,\n      bubbles: true,\n      composed: true\n    });\n    this.#media.logger.setTarget(el);\n    onDispose(() => {\n      resize.disconnect();\n      pointerQuery.onchange = null;\n      this.#media.logger.setTarget(null);\n    });\n  }\n  onDestroy() {\n    this.#media.player = null;\n    this.canPlayQueue.reset();\n  }\n  #skipTitleUpdate = false;\n  #watchTitle() {\n    const el = this.$el, { title, live, viewType, providedTitle } = this.$state, isLive = live(), type = uppercaseFirstChar(viewType()), typeText = type !== \"Unknown\" ? `${isLive ? \"Live \" : \"\"}${type}` : isLive ? \"Live\" : \"Media\", currentTitle = title();\n    setAttribute(\n      this.el,\n      \"aria-label\",\n      `${typeText} Player` + (currentTitle ? ` - ${currentTitle}` : \"\")\n    );\n    if (el?.hasAttribute(\"title\")) {\n      this.#skipTitleUpdate = true;\n      el?.removeAttribute(\"title\");\n    }\n  }\n  #watchOrientation() {\n    const orientation = this.orientation.landscape ? \"landscape\" : \"portrait\";\n    this.$state.orientation.set(orientation);\n    setAttribute(this.el, \"data-orientation\", orientation);\n    this.#onResize();\n  }\n  #watchCanPlay() {\n    if (this.$state.canPlay() && this.#provider) this.canPlayQueue.start();\n    else this.canPlayQueue.stop();\n  }\n  #setupMediaAttributes() {\n    if (MediaPlayer[MEDIA_ATTRIBUTES]) {\n      this.setAttributes(MediaPlayer[MEDIA_ATTRIBUTES]);\n      return;\n    }\n    const $attrs = {\n      \"data-load\": function() {\n        return this.$props.load();\n      },\n      \"data-captions\": function() {\n        const track = this.$state.textTrack();\n        return !!track && isTrackCaptionKind(track);\n      },\n      \"data-ios-controls\": function() {\n        return this.$state.iOSControls();\n      },\n      \"data-controls\": function() {\n        return this.controls.showing;\n      },\n      \"data-buffering\": function() {\n        const { canLoad, canPlay, waiting } = this.$state;\n        return canLoad() && (!canPlay() || waiting());\n      },\n      \"data-error\": function() {\n        const { error } = this.$state;\n        return !!error();\n      },\n      \"data-autoplay-error\": function() {\n        const { autoPlayError } = this.$state;\n        return !!autoPlayError();\n      }\n    };\n    const alias = {\n      autoPlay: \"autoplay\",\n      canAirPlay: \"can-airplay\",\n      canPictureInPicture: \"can-pip\",\n      pictureInPicture: \"pip\",\n      playsInline: \"playsinline\",\n      remotePlaybackState: \"remote-state\",\n      remotePlaybackType: \"remote-type\",\n      isAirPlayConnected: \"airplay\",\n      isGoogleCastConnected: \"google-cast\"\n    };\n    for (const prop2 of mediaAttributes) {\n      const attrName = \"data-\" + (alias[prop2] ?? camelToKebabCase(prop2));\n      $attrs[attrName] = function() {\n        return this.$state[prop2]();\n      };\n    }\n    delete $attrs.title;\n    MediaPlayer[MEDIA_ATTRIBUTES] = $attrs;\n    this.setAttributes($attrs);\n  }\n  #onFindPlayer(event) {\n    event.detail(this);\n  }\n  #onResize() {\n    if (!this.el) return;\n    const width = this.el.clientWidth, height = this.el.clientHeight;\n    this.$state.width.set(width);\n    this.$state.height.set(height);\n    setStyle(this.el, \"--player-width\", width + \"px\");\n    setStyle(this.el, \"--player-height\", height + \"px\");\n  }\n  #onPointerChange(queryList) {\n    const pointer = queryList.matches ? \"coarse\" : \"fine\";\n    setAttribute(this.el, \"data-pointer\", pointer);\n    this.$state.pointer.set(pointer);\n    this.#onResize();\n  }\n  /**\n   * The current media provider.\n   */\n  get provider() {\n    return this.#provider;\n  }\n  /**\n   * Media controls settings.\n   */\n  get controls() {\n    return this.#requestMgr.controls;\n  }\n  set controls(controls) {\n    this.#props.controls.set(controls);\n  }\n  /**\n   * Controls the screen orientation of the current browser window and dispatches orientation\n   * change events on the player.\n   */\n  orientation;\n  /**\n   * The title of the current media.\n   */\n  get title() {\n    return peek(this.$state.title);\n  }\n  set title(newTitle) {\n    if (this.#skipTitleUpdate) {\n      this.#skipTitleUpdate = false;\n      return;\n    }\n    this.#props.title.set(newTitle);\n  }\n  /**\n   * A list of all `VideoQuality` objects representing the set of available video renditions.\n   *\n   * @see {@link https://vidstack.io/docs/player/api/video-quality}\n   */\n  get qualities() {\n    return this.#media.qualities;\n  }\n  /**\n   * A list of all `AudioTrack` objects representing the set of available audio tracks.\n   *\n   * @see {@link https://vidstack.io/docs/player/api/audio-tracks}\n   */\n  get audioTracks() {\n    return this.#media.audioTracks;\n  }\n  /**\n   * A list of all `TextTrack` objects representing the set of available text tracks.\n   *\n   * @see {@link https://vidstack.io/docs/player/api/text-tracks}\n   */\n  get textTracks() {\n    return this.#media.textTracks;\n  }\n  /**\n   * Contains text renderers which are responsible for loading, parsing, and rendering text\n   * tracks.\n   */\n  get textRenderers() {\n    return this.#media.textRenderers;\n  }\n  get duration() {\n    return this.$state.duration();\n  }\n  set duration(duration) {\n    this.#props.duration.set(duration);\n  }\n  get paused() {\n    return peek(this.$state.paused);\n  }\n  set paused(paused) {\n    this.#queuePausedUpdate(paused);\n  }\n  #watchPaused() {\n    this.#queuePausedUpdate(this.$props.paused());\n  }\n  #queuePausedUpdate(paused) {\n    if (paused) {\n      this.canPlayQueue.enqueue(\"paused\", () => this.#requestMgr.pause());\n    } else this.canPlayQueue.enqueue(\"paused\", () => this.#requestMgr.play());\n  }\n  get muted() {\n    return peek(this.$state.muted);\n  }\n  set muted(muted) {\n    this.#queueMutedUpdate(muted);\n  }\n  #watchMuted() {\n    this.#queueMutedUpdate(this.$props.muted());\n  }\n  #queueMutedUpdate(muted) {\n    this.canPlayQueue.enqueue(\"muted\", () => {\n      if (this.#provider) this.#provider.setMuted(muted);\n    });\n  }\n  get currentTime() {\n    return peek(this.$state.currentTime);\n  }\n  set currentTime(time) {\n    this.#queueCurrentTimeUpdate(time);\n  }\n  #watchCurrentTime() {\n    this.#queueCurrentTimeUpdate(this.$props.currentTime());\n  }\n  #queueCurrentTimeUpdate(time) {\n    this.canPlayQueue.enqueue(\"currentTime\", () => {\n      const { currentTime } = this.$state;\n      if (time === peek(currentTime)) return;\n      peek(() => {\n        if (!this.#provider) return;\n        const boundedTime = boundTime(time, this.$state);\n        if (Number.isFinite(boundedTime)) {\n          this.#provider.setCurrentTime(boundedTime);\n        }\n      });\n    });\n  }\n  get volume() {\n    return peek(this.$state.volume);\n  }\n  set volume(volume) {\n    this.#queueVolumeUpdate(volume);\n  }\n  #watchVolume() {\n    this.#queueVolumeUpdate(this.$props.volume());\n  }\n  #queueVolumeUpdate(volume) {\n    const clampedVolume = clampNumber(0, volume, 1);\n    this.canPlayQueue.enqueue(\"volume\", () => {\n      if (this.#provider) this.#provider.setVolume(clampedVolume);\n    });\n  }\n  get playbackRate() {\n    return peek(this.$state.playbackRate);\n  }\n  set playbackRate(rate) {\n    this.#queuePlaybackRateUpdate(rate);\n  }\n  #watchPlaybackRate() {\n    this.#queuePlaybackRateUpdate(this.$props.playbackRate());\n  }\n  #queuePlaybackRateUpdate(rate) {\n    this.canPlayQueue.enqueue(\"rate\", () => {\n      if (this.#provider) this.#provider.setPlaybackRate?.(rate);\n    });\n  }\n  #watchPlaysInline() {\n    this.#queuePlaysInlineUpdate(this.$props.playsInline());\n  }\n  #queuePlaysInlineUpdate(inline) {\n    this.canPlayQueue.enqueue(\"playsinline\", () => {\n      if (this.#provider) this.#provider.setPlaysInline?.(inline);\n    });\n  }\n  #watchStorage() {\n    let storageValue = this.$props.storage(), storage = isString(storageValue) ? new LocalMediaStorage() : storageValue;\n    if (storage?.onChange) {\n      const { source } = this.$state, playerId = isString(storageValue) ? storageValue : this.el?.id, mediaId = computed(this.#computeMediaId.bind(this));\n      effect(() => storage.onChange(source(), mediaId(), playerId || void 0));\n    }\n    this.#media.storage = storage;\n    this.#media.textTracks.setStorage(storage);\n    onDispose(() => {\n      storage?.onDestroy?.();\n      this.#media.storage = null;\n      this.#media.textTracks.setStorage(null);\n    });\n  }\n  #computeMediaId() {\n    const { clipStartTime, clipEndTime } = this.$props, { source } = this.$state, src = source();\n    return src.src ? `${src.src}:${clipStartTime()}:${clipEndTime()}` : null;\n  }\n  /**\n   * Begins/resumes playback of the media. If this method is called programmatically before the\n   * user has interacted with the player, the promise may be rejected subject to the browser's\n   * autoplay policies. This method will throw if called before media is ready for playback.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/play}\n   */\n  async play(trigger) {\n    return this.#requestMgr.play(trigger);\n  }\n  /**\n   * Pauses playback of the media. This method will throw if called before media is ready for\n   * playback.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/pause}\n   */\n  async pause(trigger) {\n    return this.#requestMgr.pause(trigger);\n  }\n  /**\n   * Attempts to display the player in fullscreen. The promise will resolve if successful, and\n   * reject if not. This method will throw if any fullscreen API is _not_ currently available.\n   *\n   * @see {@link https://vidstack.io/docs/player/api/fullscreen}\n   */\n  async enterFullscreen(target, trigger) {\n    return this.#requestMgr.enterFullscreen(target, trigger);\n  }\n  /**\n   * Attempts to display the player inline by exiting fullscreen. This method will throw if any\n   * fullscreen API is _not_ currently available.\n   *\n   * @see {@link https://vidstack.io/docs/player/api/fullscreen}\n   */\n  async exitFullscreen(target, trigger) {\n    return this.#requestMgr.exitFullscreen(target, trigger);\n  }\n  /**\n   * Attempts to display the player in picture-in-picture mode. This method will throw if PIP is\n   * not supported. This method will also return a `PictureInPictureWindow` if the current\n   * provider supports it.\n   *\n   * @see {@link https://vidstack.io/docs/player/api/picture-in-picture}\n   */\n  enterPictureInPicture(trigger) {\n    return this.#requestMgr.enterPictureInPicture(trigger);\n  }\n  /**\n   * Attempts to display the player in inline by exiting picture-in-picture mode. This method\n   * will throw if not supported.\n   *\n   * @see {@link https://vidstack.io/docs/player/api/picture-in-picture}\n   */\n  exitPictureInPicture(trigger) {\n    return this.#requestMgr.exitPictureInPicture(trigger);\n  }\n  /**\n   * Sets the current time to the live edge (i.e., `duration`). This is a no-op for non-live\n   * streams and will throw if called before media is ready for playback.\n   *\n   * @see {@link https://vidstack.io/docs/player/api/live}\n   */\n  seekToLiveEdge(trigger) {\n    this.#requestMgr.seekToLiveEdge(trigger);\n  }\n  /**\n   * Called when media can begin loading. Calling this method will trigger the initial provider\n   * loading process. Calling it more than once has no effect.\n   *\n   * @see {@link https://vidstack.io/docs/player/core-concepts/loading#load-strategies}\n   */\n  startLoading(trigger) {\n    this.#media.notify(\"can-load\", void 0, trigger);\n  }\n  /**\n   * Called when the poster image can begin loading. Calling it more than once has no effect.\n   *\n   * @see {@link https://vidstack.io/docs/player/core-concepts/loading#load-strategies}\n   */\n  startLoadingPoster(trigger) {\n    this.#media.notify(\"can-load-poster\", void 0, trigger);\n  }\n  /**\n   * Request Apple AirPlay picker to open.\n   */\n  requestAirPlay(trigger) {\n    return this.#requestMgr.requestAirPlay(trigger);\n  }\n  /**\n   * Request Google Cast device picker to open. The Google Cast framework will be loaded if it\n   * hasn't yet.\n   */\n  requestGoogleCast(trigger) {\n    return this.#requestMgr.requestGoogleCast(trigger);\n  }\n  /**\n   * Set the audio gain, amplifying volume and enabling a maximum volume above 100%.\n   *\n   * @see {@link https://vidstack.io/docs/player/api/audio-gain}\n   */\n  setAudioGain(gain, trigger) {\n    return this.#requestMgr.setAudioGain(gain, trigger);\n  }\n  destroy() {\n    super.destroy();\n    this.#media.remote.setPlayer(null);\n    this.dispatch(\"destroy\");\n  }\n}\nconst mediaplayer__proto = MediaPlayer.prototype;\nprop(mediaplayer__proto, \"canPlayQueue\");\nprop(mediaplayer__proto, \"remoteControl\");\nprop(mediaplayer__proto, \"provider\");\nprop(mediaplayer__proto, \"controls\");\nprop(mediaplayer__proto, \"orientation\");\nprop(mediaplayer__proto, \"title\");\nprop(mediaplayer__proto, \"qualities\");\nprop(mediaplayer__proto, \"audioTracks\");\nprop(mediaplayer__proto, \"textTracks\");\nprop(mediaplayer__proto, \"textRenderers\");\nprop(mediaplayer__proto, \"duration\");\nprop(mediaplayer__proto, \"paused\");\nprop(mediaplayer__proto, \"muted\");\nprop(mediaplayer__proto, \"currentTime\");\nprop(mediaplayer__proto, \"volume\");\nprop(mediaplayer__proto, \"playbackRate\");\nmethod(mediaplayer__proto, \"play\");\nmethod(mediaplayer__proto, \"pause\");\nmethod(mediaplayer__proto, \"enterFullscreen\");\nmethod(mediaplayer__proto, \"exitFullscreen\");\nmethod(mediaplayer__proto, \"enterPictureInPicture\");\nmethod(mediaplayer__proto, \"exitPictureInPicture\");\nmethod(mediaplayer__proto, \"seekToLiveEdge\");\nmethod(mediaplayer__proto, \"startLoading\");\nmethod(mediaplayer__proto, \"startLoadingPoster\");\nmethod(mediaplayer__proto, \"requestAirPlay\");\nmethod(mediaplayer__proto, \"requestGoogleCast\");\nmethod(mediaplayer__proto, \"setAudioGain\");\n\nfunction resolveStreamTypeFromDASHManifest(manifestSrc, requestInit) {\n  return fetch(manifestSrc, requestInit).then((res) => res.text()).then((manifest) => {\n    return /type=\"static\"/.test(manifest) ? \"on-demand\" : \"live\";\n  });\n}\nfunction resolveStreamTypeFromHLSManifest(manifestSrc, requestInit) {\n  return fetch(manifestSrc, requestInit).then((res) => res.text()).then((manifest) => {\n    const renditionURI = resolveHLSRenditionURI(manifest);\n    if (renditionURI) {\n      return resolveStreamTypeFromHLSManifest(\n        /^https?:/.test(renditionURI) ? renditionURI : new URL(renditionURI, manifestSrc).href,\n        requestInit\n      );\n    }\n    const streamType = /EXT-X-PLAYLIST-TYPE:\\s*VOD/.test(manifest) ? \"on-demand\" : \"live\";\n    if (streamType === \"live\" && resolveTargetDuration(manifest) >= 10 && (/#EXT-X-DVR-ENABLED:\\s*true/.test(manifest) || manifest.includes(\"#EXT-X-DISCONTINUITY\"))) {\n      return \"live:dvr\";\n    }\n    return streamType;\n  });\n}\nfunction resolveHLSRenditionURI(manifest) {\n  const matches = manifest.match(/#EXT-X-STREAM-INF:[^\\n]+(\\n[^\\n]+)*/g);\n  return matches ? matches[0].split(\"\\n\")[1].trim() : null;\n}\nfunction resolveTargetDuration(manifest) {\n  const lines = manifest.split(\"\\n\");\n  for (const line of lines) {\n    if (line.startsWith(\"#EXT-X-TARGETDURATION\")) {\n      const duration = parseFloat(line.split(\":\")[1]);\n      if (!isNaN(duration)) {\n        return duration;\n      }\n    }\n  }\n  return -1;\n}\n\nlet warned = /* @__PURE__ */ new Set() ;\nconst sourceTypes = /* @__PURE__ */ new Map();\nclass SourceSelection {\n  #initialize = false;\n  #loaders;\n  #domSources;\n  #media;\n  #loader;\n  constructor(domSources, media, loader, customLoaders = []) {\n    this.#domSources = domSources;\n    this.#media = media;\n    this.#loader = loader;\n    const DASH_LOADER = new DASHProviderLoader(), HLS_LOADER = new HLSProviderLoader(), VIDEO_LOADER = new VideoProviderLoader(), AUDIO_LOADER = new AudioProviderLoader(), YOUTUBE_LOADER = new YouTubeProviderLoader(), VIMEO_LOADER = new VimeoProviderLoader(), EMBED_LOADERS = [YOUTUBE_LOADER, VIMEO_LOADER];\n    this.#loaders = computed(() => {\n      const remoteLoader = media.$state.remotePlaybackLoader();\n      const loaders = media.$props.preferNativeHLS() ? [VIDEO_LOADER, AUDIO_LOADER, DASH_LOADER, HLS_LOADER, ...EMBED_LOADERS, ...customLoaders] : [HLS_LOADER, VIDEO_LOADER, AUDIO_LOADER, DASH_LOADER, ...EMBED_LOADERS, ...customLoaders];\n      return remoteLoader ? [remoteLoader, ...loaders] : loaders;\n    });\n    const { $state } = media;\n    $state.sources.set(normalizeSrc(media.$props.src()));\n    for (const src of $state.sources()) {\n      const loader2 = this.#loaders().find((loader3) => loader3.canPlay(src));\n      if (!loader2) continue;\n      const mediaType = loader2.mediaType(src);\n      media.$state.source.set(src);\n      media.$state.mediaType.set(mediaType);\n      media.$state.inferredViewType.set(mediaType);\n      this.#loader.set(loader2);\n      this.#initialize = true;\n      break;\n    }\n  }\n  connect() {\n    const loader = this.#loader();\n    if (this.#initialize) {\n      this.#notifySourceChange(this.#media.$state.source(), loader);\n      this.#notifyLoaderChange(loader);\n      this.#initialize = false;\n    }\n    effect(this.#onSourcesChange.bind(this));\n    effect(this.#onSourceChange.bind(this));\n    effect(this.#onSetup.bind(this));\n    effect(this.#onLoadSource.bind(this));\n    effect(this.#onLoadPoster.bind(this));\n  }\n  #onSourcesChange() {\n    this.#media.notify(\"sources-change\", [\n      ...normalizeSrc(this.#media.$props.src()),\n      ...this.#domSources()\n    ]);\n  }\n  #onSourceChange() {\n    const { $state } = this.#media;\n    const sources = $state.sources(), currentSource = peek($state.source), newSource = this.#findNewSource(currentSource, sources), noMatch = sources[0]?.src && !newSource.src && !newSource.type;\n    if (noMatch && !warned.has(newSource.src) && !peek(this.#loader)) {\n      const source = sources[0];\n      console.warn(\n        `[vidstack] could not find a loader for any of the given media sources, consider providing \\`type\\`:\n\n--- HTML ---\n\n<media-provider>\n  <source src=\"${source.src}\" type=\"video/mp4\" />\n</media-provider>\"\n\n--- React ---\n\n<MediaPlayer src={{ src: \"${source.src}\", type: \"video/mp4\" }}>\n\n---\n\nFalling back to fetching source headers...`\n      );\n      warned.add(newSource.src);\n    }\n    if (noMatch) {\n      const { crossOrigin } = $state, credentials = getRequestCredentials(crossOrigin()), abort = new AbortController();\n      Promise.all(\n        sources.map(\n          (source) => isString(source.src) && source.type === \"?\" ? fetch(source.src, {\n            method: \"HEAD\",\n            credentials,\n            signal: abort.signal\n          }).then((res) => {\n            source.type = res.headers.get(\"content-type\") || \"??\";\n            sourceTypes.set(source.src, source.type);\n            return source;\n          }).catch(() => source) : source\n        )\n      ).then((sources2) => {\n        if (abort.signal.aborted) return;\n        const newSource2 = this.#findNewSource(peek($state.source), sources2);\n        tick();\n        if (!newSource2.src) {\n          this.#media.notify(\"error\", {\n            message: \"Failed to load resource.\",\n            code: 4\n          });\n        }\n      });\n      return () => abort.abort();\n    }\n    tick();\n  }\n  #findNewSource(currentSource, sources) {\n    let newSource = { src: \"\", type: \"\" }, newLoader = null, triggerEvent = new DOMEvent(\"sources-change\", { detail: { sources } }), loaders = this.#loaders(), { started, paused, currentTime, quality, savedState } = this.#media.$state;\n    for (const src of sources) {\n      const loader = loaders.find((loader2) => loader2.canPlay(src));\n      if (loader) {\n        newSource = src;\n        newLoader = loader;\n        break;\n      }\n    }\n    if (isVideoQualitySrc(newSource)) {\n      const currentQuality = quality(), sourceQuality = sources.find((s) => s.src === currentQuality?.src);\n      if (peek(started)) {\n        savedState.set({\n          paused: peek(paused),\n          currentTime: peek(currentTime)\n        });\n      } else {\n        savedState.set(null);\n      }\n      if (sourceQuality) {\n        newSource = sourceQuality;\n        triggerEvent = new DOMEvent(\"quality-change\", {\n          detail: { quality: currentQuality }\n        });\n      }\n    }\n    if (!isSameSrc(currentSource, newSource)) {\n      this.#notifySourceChange(newSource, newLoader, triggerEvent);\n    }\n    if (newLoader !== peek(this.#loader)) {\n      this.#notifyLoaderChange(newLoader, triggerEvent);\n    }\n    return newSource;\n  }\n  #notifySourceChange(src, loader, trigger) {\n    this.#media.notify(\"source-change\", src, trigger);\n    this.#media.notify(\"media-type-change\", loader?.mediaType(src) || \"unknown\", trigger);\n  }\n  #notifyLoaderChange(loader, trigger) {\n    this.#media.$providerSetup.set(false);\n    this.#media.notify(\"provider-change\", null, trigger);\n    loader && peek(() => loader.preconnect?.(this.#media));\n    this.#loader.set(loader);\n    this.#media.notify(\"provider-loader-change\", loader, trigger);\n  }\n  #onSetup() {\n    const provider = this.#media.$provider();\n    if (!provider || peek(this.#media.$providerSetup)) return;\n    if (this.#media.$state.canLoad()) {\n      scoped(() => provider.setup(), provider.scope);\n      this.#media.$providerSetup.set(true);\n      return;\n    }\n    peek(() => provider.preconnect?.());\n  }\n  #onLoadSource() {\n    if (!this.#media.$providerSetup()) return;\n    const provider = this.#media.$provider(), source = this.#media.$state.source(), crossOrigin = peek(this.#media.$state.crossOrigin), preferNativeHLS = peek(this.#media.$props.preferNativeHLS);\n    if (isSameSrc(provider?.currentSrc, source)) {\n      return;\n    }\n    if (this.#media.$state.canLoad()) {\n      const abort = new AbortController();\n      if (isHLSSrc(source)) {\n        if (preferNativeHLS || !isHLSSupported()) {\n          resolveStreamTypeFromHLSManifest(source.src, {\n            credentials: getRequestCredentials(crossOrigin),\n            signal: abort.signal\n          }).then((streamType) => {\n            this.#media.notify(\"stream-type-change\", streamType);\n          }).catch(noop);\n        }\n      } else if (isDASHSrc(source)) {\n        resolveStreamTypeFromDASHManifest(source.src, {\n          credentials: getRequestCredentials(crossOrigin),\n          signal: abort.signal\n        }).then((streamType) => {\n          this.#media.notify(\"stream-type-change\", streamType);\n        }).catch(noop);\n      } else {\n        this.#media.notify(\"stream-type-change\", \"on-demand\");\n      }\n      peek(() => {\n        const preload = peek(this.#media.$state.preload);\n        return provider?.loadSource(source, preload).catch((error) => {\n          {\n            this.#media.logger?.errorGroup(\"[vidstack] failed to load source\").labelledLog(\"Error\", error).labelledLog(\"Source\", source).labelledLog(\"Provider\", provider).labelledLog(\"Media Context\", { ...this.#media }).dispatch();\n          }\n        });\n      });\n      return () => abort.abort();\n    }\n    try {\n      isString(source.src) && preconnect(new URL(source.src).origin);\n    } catch (error) {\n      {\n        this.#media.logger?.infoGroup(`Failed to preconnect to source: ${source.src}`).labelledLog(\"Error\", error).dispatch();\n      }\n    }\n  }\n  #onLoadPoster() {\n    const loader = this.#loader(), { providedPoster, source, canLoadPoster } = this.#media.$state;\n    if (!loader || !loader.loadPoster || !source() || !canLoadPoster() || providedPoster()) return;\n    const abort = new AbortController(), trigger = new DOMEvent(\"source-change\", { detail: source });\n    loader.loadPoster(source(), this.#media, abort).then((url) => {\n      this.#media.notify(\"poster-change\", url || \"\", trigger);\n    }).catch(() => {\n      this.#media.notify(\"poster-change\", \"\", trigger);\n    });\n    return () => {\n      abort.abort();\n    };\n  }\n}\nfunction normalizeSrc(src) {\n  return (isArray(src) ? src : [src]).map((src2) => {\n    if (isString(src2)) {\n      return { src: src2, type: inferType(src2) };\n    } else {\n      return { ...src2, type: inferType(src2.src, src2.type) };\n    }\n  });\n}\nfunction inferType(src, type) {\n  if (isString(type) && type.length) {\n    return type;\n  } else if (isString(src) && sourceTypes.has(src)) {\n    return sourceTypes.get(src);\n  } else if (!type && isHLSSrc({ src, type: \"\" })) {\n    return \"application/x-mpegurl\";\n  } else if (!type && isDASHSrc({ src, type: \"\" })) {\n    return \"application/dash+xml\";\n  } else if (!isString(src) || src.startsWith(\"blob:\")) {\n    return \"video/object\";\n  } else if (src.includes(\"youtube\") || src.includes(\"youtu.be\")) {\n    return \"video/youtube\";\n  } else if (src.includes(\"vimeo\") && !src.includes(\"progressive_redirect\") && !src.includes(\".m3u8\")) {\n    return \"video/vimeo\";\n  }\n  return \"?\";\n}\nfunction isSameSrc(a, b) {\n  return a?.src === b?.src && a?.type === b?.type;\n}\n\nclass Tracks {\n  #domTracks;\n  #media;\n  #prevTracks = [];\n  constructor(domTracks, media) {\n    this.#domTracks = domTracks;\n    this.#media = media;\n    effect(this.#onTracksChange.bind(this));\n  }\n  #onTracksChange() {\n    const newTracks = this.#domTracks();\n    for (const oldTrack of this.#prevTracks) {\n      if (!newTracks.some((t) => t.id === oldTrack.id)) {\n        const track = oldTrack.id && this.#media.textTracks.getById(oldTrack.id);\n        if (track) this.#media.textTracks.remove(track);\n      }\n    }\n    for (const newTrack of newTracks) {\n      const id = newTrack.id || TextTrack.createId(newTrack);\n      if (!this.#media.textTracks.getById(id)) {\n        newTrack.id = id;\n        this.#media.textTracks.add(newTrack);\n      }\n    }\n    this.#prevTracks = newTracks;\n  }\n}\n\nclass MediaProvider extends Component {\n  static props = {\n    loaders: []\n  };\n  static state = new State({\n    loader: null\n  });\n  #media;\n  #sources;\n  #domSources = signal([]);\n  #domTracks = signal([]);\n  #loader = null;\n  onSetup() {\n    this.#media = useMediaContext();\n    this.#sources = new SourceSelection(\n      this.#domSources,\n      this.#media,\n      this.$state.loader,\n      this.$props.loaders()\n    );\n  }\n  onAttach(el) {\n    el.setAttribute(\"data-media-provider\", \"\");\n  }\n  onConnect(el) {\n    this.#sources.connect();\n    new Tracks(this.#domTracks, this.#media);\n    const resize = new ResizeObserver(animationFrameThrottle(this.#onResize.bind(this)));\n    resize.observe(el);\n    const mutations = new MutationObserver(this.#onMutation.bind(this));\n    mutations.observe(el, { attributes: true, childList: true });\n    this.#onResize();\n    this.#onMutation();\n    onDispose(() => {\n      resize.disconnect();\n      mutations.disconnect();\n    });\n  }\n  #loadRafId = -1;\n  load(target) {\n    target?.setAttribute(\"aria-hidden\", \"true\");\n    window.cancelAnimationFrame(this.#loadRafId);\n    this.#loadRafId = requestAnimationFrame(() => this.#runLoader(target));\n    onDispose(() => {\n      window.cancelAnimationFrame(this.#loadRafId);\n    });\n  }\n  #runLoader(target) {\n    if (!this.scope) return;\n    const loader = this.$state.loader(), { $provider } = this.#media;\n    if (this.#loader === loader && loader?.target === target && peek($provider)) return;\n    this.#destroyProvider();\n    this.#loader = loader;\n    if (loader) loader.target = target || null;\n    if (!loader || !target) return;\n    loader.load(this.#media).then((provider) => {\n      if (!this.scope) return;\n      if (peek(this.$state.loader) !== loader) return;\n      this.#media.notify(\"provider-change\", provider);\n    });\n  }\n  onDestroy() {\n    this.#loader = null;\n    this.#destroyProvider();\n  }\n  #destroyProvider() {\n    this.#media?.notify(\"provider-change\", null);\n  }\n  #onResize() {\n    if (!this.el) return;\n    const { player, $state } = this.#media, width = this.el.offsetWidth, height = this.el.offsetHeight;\n    if (!player) return;\n    $state.mediaWidth.set(width);\n    $state.mediaHeight.set(height);\n    if (player.el) {\n      setStyle(player.el, \"--media-width\", width + \"px\");\n      setStyle(player.el, \"--media-height\", height + \"px\");\n    }\n  }\n  #onMutation() {\n    const sources = [], tracks = [], children = this.el.children;\n    for (const el of children) {\n      if (el.hasAttribute(\"data-vds\")) continue;\n      if (el instanceof HTMLSourceElement) {\n        const src = {\n          id: el.id,\n          src: el.src,\n          type: el.type\n        };\n        for (const prop of [\"id\", \"src\", \"width\", \"height\", \"bitrate\", \"codec\"]) {\n          const value = el.getAttribute(`data-${prop}`);\n          if (isString(value)) src[prop] = /id|src|codec/.test(prop) ? value : Number(value);\n        }\n        sources.push(src);\n      } else if (el instanceof HTMLTrackElement) {\n        const track = {\n          src: el.src,\n          kind: el.track.kind,\n          language: el.srclang,\n          label: el.label,\n          default: el.default,\n          type: el.getAttribute(\"data-type\")\n        };\n        tracks.push({\n          id: el.id || TextTrack.createId(track),\n          ...track\n        });\n      }\n    }\n    this.#domSources.set(sources);\n    this.#domTracks.set(tracks);\n    tick();\n  }\n}\nconst mediaprovider__proto = MediaProvider.prototype;\nmethod(mediaprovider__proto, \"load\");\n\nexport { AudioProviderLoader, AudioTrackList, DASHProviderLoader, FullscreenController, HLSProviderLoader, List, LocalMediaStorage, Logger, MEDIA_KEY_SHORTCUTS, MediaControls, MediaPlayer, MediaProvider, MediaRemoteControl, ScreenOrientationController, TextRenderers, TextTrackList, VideoProviderLoader, VideoQualityList, VimeoProviderLoader, YouTubeProviderLoader, boundTime, canFullscreen, isAudioProvider, isDASHProvider, isGoogleCastProvider, isHLSProvider, isHTMLAudioElement, isHTMLIFrameElement, isHTMLMediaElement, isHTMLVideoElement, isVideoProvider, isVideoQualitySrc, isVimeoProvider, isYouTubeProvider, mediaState, softResetMediaState };\n"],
  "mappings": "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",
  "names": ["window", "prop", "method", "init", "method2", "canFullscreen", "isFullscreen", "h", "s"]
}
