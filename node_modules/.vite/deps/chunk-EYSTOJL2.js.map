{
  "version": 3,
  "sources": ["../../vidstack/dev/chunks/vidstack-zG6PIeGg.js"],
  "sourcesContent": ["import { isNull, isString, deferredPromise, isBoolean } from './vidstack-Bu2kfzUd.js';\nimport { isAudioSrc, isVideoSrc } from './vidstack-CjhKISI0.js';\n\nfunction appendParamsToURL(baseUrl, params) {\n  const url = new URL(baseUrl);\n  for (const key of Object.keys(params)) {\n    url.searchParams.set(key, params[key] + \"\");\n  }\n  return url.toString();\n}\nfunction preconnect(url, rel = \"preconnect\") {\n  const exists = document.querySelector(`link[href=\"${url}\"]`);\n  if (!isNull(exists)) return true;\n  const link = document.createElement(\"link\");\n  link.rel = rel;\n  link.href = url;\n  link.crossOrigin = \"true\";\n  document.head.append(link);\n  return true;\n}\nconst pendingRequests = {};\nfunction loadScript(src) {\n  if (pendingRequests[src]) return pendingRequests[src].promise;\n  const promise = deferredPromise(), exists = document.querySelector(`script[src=\"${src}\"]`);\n  if (!isNull(exists)) {\n    promise.resolve();\n    return promise.promise;\n  }\n  pendingRequests[src] = promise;\n  const script = document.createElement(\"script\");\n  script.src = src;\n  script.onload = () => {\n    promise.resolve();\n    delete pendingRequests[src];\n  };\n  script.onerror = () => {\n    promise.reject();\n    delete pendingRequests[src];\n  };\n  setTimeout(() => document.head.append(script), 0);\n  return promise.promise;\n}\nfunction getRequestCredentials(crossOrigin) {\n  return crossOrigin === \"use-credentials\" ? \"include\" : isString(crossOrigin) ? \"same-origin\" : void 0;\n}\nfunction getDownloadFile({\n  title,\n  src,\n  download\n}) {\n  const url = isBoolean(download) || download === \"\" ? src.src : isString(download) ? download : download?.url;\n  if (!isValidFileDownload({ url, src, download })) return null;\n  return {\n    url,\n    name: !isBoolean(download) && !isString(download) && download?.filename || title.toLowerCase() || \"media\"\n  };\n}\nfunction isValidFileDownload({\n  url,\n  src,\n  download\n}) {\n  return isString(url) && (download && download !== true || isAudioSrc(src) || isVideoSrc(src));\n}\n\nexport { appendParamsToURL, getDownloadFile, getRequestCredentials, loadScript, preconnect };\n"],
  "mappings": ";;;;;;;;;;;;AAGA,SAAS,kBAAkB,SAAS,QAAQ;AAC1C,QAAM,MAAM,IAAI,IAAI,OAAO;AAC3B,aAAW,OAAO,OAAO,KAAK,MAAM,GAAG;AACrC,QAAI,aAAa,IAAI,KAAK,OAAO,GAAG,IAAI,EAAE;AAAA,EAC5C;AACA,SAAO,IAAI,SAAS;AACtB;AACA,SAAS,WAAW,KAAK,MAAM,cAAc;AAC3C,QAAM,SAAS,SAAS,cAAc,cAAc,GAAG,IAAI;AAC3D,MAAI,CAAC,OAAO,MAAM,EAAG,QAAO;AAC5B,QAAM,OAAO,SAAS,cAAc,MAAM;AAC1C,OAAK,MAAM;AACX,OAAK,OAAO;AACZ,OAAK,cAAc;AACnB,WAAS,KAAK,OAAO,IAAI;AACzB,SAAO;AACT;AACA,IAAM,kBAAkB,CAAC;AACzB,SAAS,WAAW,KAAK;AACvB,MAAI,gBAAgB,GAAG,EAAG,QAAO,gBAAgB,GAAG,EAAE;AACtD,QAAM,UAAU,gBAAgB,GAAG,SAAS,SAAS,cAAc,eAAe,GAAG,IAAI;AACzF,MAAI,CAAC,OAAO,MAAM,GAAG;AACnB,YAAQ,QAAQ;AAChB,WAAO,QAAQ;AAAA,EACjB;AACA,kBAAgB,GAAG,IAAI;AACvB,QAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,SAAO,MAAM;AACb,SAAO,SAAS,MAAM;AACpB,YAAQ,QAAQ;AAChB,WAAO,gBAAgB,GAAG;AAAA,EAC5B;AACA,SAAO,UAAU,MAAM;AACrB,YAAQ,OAAO;AACf,WAAO,gBAAgB,GAAG;AAAA,EAC5B;AACA,aAAW,MAAM,SAAS,KAAK,OAAO,MAAM,GAAG,CAAC;AAChD,SAAO,QAAQ;AACjB;AACA,SAAS,sBAAsB,aAAa;AAC1C,SAAO,gBAAgB,oBAAoB,YAAY,SAAS,WAAW,IAAI,gBAAgB;AACjG;AACA,SAAS,gBAAgB;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AACF,GAAG;AACD,QAAM,MAAM,UAAU,QAAQ,KAAK,aAAa,KAAK,IAAI,MAAM,SAAS,QAAQ,IAAI,WAAW,UAAU;AACzG,MAAI,CAAC,oBAAoB,EAAE,KAAK,KAAK,SAAS,CAAC,EAAG,QAAO;AACzD,SAAO;AAAA,IACL;AAAA,IACA,MAAM,CAAC,UAAU,QAAQ,KAAK,CAAC,SAAS,QAAQ,KAAK,UAAU,YAAY,MAAM,YAAY,KAAK;AAAA,EACpG;AACF;AACA,SAAS,oBAAoB;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AACF,GAAG;AACD,SAAO,SAAS,GAAG,MAAM,YAAY,aAAa,QAAQ,WAAW,GAAG,KAAK,WAAW,GAAG;AAC7F;",
  "names": []
}
