{
  "version": 3,
  "sources": ["../../vidstack/dev/providers/vidstack-html.js", "../../vidstack/dev/chunks/vidstack-Bo5OTJ06.js"],
  "sourcesContent": ["import { IS_SAFARI, IS_IOS, isHLSSrc, isMediaStream } from '../chunks/vidstack-CjhKISI0.js';\nimport { signal, EventsController, effect, onDispose, peek, isNil, listenEvent, DOMEvent, createScope, setAttribute, isString } from '../chunks/vidstack-Bu2kfzUd.js';\nimport { RAFLoop } from '../chunks/vidstack-qh1N5_f_.js';\nimport { getNumberOfDecimalPlaces } from '../chunks/vidstack-Dihypf8P.js';\nimport { ListSymbol } from '../chunks/vidstack-Dv_LIPFu.js';\n\nlet audioContext = null, gainNodes = [], elAudioSources = [];\nfunction getOrCreateAudioCtx() {\n  return audioContext ??= new AudioContext();\n}\nfunction createGainNode() {\n  const audioCtx = getOrCreateAudioCtx(), gainNode = audioCtx.createGain();\n  gainNode.connect(audioCtx.destination);\n  gainNodes.push(gainNode);\n  return gainNode;\n}\nfunction createElementSource(el, gainNode) {\n  const audioCtx = getOrCreateAudioCtx(), src = audioCtx.createMediaElementSource(el);\n  if (gainNode) {\n    src.connect(gainNode);\n  }\n  elAudioSources.push(src);\n  return src;\n}\nfunction destroyGainNode(node) {\n  const idx = gainNodes.indexOf(node);\n  if (idx !== -1) {\n    gainNodes.splice(idx, 1);\n    node.disconnect();\n    freeAudioCtxWhenAllResourcesFreed();\n  }\n}\nfunction destroyElementSource(src) {\n  const idx = elAudioSources.indexOf(src);\n  if (idx !== -1) {\n    elAudioSources.splice(idx, 1);\n    src.disconnect();\n    freeAudioCtxWhenAllResourcesFreed();\n  }\n}\nfunction freeAudioCtxWhenAllResourcesFreed() {\n  if (audioContext && gainNodes.length === 0 && elAudioSources.length === 0) {\n    audioContext.close().then(() => {\n      audioContext = null;\n    });\n  }\n}\n\nclass AudioGain {\n  #media;\n  #onChange;\n  #gainNode = null;\n  #srcAudioNode = null;\n  get currentGain() {\n    return this.#gainNode?.gain?.value ?? null;\n  }\n  get supported() {\n    return true;\n  }\n  constructor(media, onChange) {\n    this.#media = media;\n    this.#onChange = onChange;\n  }\n  setGain(gain) {\n    const currGain = this.currentGain;\n    if (gain === this.currentGain) {\n      return;\n    }\n    if (gain === 1 && currGain !== 1) {\n      this.removeGain();\n      return;\n    }\n    if (!this.#gainNode) {\n      this.#gainNode = createGainNode();\n      if (this.#srcAudioNode) {\n        this.#srcAudioNode.connect(this.#gainNode);\n      }\n    }\n    if (!this.#srcAudioNode) {\n      this.#srcAudioNode = createElementSource(this.#media, this.#gainNode);\n    }\n    this.#gainNode.gain.value = gain;\n    this.#onChange(gain);\n  }\n  removeGain() {\n    if (!this.#gainNode) return;\n    if (this.#srcAudioNode) {\n      this.#srcAudioNode.connect(getOrCreateAudioCtx().destination);\n    }\n    this.#destroyGainNode();\n    this.#onChange(null);\n  }\n  destroy() {\n    this.#destroySrcNode();\n    this.#destroyGainNode();\n  }\n  #destroySrcNode() {\n    if (!this.#srcAudioNode) return;\n    try {\n      destroyElementSource(this.#srcAudioNode);\n    } catch (e) {\n    } finally {\n      this.#srcAudioNode = null;\n    }\n  }\n  #destroyGainNode() {\n    if (!this.#gainNode) return;\n    try {\n      destroyGainNode(this.#gainNode);\n    } catch (e) {\n    } finally {\n      this.#gainNode = null;\n    }\n  }\n}\n\nconst PAGE_EVENTS = [\"focus\", \"blur\", \"visibilitychange\", \"pageshow\", \"pagehide\"];\nclass PageVisibility {\n  #state = signal(determinePageState());\n  #visibility = signal(document.visibilityState);\n  #safariBeforeUnloadTimeout;\n  connect() {\n    const events = new EventsController(window), handlePageEvent = this.#handlePageEvent.bind(this);\n    for (const eventType of PAGE_EVENTS) {\n      events.add(eventType, handlePageEvent);\n    }\n    if (IS_SAFARI) {\n      events.add(\"beforeunload\", (event) => {\n        this.#safariBeforeUnloadTimeout = setTimeout(() => {\n          if (!(event.defaultPrevented || event.returnValue.length > 0)) {\n            this.#state.set(\"hidden\");\n            this.#visibility.set(\"hidden\");\n          }\n        }, 0);\n      });\n    }\n  }\n  /**\n   * The current page state. Important to note we only account for a subset of page states, as\n   * the rest aren't valuable to the player at the moment.\n   *\n   * - **active:** A page is in the active state if it is visible and has input focus.\n   * - **passive:** A page is in the passive state if it is visible and does not have input focus.\n   * - **hidden:** A page is in the hidden state if it is not visible.\n   *\n   * @see https://developers.google.com/web/updates/2018/07/page-lifecycle-api#states\n   */\n  get pageState() {\n    return this.#state();\n  }\n  /**\n   * The current document visibility state.\n   *\n   * - **visible:** The page content may be at least partially visible. In practice, this means that\n   * the page is the foreground tab of a non-minimized window.\n   * - **hidden:** The page content is not visible to the user. In practice this means that the\n   * document is either a background tab or part of a minimized window, or the OS screen lock is\n   * active.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilityState\n   */\n  get visibility() {\n    return this.#visibility();\n  }\n  #handlePageEvent(event) {\n    if (IS_SAFARI) window.clearTimeout(this.#safariBeforeUnloadTimeout);\n    if (event.type !== \"blur\" || this.#state() === \"active\") {\n      this.#state.set(determinePageState(event));\n      this.#visibility.set(document.visibilityState == \"hidden\" ? \"hidden\" : \"visible\");\n    }\n  }\n}\nfunction determinePageState(event) {\n  if (event?.type === \"blur\" || document.visibilityState === \"hidden\") return \"hidden\";\n  if (document.hasFocus()) return \"active\";\n  return \"passive\";\n}\n\nclass HTMLMediaEvents {\n  #provider;\n  #ctx;\n  #waiting = false;\n  #attachedLoadStart = false;\n  #attachedCanPlay = false;\n  #timeRAF = new RAFLoop(this.#onAnimationFrame.bind(this));\n  #pageVisibility = new PageVisibility();\n  #events;\n  get #media() {\n    return this.#provider.media;\n  }\n  constructor(provider, ctx) {\n    this.#provider = provider;\n    this.#ctx = ctx;\n    this.#events = new EventsController(provider.media);\n    this.#attachInitialListeners();\n    this.#pageVisibility.connect();\n    effect(this.#attachTimeUpdate.bind(this));\n    onDispose(this.#onDispose.bind(this));\n  }\n  #onDispose() {\n    this.#attachedLoadStart = false;\n    this.#attachedCanPlay = false;\n    this.#timeRAF.stop();\n    this.#events.abort();\n    this.#devHandlers?.clear();\n  }\n  /**\n   * The `timeupdate` event fires surprisingly infrequently during playback, meaning your progress\n   * bar (or whatever else is synced to the currentTime) moves in a choppy fashion. This helps\n   * resolve that by retrieving time updates in a request animation frame loop.\n   */\n  #lastSeenTime = 0;\n  #seekedTo = -1;\n  #onAnimationFrame() {\n    const newTime = this.#media.currentTime;\n    const didStutter = IS_SAFARI && newTime - this.#seekedTo < 0.35;\n    if (!didStutter && this.#lastSeenTime !== newTime) {\n      this.#updateCurrentTime(newTime);\n      this.#lastSeenTime = newTime;\n    }\n  }\n  #attachInitialListeners() {\n    {\n      this.#ctx.logger?.info(\"attaching initial listeners\");\n    }\n    this.#attachEventListener(\"loadstart\", this.#onLoadStart);\n    this.#attachEventListener(\"abort\", this.#onAbort);\n    this.#attachEventListener(\"emptied\", this.#onEmptied);\n    this.#attachEventListener(\"error\", this.#onError);\n    this.#attachEventListener(\"volumechange\", this.#onVolumeChange);\n    this.#ctx.logger?.debug(\"attached initial media event listeners\");\n  }\n  #attachLoadStartListeners() {\n    if (this.#attachedLoadStart) return;\n    {\n      this.#ctx.logger?.info(\"attaching load start listeners\");\n    }\n    this.#attachEventListener(\"loadeddata\", this.#onLoadedData);\n    this.#attachEventListener(\"loadedmetadata\", this.#onLoadedMetadata);\n    this.#attachEventListener(\"canplay\", this.#onCanPlay);\n    this.#attachEventListener(\"canplaythrough\", this.#onCanPlayThrough);\n    this.#attachEventListener(\"durationchange\", this.#onDurationChange);\n    this.#attachEventListener(\"play\", this.#onPlay);\n    this.#attachEventListener(\"progress\", this.#onProgress);\n    this.#attachEventListener(\"stalled\", this.#onStalled);\n    this.#attachEventListener(\"suspend\", this.#onSuspend);\n    this.#attachEventListener(\"ratechange\", this.#onRateChange);\n    this.#attachedLoadStart = true;\n  }\n  #attachCanPlayListeners() {\n    if (this.#attachedCanPlay) return;\n    {\n      this.#ctx.logger?.info(\"attaching can play listeners\");\n    }\n    this.#attachEventListener(\"pause\", this.#onPause);\n    this.#attachEventListener(\"playing\", this.#onPlaying);\n    this.#attachEventListener(\"seeked\", this.#onSeeked);\n    this.#attachEventListener(\"seeking\", this.#onSeeking);\n    this.#attachEventListener(\"ended\", this.#onEnded);\n    this.#attachEventListener(\"waiting\", this.#onWaiting);\n    this.#attachedCanPlay = true;\n  }\n  #devHandlers = /* @__PURE__ */ new Map() ;\n  #handleDevEvent = this.#onDevEvent.bind(this) ;\n  #attachEventListener(eventType, handler) {\n    this.#devHandlers.set(eventType, handler);\n    this.#events.add(eventType, this.#handleDevEvent );\n  }\n  #onDevEvent(event2) {\n    this.#ctx.logger?.debugGroup(`\\u{1F4FA} provider fired \\`${event2.type}\\``).labelledLog(\"Provider\", this.#provider).labelledLog(\"Event\", event2).labelledLog(\"Media Store\", { ...this.#ctx.$state }).dispatch();\n    this.#devHandlers.get(event2.type)?.call(this, event2);\n  }\n  #updateCurrentTime(time, trigger) {\n    const newTime = Math.min(time, this.#ctx.$state.seekableEnd());\n    this.#ctx.notify(\"time-change\", newTime, trigger);\n  }\n  #onLoadStart(event2) {\n    if (this.#media.networkState === 3) {\n      this.#onAbort(event2);\n      return;\n    }\n    this.#attachLoadStartListeners();\n    this.#ctx.notify(\"load-start\", void 0, event2);\n  }\n  #onAbort(event2) {\n    this.#ctx.notify(\"abort\", void 0, event2);\n  }\n  #onEmptied() {\n    this.#ctx.notify(\"emptied\", void 0, event);\n  }\n  #onLoadedData(event2) {\n    this.#ctx.notify(\"loaded-data\", void 0, event2);\n  }\n  #onLoadedMetadata(event2) {\n    this.#lastSeenTime = 0;\n    this.#seekedTo = -1;\n    this.#attachCanPlayListeners();\n    this.#ctx.notify(\"loaded-metadata\", void 0, event2);\n    if (IS_IOS || IS_SAFARI && isHLSSrc(this.#ctx.$state.source())) {\n      this.#ctx.delegate.ready(this.#getCanPlayDetail(), event2);\n    }\n  }\n  #getCanPlayDetail() {\n    return {\n      provider: peek(this.#ctx.$provider),\n      duration: this.#media.duration,\n      buffered: this.#media.buffered,\n      seekable: this.#media.seekable\n    };\n  }\n  #onPlay(event2) {\n    if (!this.#ctx.$state.canPlay) return;\n    this.#ctx.notify(\"play\", void 0, event2);\n  }\n  #onPause(event2) {\n    if (this.#media.readyState === 1 && !this.#waiting) return;\n    this.#waiting = false;\n    this.#timeRAF.stop();\n    this.#ctx.notify(\"pause\", void 0, event2);\n  }\n  #onCanPlay(event2) {\n    this.#ctx.delegate.ready(this.#getCanPlayDetail(), event2);\n  }\n  #onCanPlayThrough(event2) {\n    if (this.#ctx.$state.started()) return;\n    this.#ctx.notify(\"can-play-through\", this.#getCanPlayDetail(), event2);\n  }\n  #onPlaying(event2) {\n    if (this.#media.paused) return;\n    this.#waiting = false;\n    this.#ctx.notify(\"playing\", void 0, event2);\n    this.#timeRAF.start();\n  }\n  #onStalled(event2) {\n    this.#ctx.notify(\"stalled\", void 0, event2);\n    if (this.#media.readyState < 3) {\n      this.#waiting = true;\n      this.#ctx.notify(\"waiting\", void 0, event2);\n    }\n  }\n  #onWaiting(event2) {\n    if (this.#media.readyState < 3) {\n      this.#waiting = true;\n      this.#ctx.notify(\"waiting\", void 0, event2);\n    }\n  }\n  #onEnded(event2) {\n    this.#timeRAF.stop();\n    this.#updateCurrentTime(this.#media.duration, event2);\n    this.#ctx.notify(\"end\", void 0, event2);\n    if (this.#ctx.$state.loop()) {\n      const hasCustomControls = isNil(this.#media.controls);\n      if (hasCustomControls) this.#media.controls = false;\n    }\n  }\n  #attachTimeUpdate() {\n    const isPaused = this.#ctx.$state.paused(), isPageHidden = this.#pageVisibility.visibility === \"hidden\", shouldListenToTimeUpdates = isPaused || isPageHidden;\n    if (shouldListenToTimeUpdates) {\n      listenEvent(this.#media, \"timeupdate\", this.#onTimeUpdate.bind(this));\n    }\n  }\n  #onTimeUpdate(event2) {\n    this.#updateCurrentTime(this.#media.currentTime, event2);\n  }\n  #onDurationChange(event2) {\n    if (this.#ctx.$state.ended()) {\n      this.#updateCurrentTime(this.#media.duration, event2);\n    }\n    this.#ctx.notify(\"duration-change\", this.#media.duration, event2);\n  }\n  #onVolumeChange(event2) {\n    const detail = {\n      volume: this.#media.volume,\n      muted: this.#media.muted\n    };\n    this.#ctx.notify(\"volume-change\", detail, event2);\n  }\n  #onSeeked(event2) {\n    this.#seekedTo = this.#media.currentTime;\n    this.#updateCurrentTime(this.#media.currentTime, event2);\n    this.#ctx.notify(\"seeked\", this.#media.currentTime, event2);\n    if (Math.trunc(this.#media.currentTime) === Math.trunc(this.#media.duration) && getNumberOfDecimalPlaces(this.#media.duration) > getNumberOfDecimalPlaces(this.#media.currentTime)) {\n      this.#updateCurrentTime(this.#media.duration, event2);\n      if (!this.#media.ended) {\n        this.#ctx.player.dispatch(\n          new DOMEvent(\"media-play-request\", {\n            trigger: event2\n          })\n        );\n      }\n    }\n  }\n  #onSeeking(event2) {\n    this.#ctx.notify(\"seeking\", this.#media.currentTime, event2);\n  }\n  #onProgress(event2) {\n    const detail = {\n      buffered: this.#media.buffered,\n      seekable: this.#media.seekable\n    };\n    this.#ctx.notify(\"progress\", detail, event2);\n  }\n  #onSuspend(event2) {\n    this.#ctx.notify(\"suspend\", void 0, event2);\n  }\n  #onRateChange(event2) {\n    this.#ctx.notify(\"rate-change\", this.#media.playbackRate, event2);\n  }\n  #onError(event2) {\n    const error = this.#media.error;\n    if (!error) return;\n    const detail = {\n      message: error.message,\n      code: error.code,\n      mediaError: error\n    };\n    this.#ctx.notify(\"error\", detail, event2);\n  }\n}\n\nclass NativeAudioTracks {\n  #provider;\n  #ctx;\n  get #nativeTracks() {\n    return this.#provider.media.audioTracks;\n  }\n  constructor(provider, ctx) {\n    this.#provider = provider;\n    this.#ctx = ctx;\n    this.#nativeTracks.onaddtrack = this.#onAddNativeTrack.bind(this);\n    this.#nativeTracks.onremovetrack = this.#onRemoveNativeTrack.bind(this);\n    this.#nativeTracks.onchange = this.#onChangeNativeTrack.bind(this);\n    listenEvent(this.#ctx.audioTracks, \"change\", this.#onChangeTrack.bind(this));\n  }\n  #onAddNativeTrack(event) {\n    const nativeTrack = event.track;\n    if (nativeTrack.label === \"\") return;\n    const id = nativeTrack.id.toString() || `native-audio-${this.#ctx.audioTracks.length}`, audioTrack = {\n      id,\n      label: nativeTrack.label,\n      language: nativeTrack.language,\n      kind: nativeTrack.kind,\n      selected: false\n    };\n    this.#ctx.audioTracks[ListSymbol.add](audioTrack, event);\n    if (nativeTrack.enabled) audioTrack.selected = true;\n  }\n  #onRemoveNativeTrack(event) {\n    const track = this.#ctx.audioTracks.getById(event.track.id);\n    if (track) this.#ctx.audioTracks[ListSymbol.remove](track, event);\n  }\n  #onChangeNativeTrack(event) {\n    let enabledTrack = this.#getEnabledNativeTrack();\n    if (!enabledTrack) return;\n    const track = this.#ctx.audioTracks.getById(enabledTrack.id);\n    if (track) this.#ctx.audioTracks[ListSymbol.select](track, true, event);\n  }\n  #getEnabledNativeTrack() {\n    return Array.from(this.#nativeTracks).find((track) => track.enabled);\n  }\n  #onChangeTrack(event) {\n    const { current } = event.detail;\n    if (!current) return;\n    const track = this.#nativeTracks.getTrackById(current.id);\n    if (track) {\n      const prev = this.#getEnabledNativeTrack();\n      if (prev) prev.enabled = false;\n      track.enabled = true;\n    }\n  }\n}\n\nclass HTMLMediaProvider {\n  constructor(media, ctx) {\n    this.media = media;\n    this.ctx = ctx;\n    this.audioGain = new AudioGain(media, (gain) => {\n      this.ctx.notify(\"audio-gain-change\", gain);\n    });\n  }\n  scope = createScope();\n  currentSrc = null;\n  audioGain;\n  setup() {\n    new HTMLMediaEvents(this, this.ctx);\n    if (\"audioTracks\" in this.media) new NativeAudioTracks(this, this.ctx);\n    onDispose(() => {\n      this.audioGain.destroy();\n      this.media.srcObject = null;\n      this.media.removeAttribute(\"src\");\n      for (const source of this.media.querySelectorAll(\"source\")) source.remove();\n      this.media.load();\n    });\n  }\n  get type() {\n    return \"\";\n  }\n  setPlaybackRate(rate) {\n    this.media.playbackRate = rate;\n  }\n  async play() {\n    return this.media.play();\n  }\n  async pause() {\n    return this.media.pause();\n  }\n  setMuted(muted) {\n    this.media.muted = muted;\n  }\n  setVolume(volume) {\n    this.media.volume = volume;\n  }\n  setCurrentTime(time) {\n    this.media.currentTime = time;\n  }\n  setPlaysInline(inline) {\n    setAttribute(this.media, \"playsinline\", inline);\n  }\n  async loadSource({ src, type }, preload) {\n    this.media.preload = preload || \"\";\n    if (isMediaStream(src)) {\n      this.removeSource();\n      this.media.srcObject = src;\n    } else {\n      this.media.srcObject = null;\n      if (isString(src)) {\n        if (type !== \"?\") {\n          this.appendSource({ src, type });\n        } else {\n          this.removeSource();\n          this.media.src = this.#appendMediaFragment(src);\n        }\n      } else {\n        this.removeSource();\n        this.media.src = window.URL.createObjectURL(src);\n      }\n    }\n    this.media.load();\n    this.currentSrc = { src, type };\n  }\n  /**\n   * Append source so it works when requesting AirPlay since hls.js will remove it.\n   */\n  appendSource(src, defaultType) {\n    const prevSource = this.media.querySelector(\"source[data-vds]\"), source = prevSource ?? document.createElement(\"source\");\n    setAttribute(source, \"src\", this.#appendMediaFragment(src.src));\n    setAttribute(source, \"type\", src.type !== \"?\" ? src.type : defaultType);\n    setAttribute(source, \"data-vds\", \"\");\n    if (!prevSource) this.media.append(source);\n  }\n  removeSource() {\n    this.media.querySelector(\"source[data-vds]\")?.remove();\n  }\n  #appendMediaFragment(src) {\n    const { clipStartTime, clipEndTime } = this.ctx.$state, startTime = clipStartTime(), endTime = clipEndTime();\n    if (startTime > 0 && endTime > 0) {\n      return `${src}#t=${startTime},${endTime}`;\n    } else if (startTime > 0) {\n      return `${src}#t=${startTime}`;\n    } else if (endTime > 0) {\n      return `${src}#t=0,${endTime}`;\n    }\n    return src;\n  }\n}\n\nexport { HTMLMediaProvider };\n", "import { signal, effect, listenEvent, EventsController } from './vidstack-Bu2kfzUd.js';\nimport './vidstack-CjhKISI0.js';\n\nclass HTMLRemotePlaybackAdapter {\n  #media;\n  #ctx;\n  #state;\n  #supported = signal(false);\n  get supported() {\n    return this.#supported();\n  }\n  constructor(media, ctx) {\n    this.#media = media;\n    this.#ctx = ctx;\n    this.#setup();\n  }\n  #setup() {\n    if (!this.#media?.remote || !this.canPrompt) return;\n    this.#media.remote.watchAvailability((available) => {\n      this.#supported.set(available);\n    }).catch(() => {\n      this.#supported.set(false);\n    });\n    effect(this.#watchSupported.bind(this));\n  }\n  #watchSupported() {\n    if (!this.#supported()) return;\n    const events = [\"connecting\", \"connect\", \"disconnect\"], onStateChange = this.#onStateChange.bind(this);\n    onStateChange();\n    listenEvent(this.#media, \"playing\", onStateChange);\n    const remoteEvents = new EventsController(this.#media.remote);\n    for (const type of events) {\n      remoteEvents.add(type, onStateChange);\n    }\n  }\n  async prompt() {\n    if (!this.supported) throw Error(\"Not supported on this platform.\");\n    if (this.type === \"airplay\" && this.#media.webkitShowPlaybackTargetPicker) {\n      return this.#media.webkitShowPlaybackTargetPicker();\n    }\n    return this.#media.remote.prompt();\n  }\n  #onStateChange(event) {\n    const state = this.#media.remote.state;\n    if (state === this.#state) return;\n    const detail = { type: this.type, state };\n    this.#ctx.notify(\"remote-playback-change\", detail, event);\n    this.#state = state;\n  }\n}\nclass HTMLAirPlayAdapter extends HTMLRemotePlaybackAdapter {\n  type = \"airplay\";\n  get canPrompt() {\n    return \"WebKitPlaybackTargetAvailabilityEvent\" in window;\n  }\n}\n\nexport { HTMLAirPlayAdapter };\n"],
  "mappings": "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",
  "names": ["event", "event"]
}
